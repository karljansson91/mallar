{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _splitText = _interopRequireDefault(require(\"../text/splitText\"));\n\nvar _splitNode = _interopRequireDefault(require(\"../node/splitNode\"));\n\nvar _createInstance = _interopRequireDefault(require(\"../node/createInstance\"));\n\nvar _shouldBreak = _interopRequireDefault(require(\"../node/shouldBreak\"));\n\nvar _getContentArea = _interopRequireDefault(require(\"../page/getContentArea\"));\n\nvar _resolveTextLayout = _interopRequireDefault(require(\"./resolveTextLayout\"));\n\nvar _resolveInheritance = _interopRequireDefault(require(\"./resolveInheritance\"));\n\nvar _resolveDimensions = require(\"./resolveDimensions\");\n/* eslint-disable prefer-destructuring */\n\n\nconst isText = R.propEq('type', P.Text); // Prevent splitting elements by low decimal numbers\n\nconst SAFTY_THRESHOLD = 0.001;\nconst assingChildren = R.assoc('children');\nconst getTop = R.pathOr(0, ['box', 'top']);\nconst getHeight = R.path(['box', 'height']);\nconst getChildren = R.propOr([], 'children');\nconst isElementOutside = R.useWith(R.lte, [R.identity, getTop]);\nconst isFixed = R.pathEq(['props', 'fixed'], true);\nconst allFixed = R.all(isFixed);\nconst isDynamic = R.hasPath(['props', 'render']);\n\nconst compose = (...fns) => (value, ...args) => {\n  let result = value;\n  const reversedFns = R.reverse(fns);\n\n  for (let i = 0; i < reversedFns.length; i += 1) {\n    const fn = reversedFns[i];\n    result = fn(result, ...args);\n  }\n\n  return result;\n};\n\nconst relayoutPage = compose(_resolveTextLayout.default, _resolveInheritance.default, _resolveDimensions.resolvePageDimensions);\n\nconst splitView = (node, height) => {\n  const [currentNode, nextNode] = (0, _splitNode.default)(node, height);\n  const [currentChilds, nextChildren] = splitChildren(height, node);\n  return [assingChildren(currentChilds)(currentNode), assingChildren(nextChildren)(nextNode)];\n};\n\nconst split = R.ifElse(isText, _splitText.default, splitView);\n\nconst splitNodes = (height, nodes) => {\n  const currentChildren = [];\n  const nextChildren = [];\n\n  for (let i = 0; i < nodes.length; i += 1) {\n    const child = nodes[i];\n    const futureNodes = nodes.slice(i + 1);\n    const futureFixedNodes = R.filter(isFixed, futureNodes);\n    const nodeTop = getTop(child);\n    const nodeHeight = getHeight(child);\n    const isOutside = isElementOutside(height, child);\n    const shouldBreak = (0, _shouldBreak.default)(child, futureNodes, height);\n    const shouldSplit = height + SAFTY_THRESHOLD < nodeTop + nodeHeight;\n\n    if (isFixed(child)) {\n      nextChildren.push(child);\n      currentChildren.push(child);\n      continue;\n    }\n\n    if (isOutside) {\n      const next = R.evolve({\n        box: {\n          top: R.subtract(R.__, height)\n        }\n      })(child);\n      nextChildren.push(next);\n      continue;\n    }\n\n    if (shouldBreak) {\n      const next = R.evolve({\n        box: {\n          top: R.subtract(R.__, height)\n        },\n        props: R.evolve({\n          break: R.always(false)\n        })\n      })(child);\n      currentChildren.push(...futureFixedNodes);\n      nextChildren.push(next, ...futureNodes);\n      break;\n    }\n\n    if (shouldSplit) {\n      const [currentChild, nextChild] = split(child, height);\n      if (currentChild) currentChildren.push(currentChild);\n      if (nextChild) nextChildren.push(nextChild);\n      continue;\n    }\n\n    currentChildren.push(child);\n  }\n\n  return [currentChildren, nextChildren];\n};\n\nconst splitChildren = (height, node) => {\n  const children = getChildren(node);\n  const availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, children);\n};\n\nconst splitPage = (page, pageNumber, fontStore) => {\n  const contentArea = (0, _getContentArea.default)(page);\n  const height = R.path(['style', 'height'], page);\n  const dynamicPage = resolveDynamicPage({\n    pageNumber\n  }, page, fontStore);\n  const [currentChilds, nextChilds] = splitNodes(contentArea, dynamicPage.children);\n\n  const relayout = node => relayoutPage(node, fontStore);\n\n  const currentPage = R.compose(relayout, assingChildren(currentChilds), R.assocPath(['box', 'height'], height))(page);\n  if (R.isEmpty(nextChilds) || allFixed(nextChilds)) return [currentPage, null];\n  const nextPage = R.compose(relayout, assingChildren(nextChilds), R.dissocPath(['box', 'height']))(page);\n  return [currentPage, nextPage];\n};\n\nconst shouldResolveDynamicNodes = node => R.either(isDynamic, R.compose(R.any(shouldResolveDynamicNodes), R.propOr([], 'children')))(node);\n\nconst resolveDynamicPage = (props, page, fontStore) => {\n  const relayout = node => relayoutPage(node, fontStore);\n\n  return R.when(shouldResolveDynamicNodes, R.compose(relayout, resolveDynamicNodes(props)))(page);\n};\n\nconst resolveDynamicNodes = props => node => {\n  const isNodeDynamic = R.always(isDynamic(node));\n\n  const resolveRender = () => {\n    const res = node.props.render(props);\n    return [(0, _createInstance.default)(res)];\n  };\n\n  return R.evolve({\n    children: R.ifElse(isNodeDynamic, resolveRender, R.map(resolveDynamicNodes(props))),\n    lines: R.when(isNodeDynamic, R.always([]))\n  }, node);\n};\n\nconst paginate = (page, pageNumber, fontStore) => {\n  if (!page) return [];\n  let splittedPage = splitPage(page, pageNumber, fontStore);\n  const pages = [splittedPage[0]];\n  let nextPage = splittedPage[1];\n\n  while (nextPage !== null) {\n    splittedPage = splitPage(nextPage, pageNumber + pages.length, fontStore);\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n\n  return pages;\n};\n\nconst resolvePageIndices = fontStore => (page, pageNumber, pages) => {\n  const totalPages = pages.length;\n  return resolveDynamicPage({\n    pageNumber: pageNumber + 1,\n    totalPages\n  }, page, fontStore);\n};\n\nconst resolvePagination = (doc, fontStore) => {\n  let pages = [];\n  let pageNumber = 1;\n\n  for (let i = 0; i < doc.children.length; i += 1) {\n    const page = doc.children[i];\n    const subpages = paginate(page, pageNumber, fontStore);\n    pageNumber += subpages.length;\n    pages = pages.concat(subpages);\n  }\n\n  pages = pages.map(resolvePageIndices(fontStore));\n  return assingChildren(pages, doc);\n};\n\nvar _default = resolvePagination;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/layout/lib/steps/resolvePagination.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","P","_splitText","_splitNode","_createInstance","_shouldBreak","_getContentArea","_resolveTextLayout","_resolveInheritance","_resolveDimensions","isText","propEq","Text","SAFTY_THRESHOLD","assingChildren","assoc","getTop","pathOr","getHeight","path","getChildren","propOr","isElementOutside","useWith","lte","identity","isFixed","pathEq","allFixed","all","isDynamic","hasPath","compose","fns","value","args","result","reversedFns","reverse","i","length","fn","relayoutPage","resolvePageDimensions","splitView","node","height","currentNode","nextNode","currentChilds","nextChildren","splitChildren","split","ifElse","splitNodes","nodes","currentChildren","child","futureNodes","slice","futureFixedNodes","filter","nodeTop","nodeHeight","isOutside","shouldBreak","shouldSplit","push","next","evolve","box","top","subtract","__","props","break","always","currentChild","nextChild","children","availableHeight","splitPage","page","pageNumber","fontStore","contentArea","dynamicPage","resolveDynamicPage","nextChilds","relayout","currentPage","assocPath","isEmpty","nextPage","dissocPath","shouldResolveDynamicNodes","either","any","when","resolveDynamicNodes","isNodeDynamic","resolveRender","res","render","map","lines","paginate","splittedPage","pages","resolvePageIndices","totalPages","resolvePagination","doc","subpages","concat","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _splitText = _interopRequireDefault(require(\"../text/splitText\"));\n\nvar _splitNode = _interopRequireDefault(require(\"../node/splitNode\"));\n\nvar _createInstance = _interopRequireDefault(require(\"../node/createInstance\"));\n\nvar _shouldBreak = _interopRequireDefault(require(\"../node/shouldBreak\"));\n\nvar _getContentArea = _interopRequireDefault(require(\"../page/getContentArea\"));\n\nvar _resolveTextLayout = _interopRequireDefault(require(\"./resolveTextLayout\"));\n\nvar _resolveInheritance = _interopRequireDefault(require(\"./resolveInheritance\"));\n\nvar _resolveDimensions = require(\"./resolveDimensions\");\n\n/* eslint-disable prefer-destructuring */\nconst isText = R.propEq('type', P.Text); // Prevent splitting elements by low decimal numbers\n\nconst SAFTY_THRESHOLD = 0.001;\nconst assingChildren = R.assoc('children');\nconst getTop = R.pathOr(0, ['box', 'top']);\nconst getHeight = R.path(['box', 'height']);\nconst getChildren = R.propOr([], 'children');\nconst isElementOutside = R.useWith(R.lte, [R.identity, getTop]);\nconst isFixed = R.pathEq(['props', 'fixed'], true);\nconst allFixed = R.all(isFixed);\nconst isDynamic = R.hasPath(['props', 'render']);\n\nconst compose = (...fns) => (value, ...args) => {\n  let result = value;\n  const reversedFns = R.reverse(fns);\n\n  for (let i = 0; i < reversedFns.length; i += 1) {\n    const fn = reversedFns[i];\n    result = fn(result, ...args);\n  }\n\n  return result;\n};\n\nconst relayoutPage = compose(_resolveTextLayout.default, _resolveInheritance.default, _resolveDimensions.resolvePageDimensions);\n\nconst splitView = (node, height) => {\n  const [currentNode, nextNode] = (0, _splitNode.default)(node, height);\n  const [currentChilds, nextChildren] = splitChildren(height, node);\n  return [assingChildren(currentChilds)(currentNode), assingChildren(nextChildren)(nextNode)];\n};\n\nconst split = R.ifElse(isText, _splitText.default, splitView);\n\nconst splitNodes = (height, nodes) => {\n  const currentChildren = [];\n  const nextChildren = [];\n\n  for (let i = 0; i < nodes.length; i += 1) {\n    const child = nodes[i];\n    const futureNodes = nodes.slice(i + 1);\n    const futureFixedNodes = R.filter(isFixed, futureNodes);\n    const nodeTop = getTop(child);\n    const nodeHeight = getHeight(child);\n    const isOutside = isElementOutside(height, child);\n    const shouldBreak = (0, _shouldBreak.default)(child, futureNodes, height);\n    const shouldSplit = height + SAFTY_THRESHOLD < nodeTop + nodeHeight;\n\n    if (isFixed(child)) {\n      nextChildren.push(child);\n      currentChildren.push(child);\n      continue;\n    }\n\n    if (isOutside) {\n      const next = R.evolve({\n        box: {\n          top: R.subtract(R.__, height)\n        }\n      })(child);\n      nextChildren.push(next);\n      continue;\n    }\n\n    if (shouldBreak) {\n      const next = R.evolve({\n        box: {\n          top: R.subtract(R.__, height)\n        },\n        props: R.evolve({\n          break: R.always(false)\n        })\n      })(child);\n      currentChildren.push(...futureFixedNodes);\n      nextChildren.push(next, ...futureNodes);\n      break;\n    }\n\n    if (shouldSplit) {\n      const [currentChild, nextChild] = split(child, height);\n      if (currentChild) currentChildren.push(currentChild);\n      if (nextChild) nextChildren.push(nextChild);\n      continue;\n    }\n\n    currentChildren.push(child);\n  }\n\n  return [currentChildren, nextChildren];\n};\n\nconst splitChildren = (height, node) => {\n  const children = getChildren(node);\n  const availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, children);\n};\n\nconst splitPage = (page, pageNumber, fontStore) => {\n  const contentArea = (0, _getContentArea.default)(page);\n  const height = R.path(['style', 'height'], page);\n  const dynamicPage = resolveDynamicPage({\n    pageNumber\n  }, page, fontStore);\n  const [currentChilds, nextChilds] = splitNodes(contentArea, dynamicPage.children);\n\n  const relayout = node => relayoutPage(node, fontStore);\n\n  const currentPage = R.compose(relayout, assingChildren(currentChilds), R.assocPath(['box', 'height'], height))(page);\n  if (R.isEmpty(nextChilds) || allFixed(nextChilds)) return [currentPage, null];\n  const nextPage = R.compose(relayout, assingChildren(nextChilds), R.dissocPath(['box', 'height']))(page);\n  return [currentPage, nextPage];\n};\n\nconst shouldResolveDynamicNodes = node => R.either(isDynamic, R.compose(R.any(shouldResolveDynamicNodes), R.propOr([], 'children')))(node);\n\nconst resolveDynamicPage = (props, page, fontStore) => {\n  const relayout = node => relayoutPage(node, fontStore);\n\n  return R.when(shouldResolveDynamicNodes, R.compose(relayout, resolveDynamicNodes(props)))(page);\n};\n\nconst resolveDynamicNodes = props => node => {\n  const isNodeDynamic = R.always(isDynamic(node));\n\n  const resolveRender = () => {\n    const res = node.props.render(props);\n    return [(0, _createInstance.default)(res)];\n  };\n\n  return R.evolve({\n    children: R.ifElse(isNodeDynamic, resolveRender, R.map(resolveDynamicNodes(props))),\n    lines: R.when(isNodeDynamic, R.always([]))\n  }, node);\n};\n\nconst paginate = (page, pageNumber, fontStore) => {\n  if (!page) return [];\n  let splittedPage = splitPage(page, pageNumber, fontStore);\n  const pages = [splittedPage[0]];\n  let nextPage = splittedPage[1];\n\n  while (nextPage !== null) {\n    splittedPage = splitPage(nextPage, pageNumber + pages.length, fontStore);\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n\n  return pages;\n};\n\nconst resolvePageIndices = fontStore => (page, pageNumber, pages) => {\n  const totalPages = pages.length;\n  return resolveDynamicPage({\n    pageNumber: pageNumber + 1,\n    totalPages\n  }, page, fontStore);\n};\n\nconst resolvePagination = (doc, fontStore) => {\n  let pages = [];\n  let pageNumber = 1;\n\n  for (let i = 0; i < doc.children.length; i += 1) {\n    const page = doc.children[i];\n    const subpages = paginate(page, pageNumber, fontStore);\n    pageNumber += subpages.length;\n    pages = pages.concat(subpages);\n  }\n\n  pages = pages.map(resolvePageIndices(fontStore));\n  return assingChildren(pages, doc);\n};\n\nvar _default = resolvePagination;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}