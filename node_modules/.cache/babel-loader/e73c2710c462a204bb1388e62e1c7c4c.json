{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = exports.transformColor = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _hslToHex = _interopRequireDefault(require(\"hsl-to-hex\"));\n\nvar _colorString = _interopRequireDefault(require(\"color-string\"));\n\nconst isRgb = R.test(/rgb/g);\nconst isRgba = R.test(/rgba/g);\nconst isHsl = R.test(/hsl/g);\nconst isHsla = R.test(/hsla/g);\n/**\n * Transform rgb color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\nconst parseRgb = R.compose(_colorString.default.to.hex, _colorString.default.get.rgb);\n/**\n * Transform Hsl color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\nconst parseHsl = R.compose(R.toUpper, R.apply(_hslToHex.default), R.map(Math.round), _colorString.default.get.hsl);\n/**\n * Transform given color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\nconst transformColor = value => R.cond([[isRgba, parseRgb], [isRgb, parseRgb], [isHsla, parseHsl], [isHsl, parseHsl], [R.T, R.always(value)]])(value);\n/**\n * Transform rbg and cmyk colors to hexa\n *\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\n\n\nexports.transformColor = transformColor;\n\nconst transformColors = styles => R.map(transformColor, styles);\n\nvar _default = transformColors;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/stylesheet/lib/colors.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","transformColor","R","_hslToHex","_colorString","isRgb","test","isRgba","isHsl","isHsla","parseRgb","compose","to","hex","get","rgb","parseHsl","toUpper","apply","map","Math","round","hsl","value","cond","T","always","transformColors","styles","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,cAAR,GAAyB,KAAK,CAAhD;;AAEA,IAAIC,CAAC,GAAGL,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIO,SAAS,GAAGR,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAtC;;AAEA,IAAIQ,YAAY,GAAGT,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAzC;;AAEA,MAAMS,KAAK,GAAGH,CAAC,CAACI,IAAF,CAAO,MAAP,CAAd;AACA,MAAMC,MAAM,GAAGL,CAAC,CAACI,IAAF,CAAO,OAAP,CAAf;AACA,MAAME,KAAK,GAAGN,CAAC,CAACI,IAAF,CAAO,MAAP,CAAd;AACA,MAAMG,MAAM,GAAGP,CAAC,CAACI,IAAF,CAAO,OAAP,CAAf;AACA;;;;;;;AAOA,MAAMI,QAAQ,GAAGR,CAAC,CAACS,OAAF,CAAUP,YAAY,CAACJ,OAAb,CAAqBY,EAArB,CAAwBC,GAAlC,EAAuCT,YAAY,CAACJ,OAAb,CAAqBc,GAArB,CAAyBC,GAAhE,CAAjB;AACA;;;;;;;AAOA,MAAMC,QAAQ,GAAGd,CAAC,CAACS,OAAF,CAAUT,CAAC,CAACe,OAAZ,EAAqBf,CAAC,CAACgB,KAAF,CAAQf,SAAS,CAACH,OAAlB,CAArB,EAAiDE,CAAC,CAACiB,GAAF,CAAMC,IAAI,CAACC,KAAX,CAAjD,EAAoEjB,YAAY,CAACJ,OAAb,CAAqBc,GAArB,CAAyBQ,GAA7F,CAAjB;AACA;;;;;;;AAOA,MAAMrB,cAAc,GAAGsB,KAAK,IAAIrB,CAAC,CAACsB,IAAF,CAAO,CAAC,CAACjB,MAAD,EAASG,QAAT,CAAD,EAAqB,CAACL,KAAD,EAAQK,QAAR,CAArB,EAAwC,CAACD,MAAD,EAASO,QAAT,CAAxC,EAA4D,CAACR,KAAD,EAAQQ,QAAR,CAA5D,EAA+E,CAACd,CAAC,CAACuB,CAAH,EAAMvB,CAAC,CAACwB,MAAF,CAASH,KAAT,CAAN,CAA/E,CAAP,EAA+GA,KAA/G,CAAhC;AACA;;;;;;;;AAQAzB,OAAO,CAACG,cAAR,GAAyBA,cAAzB;;AAEA,MAAM0B,eAAe,GAAGC,MAAM,IAAI1B,CAAC,CAACiB,GAAF,CAAMlB,cAAN,EAAsB2B,MAAtB,CAAlC;;AAEA,IAAIC,QAAQ,GAAGF,eAAf;AACA7B,OAAO,CAACE,OAAR,GAAkB6B,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = exports.transformColor = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _hslToHex = _interopRequireDefault(require(\"hsl-to-hex\"));\n\nvar _colorString = _interopRequireDefault(require(\"color-string\"));\n\nconst isRgb = R.test(/rgb/g);\nconst isRgba = R.test(/rgba/g);\nconst isHsl = R.test(/hsl/g);\nconst isHsla = R.test(/hsla/g);\n/**\n * Transform rgb color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\nconst parseRgb = R.compose(_colorString.default.to.hex, _colorString.default.get.rgb);\n/**\n * Transform Hsl color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\nconst parseHsl = R.compose(R.toUpper, R.apply(_hslToHex.default), R.map(Math.round), _colorString.default.get.hsl);\n/**\n * Transform given color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\nconst transformColor = value => R.cond([[isRgba, parseRgb], [isRgb, parseRgb], [isHsla, parseHsl], [isHsl, parseHsl], [R.T, R.always(value)]])(value);\n/**\n * Transform rbg and cmyk colors to hexa\n *\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\n\n\nexports.transformColor = transformColor;\n\nconst transformColors = styles => R.map(transformColor, styles);\n\nvar _default = transformColors;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}