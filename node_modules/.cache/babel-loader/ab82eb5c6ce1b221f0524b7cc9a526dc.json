{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _isHeightAuto = _interopRequireDefault(require(\"../page/isHeightAuto\"));\n/* eslint-disable no-param-reassign */\n\n\nconst SAFETY_HEIGHT = 10;\nconst getMax = R.reduce(R.max, -Infinity);\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\n\nconst measureCtx = () => {\n  const ctx = {};\n  const points = [];\n\n  const nil = () => ctx;\n\n  const addPoint = (x, y) => points.push([x, y]);\n\n  const moveTo = R.compose(nil, addPoint);\n\n  const rect = (x, y, w, h) => {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  const ellipse = (x, y, rx, ry) => {\n    ry = ry || rx;\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n    return ctx;\n  };\n\n  const polygon = (...pts) => {\n    points.push(...pts);\n    return nil();\n  }; // Change dimensions\n\n\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect; // To be implemented\n\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil; // These don't change dimensions\n\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = () => R.compose(getMax, R.pluck(0))(points);\n\n  ctx.getHeight = () => R.compose(getMax, R.pluck(1))(points);\n\n  return ctx;\n};\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\n\nconst measureCanvas = (page, node) => {\n  const imageMargin = (0, _getMargin.default)(node);\n  const pagePadding = (0, _getPadding.default)(page);\n  const pageArea = (0, _isHeightAuto.default)(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT;\n  const ctx = measureCtx();\n  node.props.paint(ctx);\n  const width = ctx.getWidth();\n  const height = Math.min(pageArea, ctx.getHeight());\n  return {\n    height,\n    width\n  };\n};\n\nvar _default = R.curryN(6, measureCanvas);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/layout/lib/canvas/measureCanvas.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_getMargin","_getPadding","_isHeightAuto","SAFETY_HEIGHT","getMax","reduce","max","Infinity","measureCtx","ctx","points","nil","addPoint","x","y","push","moveTo","compose","rect","w","h","ellipse","rx","ry","polygon","pts","lineTo","circle","roundedRect","text","path","lineWidth","bezierCurveTo","quadraticCurveTo","scale","rotate","translate","dash","clip","save","fill","font","stroke","lineCap","opacity","restore","lineJoin","fontSize","fillColor","miterLimit","strokeColor","fillOpacity","strokeOpacity","linearGradient","radialGradient","getWidth","pluck","getHeight","measureCanvas","page","node","imageMargin","pagePadding","pageArea","box","height","paddingTop","paddingBottom","marginTop","marginBottom","props","paint","width","Math","min","_default","curryN"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _isHeightAuto = _interopRequireDefault(require(\"../page/isHeightAuto\"));\n\n/* eslint-disable no-param-reassign */\nconst SAFETY_HEIGHT = 10;\nconst getMax = R.reduce(R.max, -Infinity);\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\n\nconst measureCtx = () => {\n  const ctx = {};\n  const points = [];\n\n  const nil = () => ctx;\n\n  const addPoint = (x, y) => points.push([x, y]);\n\n  const moveTo = R.compose(nil, addPoint);\n\n  const rect = (x, y, w, h) => {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  const ellipse = (x, y, rx, ry) => {\n    ry = ry || rx;\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n    return ctx;\n  };\n\n  const polygon = (...pts) => {\n    points.push(...pts);\n    return nil();\n  }; // Change dimensions\n\n\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect; // To be implemented\n\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil; // These don't change dimensions\n\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = () => R.compose(getMax, R.pluck(0))(points);\n\n  ctx.getHeight = () => R.compose(getMax, R.pluck(1))(points);\n\n  return ctx;\n};\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\n\nconst measureCanvas = (page, node) => {\n  const imageMargin = (0, _getMargin.default)(node);\n  const pagePadding = (0, _getPadding.default)(page);\n  const pageArea = (0, _isHeightAuto.default)(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT;\n  const ctx = measureCtx();\n  node.props.paint(ctx);\n  const width = ctx.getWidth();\n  const height = Math.min(pageArea, ctx.getHeight());\n  return {\n    height,\n    width\n  };\n};\n\nvar _default = R.curryN(6, measureCanvas);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}