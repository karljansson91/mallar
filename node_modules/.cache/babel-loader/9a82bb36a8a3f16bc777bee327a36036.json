{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = exports.processObjectPosition = exports.processFontWeight = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _shorthands = _interopRequireDefault(require(\"./shorthands\"));\n\nconst BOX_MODEL_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh|px)?/g;\nconst OBJECT_POSITION_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh|px)?/g;\nconst BORDER_SHORTHAND_REGEX = /(\\d+(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nconst TRANSFORM_ORIGIN_REGEX = /(-?\\d+(px|in|mm|cm|pt|%|vw|vh|px)?)|top|right|bottom|left|center/g;\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\nconst matchBoxModel = R.match(BOX_MODEL_REGEX);\nconst matchObjectPosition = R.match(OBJECT_POSITION_REGEX);\nconst matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\nconst matchTransformOrigin = R.match(TRANSFORM_ORIGIN_REGEX);\nconst isNumber = R.is(Number);\nconst FONT_WEIGHT_REGEX = /^fontWeight/;\n\nconst isFontWeightStyle = key => key.match(FONT_WEIGHT_REGEX);\n\nconst BORDER_STYLE_REGEX = /^border(Top|Right|Bottom|Left)(Color|Width|Style)/;\n\nconst isBorderStyle = (key, value) => key.match(BORDER_STYLE_REGEX) && typeof value === 'string';\n\nconst BOX_MODEL_STYLE_REGEX = /^(margin)|(padding)/;\n\nconst isBoxModelStyle = (key, value) => key.match(BOX_MODEL_STYLE_REGEX) && typeof value === 'string';\n\nconst OBJECT_POSITION_STYLE_REGEX = /^objectPosition/;\n\nconst isObjectPositionStyle = (key, value) => key.match(OBJECT_POSITION_STYLE_REGEX) && typeof value === 'string';\n\nconst isTransformOriginStyle = (key, value) => key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst isFlexGrow = key => key === 'flexGrow';\n\nconst isFlexShrink = key => key === 'flexShrink';\n\nconst isFlexBasis = key => key === 'flexBasis';\n\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/Color$/)) {\n      return match[4] || value;\n    }\n\n    if (key.match(/Style$/)) {\n      return match[3] || value;\n    }\n\n    if (key.match(/Width$/)) {\n      return match[1] || value;\n    }\n\n    throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n  }\n\n  return value;\n};\n\nconst processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/Top$/)) {\n      return match[0];\n    }\n\n    if (key.match(/Right$/)) {\n      return match[1] || match[0];\n    }\n\n    if (key.match(/Bottom$/)) {\n      return match[2] || match[0];\n    }\n\n    if (key.match(/Left$/)) {\n      return match[3] || match[1] || match[0];\n    }\n\n    throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n  }\n\n  return value;\n};\n\nconst processFontWeight = (key, value) => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n\nexports.processFontWeight = processFontWeight;\n\nconst processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/X$/)) {\n      return match[0] || value;\n    }\n\n    if (key.match(/Y$/)) {\n      return match[1] || value;\n    }\n\n    throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n  }\n\n  return value;\n};\n\nexports.processObjectPosition = processObjectPosition;\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n\n    case 'right':\n    case 'bottom':\n      return '100%';\n\n    case 'center':\n      return '50%';\n\n    default:\n      return value;\n  }\n}; // Transforms shorthand transformOrigin values\n\n\nconst processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/X$/)) {\n      result = match[0] || value;\n    } else if (key.match(/Y$/)) {\n      result = match[1] || match[0] || value;\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n\nconst processFlexGrow = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[0];\n};\n\nconst processFlexShrink = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[1];\n};\n\nconst processFlexBasis = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[2];\n};\n\nconst keepSame = (key, value) => value;\n\nconst matchNumber = R.when(R.is(String), R.test(/^-?\\d*\\.?\\d*$/));\nconst castFloat = R.when(matchNumber, v => parseFloat(v, 10));\n/**\n * Transforms style key-value\n *\n * @param {String} key style key\n * @param {String} value style value\n * @returns {String | Number} transformed style values\n */\n\nconst transformStyle = R.compose(castFloat, R.cond([[isBorderStyle, processBorders], [isBoxModelStyle, processBoxModel], [isObjectPositionStyle, processObjectPosition], [isTransformOriginStyle, processTransformOrigin], [isFontWeightStyle, processFontWeight], [isFlexGrow, processFlexGrow], [isFlexShrink, processFlexShrink], [isFlexBasis, processFlexBasis], [R.T, keepSame]]));\n/**\n * Expand the shorthand properties to isolate every declaration from the others.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\n\nconst expand = style => {\n  if (!style) return style;\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i += 1) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    if (_shorthands.default[key]) {\n      const expandedProps = _shorthands.default[key];\n\n      for (let j = 0; j < expandedProps.length; j += 1) {\n        const propName = expandedProps[j];\n        resolvedStyle[propName] = transformStyle(propName, value);\n      }\n    } else {\n      resolvedStyle[key] = transformStyle(key, value);\n    }\n  }\n\n  return resolvedStyle;\n};\n\nvar _default = expand;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/stylesheet/lib/expand.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","processObjectPosition","processFontWeight","R","_shorthands","BOX_MODEL_REGEX","OBJECT_POSITION_REGEX","BORDER_SHORTHAND_REGEX","TRANSFORM_ORIGIN_REGEX","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","matchBoxModel","match","matchObjectPosition","matchBorderShorthand","matchTransformOrigin","isNumber","is","Number","FONT_WEIGHT_REGEX","isFontWeightStyle","key","BORDER_STYLE_REGEX","isBorderStyle","value","BOX_MODEL_STYLE_REGEX","isBoxModelStyle","OBJECT_POSITION_STYLE_REGEX","isObjectPositionStyle","isTransformOriginStyle","isFlexGrow","isFlexShrink","isFlexBasis","processBorders","Error","processBoxModel","toLowerCase","transformOffsetKeywords","processTransformOrigin","result","processFlexGrow","matches","split","processFlexShrink","processFlexBasis","keepSame","matchNumber","when","String","test","castFloat","v","parseFloat","transformStyle","compose","cond","T","expand","style","propsArray","Object","keys","resolvedStyle","i","length","expandedProps","j","propName","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = exports.processObjectPosition = exports.processFontWeight = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _shorthands = _interopRequireDefault(require(\"./shorthands\"));\n\nconst BOX_MODEL_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh|px)?/g;\nconst OBJECT_POSITION_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh|px)?/g;\nconst BORDER_SHORTHAND_REGEX = /(\\d+(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nconst TRANSFORM_ORIGIN_REGEX = /(-?\\d+(px|in|mm|cm|pt|%|vw|vh|px)?)|top|right|bottom|left|center/g;\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\nconst matchBoxModel = R.match(BOX_MODEL_REGEX);\nconst matchObjectPosition = R.match(OBJECT_POSITION_REGEX);\nconst matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\nconst matchTransformOrigin = R.match(TRANSFORM_ORIGIN_REGEX);\nconst isNumber = R.is(Number);\nconst FONT_WEIGHT_REGEX = /^fontWeight/;\n\nconst isFontWeightStyle = key => key.match(FONT_WEIGHT_REGEX);\n\nconst BORDER_STYLE_REGEX = /^border(Top|Right|Bottom|Left)(Color|Width|Style)/;\n\nconst isBorderStyle = (key, value) => key.match(BORDER_STYLE_REGEX) && typeof value === 'string';\n\nconst BOX_MODEL_STYLE_REGEX = /^(margin)|(padding)/;\n\nconst isBoxModelStyle = (key, value) => key.match(BOX_MODEL_STYLE_REGEX) && typeof value === 'string';\n\nconst OBJECT_POSITION_STYLE_REGEX = /^objectPosition/;\n\nconst isObjectPositionStyle = (key, value) => key.match(OBJECT_POSITION_STYLE_REGEX) && typeof value === 'string';\n\nconst isTransformOriginStyle = (key, value) => key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst isFlexGrow = key => key === 'flexGrow';\n\nconst isFlexShrink = key => key === 'flexShrink';\n\nconst isFlexBasis = key => key === 'flexBasis';\n\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/Color$/)) {\n      return match[4] || value;\n    }\n\n    if (key.match(/Style$/)) {\n      return match[3] || value;\n    }\n\n    if (key.match(/Width$/)) {\n      return match[1] || value;\n    }\n\n    throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n  }\n\n  return value;\n};\n\nconst processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/Top$/)) {\n      return match[0];\n    }\n\n    if (key.match(/Right$/)) {\n      return match[1] || match[0];\n    }\n\n    if (key.match(/Bottom$/)) {\n      return match[2] || match[0];\n    }\n\n    if (key.match(/Left$/)) {\n      return match[3] || match[1] || match[0];\n    }\n\n    throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n  }\n\n  return value;\n};\n\nconst processFontWeight = (key, value) => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n\nexports.processFontWeight = processFontWeight;\n\nconst processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/X$/)) {\n      return match[0] || value;\n    }\n\n    if (key.match(/Y$/)) {\n      return match[1] || value;\n    }\n\n    throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n  }\n\n  return value;\n};\n\nexports.processObjectPosition = processObjectPosition;\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n\n    case 'right':\n    case 'bottom':\n      return '100%';\n\n    case 'center':\n      return '50%';\n\n    default:\n      return value;\n  }\n}; // Transforms shorthand transformOrigin values\n\n\nconst processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/X$/)) {\n      result = match[0] || value;\n    } else if (key.match(/Y$/)) {\n      result = match[1] || match[0] || value;\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n\nconst processFlexGrow = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[0];\n};\n\nconst processFlexShrink = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[1];\n};\n\nconst processFlexBasis = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[2];\n};\n\nconst keepSame = (key, value) => value;\n\nconst matchNumber = R.when(R.is(String), R.test(/^-?\\d*\\.?\\d*$/));\nconst castFloat = R.when(matchNumber, v => parseFloat(v, 10));\n/**\n * Transforms style key-value\n *\n * @param {String} key style key\n * @param {String} value style value\n * @returns {String | Number} transformed style values\n */\n\nconst transformStyle = R.compose(castFloat, R.cond([[isBorderStyle, processBorders], [isBoxModelStyle, processBoxModel], [isObjectPositionStyle, processObjectPosition], [isTransformOriginStyle, processTransformOrigin], [isFontWeightStyle, processFontWeight], [isFlexGrow, processFlexGrow], [isFlexShrink, processFlexShrink], [isFlexBasis, processFlexBasis], [R.T, keepSame]]));\n/**\n * Expand the shorthand properties to isolate every declaration from the others.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\n\nconst expand = style => {\n  if (!style) return style;\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i += 1) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    if (_shorthands.default[key]) {\n      const expandedProps = _shorthands.default[key];\n\n      for (let j = 0; j < expandedProps.length; j += 1) {\n        const propName = expandedProps[j];\n        resolvedStyle[propName] = transformStyle(propName, value);\n      }\n    } else {\n      resolvedStyle[key] = transformStyle(key, value);\n    }\n  }\n\n  return resolvedStyle;\n};\n\nvar _default = expand;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}