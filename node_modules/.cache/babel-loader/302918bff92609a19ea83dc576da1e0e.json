{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _matchPercent = _interopRequireDefault(require(\"../utils/matchPercent\"));\n/*\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\n\n\nconst resolvePageHorizontalPadding = container => value => {\n  const match = (0, _matchPercent.default)(value);\n  return match ? match.percent * container.width : value;\n};\n/**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\n\n\nconst resolvePageVerticalPadding = container => value => {\n  const match = (0, _matchPercent.default)(value);\n  return match ? match.percent * container.height : value;\n};\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param {Object} page\n * @returns {Object} page with fixed paddings\n */\n\n\nconst resolvePagePaddings = page => {\n  const container = R.pathOr({}, ['props', 'size'], page);\n  return R.evolve({\n    style: R.evolve({\n      paddingLeft: resolvePageHorizontalPadding(container),\n      paddingRight: resolvePageHorizontalPadding(container),\n      paddingTop: resolvePageVerticalPadding(container),\n      paddingBottom: resolvePageVerticalPadding(container)\n    })\n  })(page);\n};\n/**\n * Translates all pages percentage paddings in fixed ones\n * This has to be computed from pages calculated size and not by Yoga\n * because at this point we didn't performed pagination yet.\n *\n * @param {Object} document root\n * @returns {Object} document root with translated page paddings\n */\n\n\nvar _default = R.evolve({\n  children: R.map(resolvePagePaddings)\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/layout/lib/steps/resolvePagePaddings.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_matchPercent","resolvePageHorizontalPadding","container","value","match","percent","width","resolvePageVerticalPadding","height","resolvePagePaddings","page","pathOr","evolve","style","paddingLeft","paddingRight","paddingTop","paddingBottom","_default","children","map"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGJ,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,aAAa,GAAGP,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAA1C;AAEA;;;;;;;;;AAOA,MAAMO,4BAA4B,GAAGC,SAAS,IAAIC,KAAK,IAAI;AACzD,QAAMC,KAAK,GAAG,CAAC,GAAGJ,aAAa,CAACF,OAAlB,EAA2BK,KAA3B,CAAd;AACA,SAAOC,KAAK,GAAGA,KAAK,CAACC,OAAN,GAAgBH,SAAS,CAACI,KAA7B,GAAqCH,KAAjD;AACD,CAHD;AAIA;;;;;;;;;AASA,MAAMI,0BAA0B,GAAGL,SAAS,IAAIC,KAAK,IAAI;AACvD,QAAMC,KAAK,GAAG,CAAC,GAAGJ,aAAa,CAACF,OAAlB,EAA2BK,KAA3B,CAAd;AACA,SAAOC,KAAK,GAAGA,KAAK,CAACC,OAAN,GAAgBH,SAAS,CAACM,MAA7B,GAAsCL,KAAlD;AACD,CAHD;AAIA;;;;;;;;AAQA,MAAMM,mBAAmB,GAAGC,IAAI,IAAI;AAClC,QAAMR,SAAS,GAAGH,CAAC,CAACY,MAAF,CAAS,EAAT,EAAa,CAAC,OAAD,EAAU,MAAV,CAAb,EAAgCD,IAAhC,CAAlB;AACA,SAAOX,CAAC,CAACa,MAAF,CAAS;AACdC,IAAAA,KAAK,EAAEd,CAAC,CAACa,MAAF,CAAS;AACdE,MAAAA,WAAW,EAAEb,4BAA4B,CAACC,SAAD,CAD3B;AAEda,MAAAA,YAAY,EAAEd,4BAA4B,CAACC,SAAD,CAF5B;AAGdc,MAAAA,UAAU,EAAET,0BAA0B,CAACL,SAAD,CAHxB;AAIde,MAAAA,aAAa,EAAEV,0BAA0B,CAACL,SAAD;AAJ3B,KAAT;AADO,GAAT,EAOJQ,IAPI,CAAP;AAQD,CAVD;AAWA;;;;;;;;;;AAUA,IAAIQ,QAAQ,GAAGnB,CAAC,CAACa,MAAF,CAAS;AACtBO,EAAAA,QAAQ,EAAEpB,CAAC,CAACqB,GAAF,CAAMX,mBAAN;AADY,CAAT,CAAf;;AAIAb,OAAO,CAACE,OAAR,GAAkBoB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _matchPercent = _interopRequireDefault(require(\"../utils/matchPercent\"));\n\n/*\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageHorizontalPadding = container => value => {\n  const match = (0, _matchPercent.default)(value);\n  return match ? match.percent * container.width : value;\n};\n/**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\n\n\nconst resolvePageVerticalPadding = container => value => {\n  const match = (0, _matchPercent.default)(value);\n  return match ? match.percent * container.height : value;\n};\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param {Object} page\n * @returns {Object} page with fixed paddings\n */\n\n\nconst resolvePagePaddings = page => {\n  const container = R.pathOr({}, ['props', 'size'], page);\n  return R.evolve({\n    style: R.evolve({\n      paddingLeft: resolvePageHorizontalPadding(container),\n      paddingRight: resolvePageHorizontalPadding(container),\n      paddingTop: resolvePageVerticalPadding(container),\n      paddingBottom: resolvePageVerticalPadding(container)\n    })\n  })(page);\n};\n/**\n * Translates all pages percentage paddings in fixed ones\n * This has to be computed from pages calculated size and not by Yoga\n * because at this point we didn't performed pagination yet.\n *\n * @param {Object} document root\n * @returns {Object} document root with translated page paddings\n */\n\n\nvar _default = R.evolve({\n  children: R.map(resolvePagePaddings)\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}