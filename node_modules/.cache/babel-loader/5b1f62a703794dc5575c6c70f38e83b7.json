{"ast":null,"code":"// Generated by CoffeeScript 1.12.1\n\n/*\nPDFImage - embeds images in PDF documents\nBy Devon Govett\n */\n(function () {\n  var Data, JPEG, PDFImage, PNG, fs;\n  fs = require('fs');\n  Data = require('./data');\n  JPEG = require('./image/jpeg');\n  PNG = require('./image/png');\n\n  PDFImage = function () {\n    function PDFImage() {}\n\n    PDFImage.open = function (src, label) {\n      var data, match;\n\n      if (Buffer.isBuffer(src)) {\n        data = src;\n      } else if (src instanceof ArrayBuffer) {\n        data = new Buffer(new Uint8Array(src));\n      } else {\n        if (match = /^data:.+;base64,(.*)$/.exec(src)) {\n          data = new Buffer(match[1], 'base64');\n        } else {\n          data = fs.readFileSync(src);\n\n          if (!data) {\n            return;\n          }\n        }\n      }\n\n      if (data[0] === 0xff && data[1] === 0xd8) {\n        return new JPEG(data, label);\n      } else if (data[0] === 0x89 && data.toString('ascii', 1, 4) === 'PNG') {\n        return new PNG(data, label);\n      } else {\n        throw new Error('Unknown image format.');\n      }\n    };\n\n    return PDFImage;\n  }();\n\n  module.exports = PDFImage;\n}).call(this);","map":{"version":3,"sources":["/Users/kaja/Code/mallar/node_modules/pdfkit/js/image.js"],"names":["Data","JPEG","PDFImage","PNG","fs","require","open","src","label","data","match","Buffer","isBuffer","ArrayBuffer","Uint8Array","exec","readFileSync","toString","Error","module","exports","call"],"mappings":"AAAA;;AAEA;;;;AAKA,CAAC,YAAW;AACV,MAAIA,IAAJ,EAAUC,IAAV,EAAgBC,QAAhB,EAA0BC,GAA1B,EAA+BC,EAA/B;AAEAA,EAAAA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAZ;AAEAL,EAAAA,IAAI,GAAGK,OAAO,CAAC,QAAD,CAAd;AAEAJ,EAAAA,IAAI,GAAGI,OAAO,CAAC,cAAD,CAAd;AAEAF,EAAAA,GAAG,GAAGE,OAAO,CAAC,aAAD,CAAb;;AAEAH,EAAAA,QAAQ,GAAI,YAAW;AACrB,aAASA,QAAT,GAAoB,CAAE;;AAEtBA,IAAAA,QAAQ,CAACI,IAAT,GAAgB,UAASC,GAAT,EAAcC,KAAd,EAAqB;AACnC,UAAIC,IAAJ,EAAUC,KAAV;;AACA,UAAIC,MAAM,CAACC,QAAP,CAAgBL,GAAhB,CAAJ,EAA0B;AACxBE,QAAAA,IAAI,GAAGF,GAAP;AACD,OAFD,MAEO,IAAIA,GAAG,YAAYM,WAAnB,EAAgC;AACrCJ,QAAAA,IAAI,GAAG,IAAIE,MAAJ,CAAW,IAAIG,UAAJ,CAAeP,GAAf,CAAX,CAAP;AACD,OAFM,MAEA;AACL,YAAIG,KAAK,GAAG,wBAAwBK,IAAxB,CAA6BR,GAA7B,CAAZ,EAA+C;AAC7CE,UAAAA,IAAI,GAAG,IAAIE,MAAJ,CAAWD,KAAK,CAAC,CAAD,CAAhB,EAAqB,QAArB,CAAP;AACD,SAFD,MAEO;AACLD,UAAAA,IAAI,GAAGL,EAAE,CAACY,YAAH,CAAgBT,GAAhB,CAAP;;AACA,cAAI,CAACE,IAAL,EAAW;AACT;AACD;AACF;AACF;;AACD,UAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,IAAoBA,IAAI,CAAC,CAAD,CAAJ,KAAY,IAApC,EAA0C;AACxC,eAAO,IAAIR,IAAJ,CAASQ,IAAT,EAAeD,KAAf,CAAP;AACD,OAFD,MAEO,IAAIC,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,IAAoBA,IAAI,CAACQ,QAAL,CAAc,OAAd,EAAuB,CAAvB,EAA0B,CAA1B,MAAiC,KAAzD,EAAgE;AACrE,eAAO,IAAId,GAAJ,CAAQM,IAAR,EAAcD,KAAd,CAAP;AACD,OAFM,MAEA;AACL,cAAM,IAAIU,KAAJ,CAAU,uBAAV,CAAN;AACD;AACF,KAvBD;;AAyBA,WAAOhB,QAAP;AAED,GA9BU,EAAX;;AAgCAiB,EAAAA,MAAM,CAACC,OAAP,GAAiBlB,QAAjB;AAED,CA7CD,EA6CGmB,IA7CH,CA6CQ,IA7CR","sourcesContent":["// Generated by CoffeeScript 1.12.1\n\n/*\nPDFImage - embeds images in PDF documents\nBy Devon Govett\n */\n\n(function() {\n  var Data, JPEG, PDFImage, PNG, fs;\n\n  fs = require('fs');\n\n  Data = require('./data');\n\n  JPEG = require('./image/jpeg');\n\n  PNG = require('./image/png');\n\n  PDFImage = (function() {\n    function PDFImage() {}\n\n    PDFImage.open = function(src, label) {\n      var data, match;\n      if (Buffer.isBuffer(src)) {\n        data = src;\n      } else if (src instanceof ArrayBuffer) {\n        data = new Buffer(new Uint8Array(src));\n      } else {\n        if (match = /^data:.+;base64,(.*)$/.exec(src)) {\n          data = new Buffer(match[1], 'base64');\n        } else {\n          data = fs.readFileSync(src);\n          if (!data) {\n            return;\n          }\n        }\n      }\n      if (data[0] === 0xff && data[1] === 0xd8) {\n        return new JPEG(data, label);\n      } else if (data[0] === 0x89 && data.toString('ascii', 1, 4) === 'PNG') {\n        return new PNG(data, label);\n      } else {\n        throw new Error('Unknown image format.');\n      }\n    };\n\n    return PDFImage;\n\n  })();\n\n  module.exports = PDFImage;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}