{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yogaLayoutPrebuilt = _interopRequireDefault(require(\"yoga-layout-prebuilt\"));\n/**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param {String} flex wrap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nconst setFlexWrap = value => R.tap(node => {\n  const yogaNode = node._yogaNode;\n\n  if (yogaNode) {\n    const yogaValue = R.cond([[R.equals('wrap'), R.always(_yogaLayoutPrebuilt.default.WRAP_WRAP)], [R.equals('wrap-reverse'), R.always(_yogaLayoutPrebuilt.default.WRAP_WRAP_REVERSE)], [R.T, R.always(_yogaLayoutPrebuilt.default.WRAP_NO_WRAP)]])(value);\n    yogaNode.setFlexWrap(yogaValue);\n  }\n});\n\nvar _default = setFlexWrap;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/layout/lib/node/setFlexWrap.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_yogaLayoutPrebuilt","setFlexWrap","value","tap","node","yogaNode","_yogaNode","yogaValue","cond","equals","always","WRAP_WRAP","WRAP_WRAP_REVERSE","T","WRAP_NO_WRAP","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGJ,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,mBAAmB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAAhD;AAEA;;;;;;;;;AAOA,MAAMO,WAAW,GAAGC,KAAK,IAAIH,CAAC,CAACI,GAAF,CAAMC,IAAI,IAAI;AACzC,QAAMC,QAAQ,GAAGD,IAAI,CAACE,SAAtB;;AAEA,MAAID,QAAJ,EAAc;AACZ,UAAME,SAAS,GAAGR,CAAC,CAACS,IAAF,CAAO,CAAC,CAACT,CAAC,CAACU,MAAF,CAAS,MAAT,CAAD,EAAmBV,CAAC,CAACW,MAAF,CAASV,mBAAmB,CAACF,OAApB,CAA4Ba,SAArC,CAAnB,CAAD,EAAsE,CAACZ,CAAC,CAACU,MAAF,CAAS,cAAT,CAAD,EAA2BV,CAAC,CAACW,MAAF,CAASV,mBAAmB,CAACF,OAApB,CAA4Bc,iBAArC,CAA3B,CAAtE,EAA2J,CAACb,CAAC,CAACc,CAAH,EAAMd,CAAC,CAACW,MAAF,CAASV,mBAAmB,CAACF,OAApB,CAA4BgB,YAArC,CAAN,CAA3J,CAAP,EAA8NZ,KAA9N,CAAlB;AACAG,IAAAA,QAAQ,CAACJ,WAAT,CAAqBM,SAArB;AACD;AACF,CAP4B,CAA7B;;AASA,IAAIQ,QAAQ,GAAGd,WAAf;AACAL,OAAO,CAACE,OAAR,GAAkBiB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yogaLayoutPrebuilt = _interopRequireDefault(require(\"yoga-layout-prebuilt\"));\n\n/**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param {String} flex wrap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexWrap = value => R.tap(node => {\n  const yogaNode = node._yogaNode;\n\n  if (yogaNode) {\n    const yogaValue = R.cond([[R.equals('wrap'), R.always(_yogaLayoutPrebuilt.default.WRAP_WRAP)], [R.equals('wrap-reverse'), R.always(_yogaLayoutPrebuilt.default.WRAP_WRAP_REVERSE)], [R.T, R.always(_yogaLayoutPrebuilt.default.WRAP_NO_WRAP)]])(value);\n    yogaNode.setFlexWrap(yogaValue);\n  }\n});\n\nvar _default = setFlexWrap;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}