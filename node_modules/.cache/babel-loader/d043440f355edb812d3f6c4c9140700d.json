{"ast":null,"code":"var _jsxFileName = \"/Users/kaja/Code/mallar/app/src/routes/Login.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport loginImg from 'assets/jpg/signin-image.jpg';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Link, useHistory } from \"react-router-dom\";\nconst SubmitButton = styled(Button)`\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    padding: 10px;\n    width: 100%;\n    margin-bottom: 12px;\n`;\nconst LoginForm = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 35%;\n    height: 70%;\n    background-color: white;\n`;\nconst Card = styled.div`\n    width: 80%;\n    height: 70%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direct: row;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 5px 10px 18px #888888;\n`;\nconst ImgWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 45%;\n    background-color: white;\n`;\nconst LoginImg = styled.img`\n    width: 75%;\n`;\nconst Wrapper = styled.div`\n    display: flex;\n    background-color: #D3D3D3;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n`;\nconst Title = styled.h1`\n    margin-bottom: 16px;\n`;\nexport default (() => {\n  const [isInvalid, setIsInvalid] = useState(false);\n  const history = useHistory();\n\n  const submit = async event => {\n    event.preventDefault();\n    console.log(event.currentTarget.email.value);\n    console.log(event.currentTarget.password.value); // Simple POST request with a JSON body using fetch\n\n    let formData = new FormData();\n    formData.append('username', event.currentTarget.email.value);\n    formData.append('password', event.currentTarget.password.value);\n    const response = await fetch('http://localhost:8000/token', {\n      method: 'POST',\n      body: formData\n    });\n\n    if (response.status !== 200) {\n      setIsInvalid(true);\n      return;\n    }\n\n    const data = await response.json();\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ImgWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LoginImg, {\n    src: loginImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(LoginForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Logga in\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: () => setIsInvalid(false),\n    isInvalid: isInvalid,\n    type: \"email\",\n    placeholder: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: () => setIsInvalid(false),\n    isInvalid: isInvalid,\n    type: \"password\",\n    placeholder: \"l\\xF6senord\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, \"Email eller l\\xF6senord fel.\")), /*#__PURE__*/React.createElement(SubmitButton, {\n    variant: \"light\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Logga in\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"Skapa ett nytt konto\"))));\n});","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/src/routes/Login.js"],"names":["React","useState","styled","loginImg","Form","Button","Link","useHistory","SubmitButton","LoginForm","div","Card","ImgWrapper","LoginImg","img","Wrapper","Title","h1","isInvalid","setIsInvalid","history","submit","event","preventDefault","console","log","currentTarget","email","value","password","formData","FormData","append","response","fetch","method","body","status","data","json"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport loginImg from 'assets/jpg/signin-image.jpg'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Link, useHistory } from \"react-router-dom\";\n\n\nconst SubmitButton = styled(Button)`\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    padding: 10px;\n    width: 100%;\n    margin-bottom: 12px;\n`\n\n\nconst LoginForm = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 35%;\n    height: 70%;\n    background-color: white;\n`\n\nconst Card = styled.div`\n    width: 80%;\n    height: 70%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direct: row;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 5px 10px 18px #888888;\n`\n\nconst ImgWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 45%;\n    background-color: white;\n`\n\nconst LoginImg = styled.img`\n    width: 75%;\n`\n\nconst Wrapper = styled.div`\n    display: flex;\n    background-color: #D3D3D3;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n`\n\nconst Title = styled.h1`\n    margin-bottom: 16px;\n`\n\n\nexport default () => {\n    const [isInvalid, setIsInvalid] = useState(false) \n    const history = useHistory()\n    const submit = async (event) =>{\n        event.preventDefault()\n        console.log(event.currentTarget.email.value)\n        console.log(event.currentTarget.password.value)\n            // Simple POST request with a JSON body using fetch\n        let formData = new FormData();\n        formData.append('username', event.currentTarget.email.value);\n        formData.append('password', event.currentTarget.password.value);\n\n\n        const response = await fetch('http://localhost:8000/token', {\n            method: 'POST',\n            body: formData\n        })\n        if (response.status !== 200){\n            setIsInvalid(true)\n            return\n        } \n        const data = await response.json()\n        console.log(data)\n\n    }\n    return (\n        <Wrapper>\n            <Card>\n                <ImgWrapper>\n                    <LoginImg src={loginImg}/>\n                </ImgWrapper>\n                <LoginForm>\n                    <Title>Logga in</Title>\n                    <Form onSubmit={submit}>\n                        <Form.Group controlId=\"email\">\n                            <Form.Control onChange={() => setIsInvalid(false)} isInvalid={isInvalid} type=\"email\" placeholder=\"email\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"password\">\n                            <Form.Control onChange={() => setIsInvalid(false)} isInvalid={isInvalid} type=\"password\" placeholder=\"lösenord\"/>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Email eller lösenord fel.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <SubmitButton variant=\"light\" type=\"submit\">\n                            {\"Logga in\"}\n                        </SubmitButton>\n                    </Form>\n                    <Link to={\"/register\"}>Skapa ett nytt konto</Link>\n                </LoginForm>\n            </Card>\n        </Wrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}