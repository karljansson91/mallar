{"ast":null,"code":"// Generated by CoffeeScript 1.12.1\n(function () {\n  var EventEmitter,\n      LineBreaker,\n      LineWrapper,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  EventEmitter = require('events').EventEmitter;\n  LineBreaker = require('linebreak');\n\n  LineWrapper = function (superClass) {\n    extend(LineWrapper, superClass);\n\n    function LineWrapper(document, options) {\n      var ref;\n      this.document = document;\n      this.indent = options.indent || 0;\n      this.characterSpacing = options.characterSpacing || 0;\n      this.wordSpacing = options.wordSpacing === 0;\n      this.columns = options.columns || 1;\n      this.columnGap = (ref = options.columnGap) != null ? ref : 18;\n      this.lineWidth = (options.width - this.columnGap * (this.columns - 1)) / this.columns;\n      this.spaceLeft = this.lineWidth;\n      this.startX = this.document.x;\n      this.startY = this.document.y;\n      this.column = 1;\n      this.ellipsis = options.ellipsis;\n      this.continuedX = 0;\n      this.features = options.features;\n\n      if (options.height != null) {\n        this.height = options.height;\n        this.maxY = this.startY + options.height;\n      } else {\n        this.maxY = this.document.page.maxY();\n      }\n\n      this.on('firstLine', function (_this) {\n        return function (options) {\n          var indent;\n          indent = _this.continuedX || _this.indent;\n          _this.document.x += indent;\n          _this.lineWidth -= indent;\n          return _this.once('line', function () {\n            _this.document.x -= indent;\n            _this.lineWidth += indent;\n\n            if (options.continued && !_this.continuedX) {\n              _this.continuedX = _this.indent;\n            }\n\n            if (!options.continued) {\n              return _this.continuedX = 0;\n            }\n          });\n        };\n      }(this));\n      this.on('lastLine', function (_this) {\n        return function (options) {\n          var align;\n          align = options.align;\n\n          if (align === 'justify') {\n            options.align = 'left';\n          }\n\n          _this.lastLine = true;\n          return _this.once('line', function () {\n            _this.document.y += options.paragraphGap || 0;\n            options.align = align;\n            return _this.lastLine = false;\n          });\n        };\n      }(this));\n    }\n\n    LineWrapper.prototype.wordWidth = function (word) {\n      return this.document.widthOfString(word, this) + this.characterSpacing + this.wordSpacing;\n    };\n\n    LineWrapper.prototype.eachWord = function (text, fn) {\n      var bk, breaker, fbk, l, last, lbk, shouldContinue, w, word, wordWidths;\n      breaker = new LineBreaker(text);\n      last = null;\n      wordWidths = Object.create(null);\n\n      while (bk = breaker.nextBreak()) {\n        word = text.slice((last != null ? last.position : void 0) || 0, bk.position);\n        w = wordWidths[word] != null ? wordWidths[word] : wordWidths[word] = this.wordWidth(word);\n\n        if (w > this.lineWidth + this.continuedX) {\n          lbk = last;\n          fbk = {};\n\n          while (word.length) {\n            l = word.length;\n\n            while (w > this.spaceLeft) {\n              w = this.wordWidth(word.slice(0, --l));\n            }\n\n            fbk.required = l < word.length;\n            shouldContinue = fn(word.slice(0, l), w, fbk, lbk);\n            lbk = {\n              required: false\n            };\n            word = word.slice(l);\n            w = this.wordWidth(word);\n\n            if (shouldContinue === false) {\n              break;\n            }\n          }\n        } else {\n          shouldContinue = fn(word, w, bk, last);\n        }\n\n        if (shouldContinue === false) {\n          break;\n        }\n\n        last = bk;\n      }\n    };\n\n    LineWrapper.prototype.wrap = function (text, options) {\n      var buffer, emitLine, lc, nextY, textWidth, wc, y;\n\n      if (options.indent != null) {\n        this.indent = options.indent;\n      }\n\n      if (options.characterSpacing != null) {\n        this.characterSpacing = options.characterSpacing;\n      }\n\n      if (options.wordSpacing != null) {\n        this.wordSpacing = options.wordSpacing;\n      }\n\n      if (options.ellipsis != null) {\n        this.ellipsis = options.ellipsis;\n      }\n\n      nextY = this.document.y + this.document.currentLineHeight(true);\n\n      if (this.document.y > this.maxY || nextY > this.maxY) {\n        this.nextSection();\n      }\n\n      buffer = '';\n      textWidth = 0;\n      wc = 0;\n      lc = 0;\n      y = this.document.y;\n\n      emitLine = function (_this) {\n        return function () {\n          options.textWidth = textWidth + _this.wordSpacing * (wc - 1);\n          options.wordCount = wc;\n          options.lineWidth = _this.lineWidth;\n          y = _this.document.y;\n\n          _this.emit('line', buffer, options, _this);\n\n          return lc++;\n        };\n      }(this);\n\n      this.emit('sectionStart', options, this);\n      this.eachWord(text, function (_this) {\n        return function (word, w, bk, last) {\n          var lh, shouldContinue;\n\n          if (last == null || last.required) {\n            _this.emit('firstLine', options, _this);\n\n            _this.spaceLeft = _this.lineWidth;\n          }\n\n          if (w <= _this.spaceLeft) {\n            buffer += word;\n            textWidth += w;\n            wc++;\n          }\n\n          if (bk.required || w > _this.spaceLeft) {\n            if (bk.required) {\n              _this.emit('lastLine', options, _this);\n            }\n\n            lh = _this.document.currentLineHeight(true);\n\n            if (_this.height != null && _this.ellipsis && _this.document.y + lh * 2 > _this.maxY && _this.column >= _this.columns) {\n              if (_this.ellipsis === true) {\n                _this.ellipsis = 'â€¦';\n              }\n\n              buffer = buffer.replace(/\\s+$/, '');\n              textWidth = _this.wordWidth(buffer + _this.ellipsis);\n\n              while (textWidth > _this.lineWidth) {\n                buffer = buffer.slice(0, -1).replace(/\\s+$/, '');\n                textWidth = _this.wordWidth(buffer + _this.ellipsis);\n              }\n\n              buffer = buffer + _this.ellipsis;\n            }\n\n            if (bk.required && w > _this.spaceLeft) {\n              buffer = word;\n              textWidth = w;\n              wc = 1;\n            }\n\n            emitLine();\n\n            if (_this.document.y + lh > _this.maxY) {\n              shouldContinue = _this.nextSection();\n\n              if (!shouldContinue) {\n                wc = 0;\n                buffer = '';\n                return false;\n              }\n            }\n\n            if (bk.required) {\n              _this.spaceLeft = _this.lineWidth;\n              buffer = '';\n              textWidth = 0;\n              return wc = 0;\n            } else {\n              _this.spaceLeft = _this.lineWidth - w;\n              buffer = word;\n              textWidth = w;\n              return wc = 1;\n            }\n          } else {\n            return _this.spaceLeft -= w;\n          }\n        };\n      }(this));\n\n      if (wc > 0) {\n        this.emit('lastLine', options, this);\n        emitLine();\n      }\n\n      this.emit('sectionEnd', options, this);\n\n      if (options.continued === true) {\n        if (lc > 1) {\n          this.continuedX = 0;\n        }\n\n        this.continuedX += options.textWidth;\n        return this.document.y = y;\n      } else {\n        return this.document.x = this.startX;\n      }\n    };\n\n    LineWrapper.prototype.nextSection = function (options) {\n      var ref;\n      this.emit('sectionEnd', options, this);\n\n      if (++this.column > this.columns) {\n        if (this.height != null) {\n          return false;\n        }\n\n        this.document.addPage();\n        this.column = 1;\n        this.startY = this.document.page.margins.top;\n        this.maxY = this.document.page.maxY();\n        this.document.x = this.startX;\n\n        if (this.document._fillColor) {\n          (ref = this.document).fillColor.apply(ref, this.document._fillColor);\n        }\n\n        this.emit('pageBreak', options, this);\n      } else {\n        this.document.x += this.lineWidth + this.columnGap;\n        this.document.y = this.startY;\n        this.emit('columnBreak', options, this);\n      }\n\n      this.emit('sectionStart', options, this);\n      return true;\n    };\n\n    return LineWrapper;\n  }(EventEmitter);\n\n  module.exports = LineWrapper;\n}).call(this);","map":{"version":3,"sources":["/Users/kaja/Code/mallar/node_modules/pdfkit/js/line_wrapper.js"],"names":["EventEmitter","LineBreaker","LineWrapper","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","superClass","document","options","ref","indent","characterSpacing","wordSpacing","columns","columnGap","lineWidth","width","spaceLeft","startX","x","startY","y","column","ellipsis","continuedX","features","height","maxY","page","on","_this","once","continued","align","lastLine","paragraphGap","wordWidth","word","widthOfString","eachWord","text","fn","bk","breaker","fbk","l","last","lbk","shouldContinue","w","wordWidths","Object","create","nextBreak","slice","position","length","required","wrap","buffer","emitLine","lc","nextY","textWidth","wc","currentLineHeight","nextSection","wordCount","emit","lh","replace","addPage","margins","top","_fillColor","fillColor","apply","module","exports"],"mappings":"AAAA;AACA,CAAC,YAAW;AACV,MAAIA,YAAJ;AAAA,MAAkBC,WAAlB;AAAA,MAA+BC,WAA/B;AAAA,MACEC,MAAM,GAAG,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AAAE,SAAK,IAAIC,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIE,OAAO,CAACC,IAAR,CAAaH,MAAb,EAAqBC,GAArB,CAAJ,EAA+BF,KAAK,CAACE,GAAD,CAAL,GAAaD,MAAM,CAACC,GAAD,CAAnB;AAA2B;;AAAC,aAASG,IAAT,GAAgB;AAAE,WAAKC,WAAL,GAAmBN,KAAnB;AAA2B;;AAACK,IAAAA,IAAI,CAACE,SAAL,GAAiBN,MAAM,CAACM,SAAxB;AAAmCP,IAAAA,KAAK,CAACO,SAAN,GAAkB,IAAIF,IAAJ,EAAlB;AAA8BL,IAAAA,KAAK,CAACQ,SAAN,GAAkBP,MAAM,CAACM,SAAzB;AAAoC,WAAOP,KAAP;AAAe,GAD5R;AAAA,MAEEG,OAAO,GAAG,GAAGM,cAFf;;AAIAb,EAAAA,YAAY,GAAGc,OAAO,CAAC,QAAD,CAAP,CAAkBd,YAAjC;AAEAC,EAAAA,WAAW,GAAGa,OAAO,CAAC,WAAD,CAArB;;AAEAZ,EAAAA,WAAW,GAAI,UAASa,UAAT,EAAqB;AAClCZ,IAAAA,MAAM,CAACD,WAAD,EAAca,UAAd,CAAN;;AAEA,aAASb,WAAT,CAAqBc,QAArB,EAA+BC,OAA/B,EAAwC;AACtC,UAAIC,GAAJ;AACA,WAAKF,QAAL,GAAgBA,QAAhB;AACA,WAAKG,MAAL,GAAcF,OAAO,CAACE,MAAR,IAAkB,CAAhC;AACA,WAAKC,gBAAL,GAAwBH,OAAO,CAACG,gBAAR,IAA4B,CAApD;AACA,WAAKC,WAAL,GAAmBJ,OAAO,CAACI,WAAR,KAAwB,CAA3C;AACA,WAAKC,OAAL,GAAeL,OAAO,CAACK,OAAR,IAAmB,CAAlC;AACA,WAAKC,SAAL,GAAiB,CAACL,GAAG,GAAGD,OAAO,CAACM,SAAf,KAA6B,IAA7B,GAAoCL,GAApC,GAA0C,EAA3D;AACA,WAAKM,SAAL,GAAiB,CAACP,OAAO,CAACQ,KAAR,GAAiB,KAAKF,SAAL,IAAkB,KAAKD,OAAL,GAAe,CAAjC,CAAlB,IAA0D,KAAKA,OAAhF;AACA,WAAKI,SAAL,GAAiB,KAAKF,SAAtB;AACA,WAAKG,MAAL,GAAc,KAAKX,QAAL,CAAcY,CAA5B;AACA,WAAKC,MAAL,GAAc,KAAKb,QAAL,CAAcc,CAA5B;AACA,WAAKC,MAAL,GAAc,CAAd;AACA,WAAKC,QAAL,GAAgBf,OAAO,CAACe,QAAxB;AACA,WAAKC,UAAL,GAAkB,CAAlB;AACA,WAAKC,QAAL,GAAgBjB,OAAO,CAACiB,QAAxB;;AACA,UAAIjB,OAAO,CAACkB,MAAR,IAAkB,IAAtB,EAA4B;AAC1B,aAAKA,MAAL,GAAclB,OAAO,CAACkB,MAAtB;AACA,aAAKC,IAAL,GAAY,KAAKP,MAAL,GAAcZ,OAAO,CAACkB,MAAlC;AACD,OAHD,MAGO;AACL,aAAKC,IAAL,GAAY,KAAKpB,QAAL,CAAcqB,IAAd,CAAmBD,IAAnB,EAAZ;AACD;;AACD,WAAKE,EAAL,CAAQ,WAAR,EAAsB,UAASC,KAAT,EAAgB;AACpC,eAAO,UAAStB,OAAT,EAAkB;AACvB,cAAIE,MAAJ;AACAA,UAAAA,MAAM,GAAGoB,KAAK,CAACN,UAAN,IAAoBM,KAAK,CAACpB,MAAnC;AACAoB,UAAAA,KAAK,CAACvB,QAAN,CAAeY,CAAf,IAAoBT,MAApB;AACAoB,UAAAA,KAAK,CAACf,SAAN,IAAmBL,MAAnB;AACA,iBAAOoB,KAAK,CAACC,IAAN,CAAW,MAAX,EAAmB,YAAW;AACnCD,YAAAA,KAAK,CAACvB,QAAN,CAAeY,CAAf,IAAoBT,MAApB;AACAoB,YAAAA,KAAK,CAACf,SAAN,IAAmBL,MAAnB;;AACA,gBAAIF,OAAO,CAACwB,SAAR,IAAqB,CAACF,KAAK,CAACN,UAAhC,EAA4C;AAC1CM,cAAAA,KAAK,CAACN,UAAN,GAAmBM,KAAK,CAACpB,MAAzB;AACD;;AACD,gBAAI,CAACF,OAAO,CAACwB,SAAb,EAAwB;AACtB,qBAAOF,KAAK,CAACN,UAAN,GAAmB,CAA1B;AACD;AACF,WATM,CAAP;AAUD,SAfD;AAgBD,OAjBoB,CAiBlB,IAjBkB,CAArB;AAkBA,WAAKK,EAAL,CAAQ,UAAR,EAAqB,UAASC,KAAT,EAAgB;AACnC,eAAO,UAAStB,OAAT,EAAkB;AACvB,cAAIyB,KAAJ;AACAA,UAAAA,KAAK,GAAGzB,OAAO,CAACyB,KAAhB;;AACA,cAAIA,KAAK,KAAK,SAAd,EAAyB;AACvBzB,YAAAA,OAAO,CAACyB,KAAR,GAAgB,MAAhB;AACD;;AACDH,UAAAA,KAAK,CAACI,QAAN,GAAiB,IAAjB;AACA,iBAAOJ,KAAK,CAACC,IAAN,CAAW,MAAX,EAAmB,YAAW;AACnCD,YAAAA,KAAK,CAACvB,QAAN,CAAec,CAAf,IAAoBb,OAAO,CAAC2B,YAAR,IAAwB,CAA5C;AACA3B,YAAAA,OAAO,CAACyB,KAAR,GAAgBA,KAAhB;AACA,mBAAOH,KAAK,CAACI,QAAN,GAAiB,KAAxB;AACD,WAJM,CAAP;AAKD,SAZD;AAaD,OAdmB,CAcjB,IAdiB,CAApB;AAeD;;AAEDzC,IAAAA,WAAW,CAACS,SAAZ,CAAsBkC,SAAtB,GAAkC,UAASC,IAAT,EAAe;AAC/C,aAAO,KAAK9B,QAAL,CAAc+B,aAAd,CAA4BD,IAA5B,EAAkC,IAAlC,IAA0C,KAAK1B,gBAA/C,GAAkE,KAAKC,WAA9E;AACD,KAFD;;AAIAnB,IAAAA,WAAW,CAACS,SAAZ,CAAsBqC,QAAtB,GAAiC,UAASC,IAAT,EAAeC,EAAf,EAAmB;AAClD,UAAIC,EAAJ,EAAQC,OAAR,EAAiBC,GAAjB,EAAsBC,CAAtB,EAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,cAApC,EAAoDC,CAApD,EAAuDZ,IAAvD,EAA6Da,UAA7D;AACAP,MAAAA,OAAO,GAAG,IAAInD,WAAJ,CAAgBgD,IAAhB,CAAV;AACAM,MAAAA,IAAI,GAAG,IAAP;AACAI,MAAAA,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAb;;AACA,aAAOV,EAAE,GAAGC,OAAO,CAACU,SAAR,EAAZ,EAAiC;AAC/BhB,QAAAA,IAAI,GAAGG,IAAI,CAACc,KAAL,CAAW,CAACR,IAAI,IAAI,IAAR,GAAeA,IAAI,CAACS,QAApB,GAA+B,KAAK,CAArC,KAA2C,CAAtD,EAAyDb,EAAE,CAACa,QAA5D,CAAP;AACAN,QAAAA,CAAC,GAAGC,UAAU,CAACb,IAAD,CAAV,IAAoB,IAApB,GAA2Ba,UAAU,CAACb,IAAD,CAArC,GAA8Ca,UAAU,CAACb,IAAD,CAAV,GAAmB,KAAKD,SAAL,CAAeC,IAAf,CAArE;;AACA,YAAIY,CAAC,GAAG,KAAKlC,SAAL,GAAiB,KAAKS,UAA9B,EAA0C;AACxCuB,UAAAA,GAAG,GAAGD,IAAN;AACAF,UAAAA,GAAG,GAAG,EAAN;;AACA,iBAAOP,IAAI,CAACmB,MAAZ,EAAoB;AAClBX,YAAAA,CAAC,GAAGR,IAAI,CAACmB,MAAT;;AACA,mBAAOP,CAAC,GAAG,KAAKhC,SAAhB,EAA2B;AACzBgC,cAAAA,CAAC,GAAG,KAAKb,SAAL,CAAeC,IAAI,CAACiB,KAAL,CAAW,CAAX,EAAc,EAAET,CAAhB,CAAf,CAAJ;AACD;;AACDD,YAAAA,GAAG,CAACa,QAAJ,GAAeZ,CAAC,GAAGR,IAAI,CAACmB,MAAxB;AACAR,YAAAA,cAAc,GAAGP,EAAE,CAACJ,IAAI,CAACiB,KAAL,CAAW,CAAX,EAAcT,CAAd,CAAD,EAAmBI,CAAnB,EAAsBL,GAAtB,EAA2BG,GAA3B,CAAnB;AACAA,YAAAA,GAAG,GAAG;AACJU,cAAAA,QAAQ,EAAE;AADN,aAAN;AAGApB,YAAAA,IAAI,GAAGA,IAAI,CAACiB,KAAL,CAAWT,CAAX,CAAP;AACAI,YAAAA,CAAC,GAAG,KAAKb,SAAL,CAAeC,IAAf,CAAJ;;AACA,gBAAIW,cAAc,KAAK,KAAvB,EAA8B;AAC5B;AACD;AACF;AACF,SAnBD,MAmBO;AACLA,UAAAA,cAAc,GAAGP,EAAE,CAACJ,IAAD,EAAOY,CAAP,EAAUP,EAAV,EAAcI,IAAd,CAAnB;AACD;;AACD,YAAIE,cAAc,KAAK,KAAvB,EAA8B;AAC5B;AACD;;AACDF,QAAAA,IAAI,GAAGJ,EAAP;AACD;AACF,KAnCD;;AAqCAjD,IAAAA,WAAW,CAACS,SAAZ,CAAsBwD,IAAtB,GAA6B,UAASlB,IAAT,EAAehC,OAAf,EAAwB;AACnD,UAAImD,MAAJ,EAAYC,QAAZ,EAAsBC,EAAtB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4CC,EAA5C,EAAgD3C,CAAhD;;AACA,UAAIb,OAAO,CAACE,MAAR,IAAkB,IAAtB,EAA4B;AAC1B,aAAKA,MAAL,GAAcF,OAAO,CAACE,MAAtB;AACD;;AACD,UAAIF,OAAO,CAACG,gBAAR,IAA4B,IAAhC,EAAsC;AACpC,aAAKA,gBAAL,GAAwBH,OAAO,CAACG,gBAAhC;AACD;;AACD,UAAIH,OAAO,CAACI,WAAR,IAAuB,IAA3B,EAAiC;AAC/B,aAAKA,WAAL,GAAmBJ,OAAO,CAACI,WAA3B;AACD;;AACD,UAAIJ,OAAO,CAACe,QAAR,IAAoB,IAAxB,EAA8B;AAC5B,aAAKA,QAAL,GAAgBf,OAAO,CAACe,QAAxB;AACD;;AACDuC,MAAAA,KAAK,GAAG,KAAKvD,QAAL,CAAcc,CAAd,GAAkB,KAAKd,QAAL,CAAc0D,iBAAd,CAAgC,IAAhC,CAA1B;;AACA,UAAI,KAAK1D,QAAL,CAAcc,CAAd,GAAkB,KAAKM,IAAvB,IAA+BmC,KAAK,GAAG,KAAKnC,IAAhD,EAAsD;AACpD,aAAKuC,WAAL;AACD;;AACDP,MAAAA,MAAM,GAAG,EAAT;AACAI,MAAAA,SAAS,GAAG,CAAZ;AACAC,MAAAA,EAAE,GAAG,CAAL;AACAH,MAAAA,EAAE,GAAG,CAAL;AACAxC,MAAAA,CAAC,GAAG,KAAKd,QAAL,CAAcc,CAAlB;;AACAuC,MAAAA,QAAQ,GAAI,UAAS9B,KAAT,EAAgB;AAC1B,eAAO,YAAW;AAChBtB,UAAAA,OAAO,CAACuD,SAAR,GAAoBA,SAAS,GAAGjC,KAAK,CAAClB,WAAN,IAAqBoD,EAAE,GAAG,CAA1B,CAAhC;AACAxD,UAAAA,OAAO,CAAC2D,SAAR,GAAoBH,EAApB;AACAxD,UAAAA,OAAO,CAACO,SAAR,GAAoBe,KAAK,CAACf,SAA1B;AACAM,UAAAA,CAAC,GAAGS,KAAK,CAACvB,QAAN,CAAec,CAAnB;;AACAS,UAAAA,KAAK,CAACsC,IAAN,CAAW,MAAX,EAAmBT,MAAnB,EAA2BnD,OAA3B,EAAoCsB,KAApC;;AACA,iBAAO+B,EAAE,EAAT;AACD,SAPD;AAQD,OATU,CASR,IATQ,CAAX;;AAUA,WAAKO,IAAL,CAAU,cAAV,EAA0B5D,OAA1B,EAAmC,IAAnC;AACA,WAAK+B,QAAL,CAAcC,IAAd,EAAqB,UAASV,KAAT,EAAgB;AACnC,eAAO,UAASO,IAAT,EAAeY,CAAf,EAAkBP,EAAlB,EAAsBI,IAAtB,EAA4B;AACjC,cAAIuB,EAAJ,EAAQrB,cAAR;;AACA,cAAKF,IAAI,IAAI,IAAT,IAAkBA,IAAI,CAACW,QAA3B,EAAqC;AACnC3B,YAAAA,KAAK,CAACsC,IAAN,CAAW,WAAX,EAAwB5D,OAAxB,EAAiCsB,KAAjC;;AACAA,YAAAA,KAAK,CAACb,SAAN,GAAkBa,KAAK,CAACf,SAAxB;AACD;;AACD,cAAIkC,CAAC,IAAInB,KAAK,CAACb,SAAf,EAA0B;AACxB0C,YAAAA,MAAM,IAAItB,IAAV;AACA0B,YAAAA,SAAS,IAAId,CAAb;AACAe,YAAAA,EAAE;AACH;;AACD,cAAItB,EAAE,CAACe,QAAH,IAAeR,CAAC,GAAGnB,KAAK,CAACb,SAA7B,EAAwC;AACtC,gBAAIyB,EAAE,CAACe,QAAP,EAAiB;AACf3B,cAAAA,KAAK,CAACsC,IAAN,CAAW,UAAX,EAAuB5D,OAAvB,EAAgCsB,KAAhC;AACD;;AACDuC,YAAAA,EAAE,GAAGvC,KAAK,CAACvB,QAAN,CAAe0D,iBAAf,CAAiC,IAAjC,CAAL;;AACA,gBAAKnC,KAAK,CAACJ,MAAN,IAAgB,IAAjB,IAA0BI,KAAK,CAACP,QAAhC,IAA4CO,KAAK,CAACvB,QAAN,CAAec,CAAf,GAAmBgD,EAAE,GAAG,CAAxB,GAA4BvC,KAAK,CAACH,IAA9E,IAAsFG,KAAK,CAACR,MAAN,IAAgBQ,KAAK,CAACjB,OAAhH,EAAyH;AACvH,kBAAIiB,KAAK,CAACP,QAAN,KAAmB,IAAvB,EAA6B;AAC3BO,gBAAAA,KAAK,CAACP,QAAN,GAAiB,GAAjB;AACD;;AACDoC,cAAAA,MAAM,GAAGA,MAAM,CAACW,OAAP,CAAe,MAAf,EAAuB,EAAvB,CAAT;AACAP,cAAAA,SAAS,GAAGjC,KAAK,CAACM,SAAN,CAAgBuB,MAAM,GAAG7B,KAAK,CAACP,QAA/B,CAAZ;;AACA,qBAAOwC,SAAS,GAAGjC,KAAK,CAACf,SAAzB,EAAoC;AAClC4C,gBAAAA,MAAM,GAAGA,MAAM,CAACL,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoBgB,OAApB,CAA4B,MAA5B,EAAoC,EAApC,CAAT;AACAP,gBAAAA,SAAS,GAAGjC,KAAK,CAACM,SAAN,CAAgBuB,MAAM,GAAG7B,KAAK,CAACP,QAA/B,CAAZ;AACD;;AACDoC,cAAAA,MAAM,GAAGA,MAAM,GAAG7B,KAAK,CAACP,QAAxB;AACD;;AACD,gBAAImB,EAAE,CAACe,QAAH,IAAeR,CAAC,GAAGnB,KAAK,CAACb,SAA7B,EAAwC;AACtC0C,cAAAA,MAAM,GAAGtB,IAAT;AACA0B,cAAAA,SAAS,GAAGd,CAAZ;AACAe,cAAAA,EAAE,GAAG,CAAL;AACD;;AACDJ,YAAAA,QAAQ;;AACR,gBAAI9B,KAAK,CAACvB,QAAN,CAAec,CAAf,GAAmBgD,EAAnB,GAAwBvC,KAAK,CAACH,IAAlC,EAAwC;AACtCqB,cAAAA,cAAc,GAAGlB,KAAK,CAACoC,WAAN,EAAjB;;AACA,kBAAI,CAAClB,cAAL,EAAqB;AACnBgB,gBAAAA,EAAE,GAAG,CAAL;AACAL,gBAAAA,MAAM,GAAG,EAAT;AACA,uBAAO,KAAP;AACD;AACF;;AACD,gBAAIjB,EAAE,CAACe,QAAP,EAAiB;AACf3B,cAAAA,KAAK,CAACb,SAAN,GAAkBa,KAAK,CAACf,SAAxB;AACA4C,cAAAA,MAAM,GAAG,EAAT;AACAI,cAAAA,SAAS,GAAG,CAAZ;AACA,qBAAOC,EAAE,GAAG,CAAZ;AACD,aALD,MAKO;AACLlC,cAAAA,KAAK,CAACb,SAAN,GAAkBa,KAAK,CAACf,SAAN,GAAkBkC,CAApC;AACAU,cAAAA,MAAM,GAAGtB,IAAT;AACA0B,cAAAA,SAAS,GAAGd,CAAZ;AACA,qBAAOe,EAAE,GAAG,CAAZ;AACD;AACF,WA1CD,MA0CO;AACL,mBAAOlC,KAAK,CAACb,SAAN,IAAmBgC,CAA1B;AACD;AACF,SAxDD;AAyDD,OA1DmB,CA0DjB,IA1DiB,CAApB;;AA2DA,UAAIe,EAAE,GAAG,CAAT,EAAY;AACV,aAAKI,IAAL,CAAU,UAAV,EAAsB5D,OAAtB,EAA+B,IAA/B;AACAoD,QAAAA,QAAQ;AACT;;AACD,WAAKQ,IAAL,CAAU,YAAV,EAAwB5D,OAAxB,EAAiC,IAAjC;;AACA,UAAIA,OAAO,CAACwB,SAAR,KAAsB,IAA1B,EAAgC;AAC9B,YAAI6B,EAAE,GAAG,CAAT,EAAY;AACV,eAAKrC,UAAL,GAAkB,CAAlB;AACD;;AACD,aAAKA,UAAL,IAAmBhB,OAAO,CAACuD,SAA3B;AACA,eAAO,KAAKxD,QAAL,CAAcc,CAAd,GAAkBA,CAAzB;AACD,OAND,MAMO;AACL,eAAO,KAAKd,QAAL,CAAcY,CAAd,GAAkB,KAAKD,MAA9B;AACD;AACF,KA3GD;;AA6GAzB,IAAAA,WAAW,CAACS,SAAZ,CAAsBgE,WAAtB,GAAoC,UAAS1D,OAAT,EAAkB;AACpD,UAAIC,GAAJ;AACA,WAAK2D,IAAL,CAAU,YAAV,EAAwB5D,OAAxB,EAAiC,IAAjC;;AACA,UAAI,EAAE,KAAKc,MAAP,GAAgB,KAAKT,OAAzB,EAAkC;AAChC,YAAI,KAAKa,MAAL,IAAe,IAAnB,EAAyB;AACvB,iBAAO,KAAP;AACD;;AACD,aAAKnB,QAAL,CAAcgE,OAAd;AACA,aAAKjD,MAAL,GAAc,CAAd;AACA,aAAKF,MAAL,GAAc,KAAKb,QAAL,CAAcqB,IAAd,CAAmB4C,OAAnB,CAA2BC,GAAzC;AACA,aAAK9C,IAAL,GAAY,KAAKpB,QAAL,CAAcqB,IAAd,CAAmBD,IAAnB,EAAZ;AACA,aAAKpB,QAAL,CAAcY,CAAd,GAAkB,KAAKD,MAAvB;;AACA,YAAI,KAAKX,QAAL,CAAcmE,UAAlB,EAA8B;AAC5B,WAACjE,GAAG,GAAG,KAAKF,QAAZ,EAAsBoE,SAAtB,CAAgCC,KAAhC,CAAsCnE,GAAtC,EAA2C,KAAKF,QAAL,CAAcmE,UAAzD;AACD;;AACD,aAAKN,IAAL,CAAU,WAAV,EAAuB5D,OAAvB,EAAgC,IAAhC;AACD,OAbD,MAaO;AACL,aAAKD,QAAL,CAAcY,CAAd,IAAmB,KAAKJ,SAAL,GAAiB,KAAKD,SAAzC;AACA,aAAKP,QAAL,CAAcc,CAAd,GAAkB,KAAKD,MAAvB;AACA,aAAKgD,IAAL,CAAU,aAAV,EAAyB5D,OAAzB,EAAkC,IAAlC;AACD;;AACD,WAAK4D,IAAL,CAAU,cAAV,EAA0B5D,OAA1B,EAAmC,IAAnC;AACA,aAAO,IAAP;AACD,KAvBD;;AAyBA,WAAOf,WAAP;AAED,GA7Oa,CA6OXF,YA7OW,CAAd;;AA+OAsF,EAAAA,MAAM,CAACC,OAAP,GAAiBrF,WAAjB;AAED,CA1PD,EA0PGM,IA1PH,CA0PQ,IA1PR","sourcesContent":["// Generated by CoffeeScript 1.12.1\n(function() {\n  var EventEmitter, LineBreaker, LineWrapper,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  EventEmitter = require('events').EventEmitter;\n\n  LineBreaker = require('linebreak');\n\n  LineWrapper = (function(superClass) {\n    extend(LineWrapper, superClass);\n\n    function LineWrapper(document, options) {\n      var ref;\n      this.document = document;\n      this.indent = options.indent || 0;\n      this.characterSpacing = options.characterSpacing || 0;\n      this.wordSpacing = options.wordSpacing === 0;\n      this.columns = options.columns || 1;\n      this.columnGap = (ref = options.columnGap) != null ? ref : 18;\n      this.lineWidth = (options.width - (this.columnGap * (this.columns - 1))) / this.columns;\n      this.spaceLeft = this.lineWidth;\n      this.startX = this.document.x;\n      this.startY = this.document.y;\n      this.column = 1;\n      this.ellipsis = options.ellipsis;\n      this.continuedX = 0;\n      this.features = options.features;\n      if (options.height != null) {\n        this.height = options.height;\n        this.maxY = this.startY + options.height;\n      } else {\n        this.maxY = this.document.page.maxY();\n      }\n      this.on('firstLine', (function(_this) {\n        return function(options) {\n          var indent;\n          indent = _this.continuedX || _this.indent;\n          _this.document.x += indent;\n          _this.lineWidth -= indent;\n          return _this.once('line', function() {\n            _this.document.x -= indent;\n            _this.lineWidth += indent;\n            if (options.continued && !_this.continuedX) {\n              _this.continuedX = _this.indent;\n            }\n            if (!options.continued) {\n              return _this.continuedX = 0;\n            }\n          });\n        };\n      })(this));\n      this.on('lastLine', (function(_this) {\n        return function(options) {\n          var align;\n          align = options.align;\n          if (align === 'justify') {\n            options.align = 'left';\n          }\n          _this.lastLine = true;\n          return _this.once('line', function() {\n            _this.document.y += options.paragraphGap || 0;\n            options.align = align;\n            return _this.lastLine = false;\n          });\n        };\n      })(this));\n    }\n\n    LineWrapper.prototype.wordWidth = function(word) {\n      return this.document.widthOfString(word, this) + this.characterSpacing + this.wordSpacing;\n    };\n\n    LineWrapper.prototype.eachWord = function(text, fn) {\n      var bk, breaker, fbk, l, last, lbk, shouldContinue, w, word, wordWidths;\n      breaker = new LineBreaker(text);\n      last = null;\n      wordWidths = Object.create(null);\n      while (bk = breaker.nextBreak()) {\n        word = text.slice((last != null ? last.position : void 0) || 0, bk.position);\n        w = wordWidths[word] != null ? wordWidths[word] : wordWidths[word] = this.wordWidth(word);\n        if (w > this.lineWidth + this.continuedX) {\n          lbk = last;\n          fbk = {};\n          while (word.length) {\n            l = word.length;\n            while (w > this.spaceLeft) {\n              w = this.wordWidth(word.slice(0, --l));\n            }\n            fbk.required = l < word.length;\n            shouldContinue = fn(word.slice(0, l), w, fbk, lbk);\n            lbk = {\n              required: false\n            };\n            word = word.slice(l);\n            w = this.wordWidth(word);\n            if (shouldContinue === false) {\n              break;\n            }\n          }\n        } else {\n          shouldContinue = fn(word, w, bk, last);\n        }\n        if (shouldContinue === false) {\n          break;\n        }\n        last = bk;\n      }\n    };\n\n    LineWrapper.prototype.wrap = function(text, options) {\n      var buffer, emitLine, lc, nextY, textWidth, wc, y;\n      if (options.indent != null) {\n        this.indent = options.indent;\n      }\n      if (options.characterSpacing != null) {\n        this.characterSpacing = options.characterSpacing;\n      }\n      if (options.wordSpacing != null) {\n        this.wordSpacing = options.wordSpacing;\n      }\n      if (options.ellipsis != null) {\n        this.ellipsis = options.ellipsis;\n      }\n      nextY = this.document.y + this.document.currentLineHeight(true);\n      if (this.document.y > this.maxY || nextY > this.maxY) {\n        this.nextSection();\n      }\n      buffer = '';\n      textWidth = 0;\n      wc = 0;\n      lc = 0;\n      y = this.document.y;\n      emitLine = (function(_this) {\n        return function() {\n          options.textWidth = textWidth + _this.wordSpacing * (wc - 1);\n          options.wordCount = wc;\n          options.lineWidth = _this.lineWidth;\n          y = _this.document.y;\n          _this.emit('line', buffer, options, _this);\n          return lc++;\n        };\n      })(this);\n      this.emit('sectionStart', options, this);\n      this.eachWord(text, (function(_this) {\n        return function(word, w, bk, last) {\n          var lh, shouldContinue;\n          if ((last == null) || last.required) {\n            _this.emit('firstLine', options, _this);\n            _this.spaceLeft = _this.lineWidth;\n          }\n          if (w <= _this.spaceLeft) {\n            buffer += word;\n            textWidth += w;\n            wc++;\n          }\n          if (bk.required || w > _this.spaceLeft) {\n            if (bk.required) {\n              _this.emit('lastLine', options, _this);\n            }\n            lh = _this.document.currentLineHeight(true);\n            if ((_this.height != null) && _this.ellipsis && _this.document.y + lh * 2 > _this.maxY && _this.column >= _this.columns) {\n              if (_this.ellipsis === true) {\n                _this.ellipsis = 'â€¦';\n              }\n              buffer = buffer.replace(/\\s+$/, '');\n              textWidth = _this.wordWidth(buffer + _this.ellipsis);\n              while (textWidth > _this.lineWidth) {\n                buffer = buffer.slice(0, -1).replace(/\\s+$/, '');\n                textWidth = _this.wordWidth(buffer + _this.ellipsis);\n              }\n              buffer = buffer + _this.ellipsis;\n            }\n            if (bk.required && w > _this.spaceLeft) {\n              buffer = word;\n              textWidth = w;\n              wc = 1;\n            }\n            emitLine();\n            if (_this.document.y + lh > _this.maxY) {\n              shouldContinue = _this.nextSection();\n              if (!shouldContinue) {\n                wc = 0;\n                buffer = '';\n                return false;\n              }\n            }\n            if (bk.required) {\n              _this.spaceLeft = _this.lineWidth;\n              buffer = '';\n              textWidth = 0;\n              return wc = 0;\n            } else {\n              _this.spaceLeft = _this.lineWidth - w;\n              buffer = word;\n              textWidth = w;\n              return wc = 1;\n            }\n          } else {\n            return _this.spaceLeft -= w;\n          }\n        };\n      })(this));\n      if (wc > 0) {\n        this.emit('lastLine', options, this);\n        emitLine();\n      }\n      this.emit('sectionEnd', options, this);\n      if (options.continued === true) {\n        if (lc > 1) {\n          this.continuedX = 0;\n        }\n        this.continuedX += options.textWidth;\n        return this.document.y = y;\n      } else {\n        return this.document.x = this.startX;\n      }\n    };\n\n    LineWrapper.prototype.nextSection = function(options) {\n      var ref;\n      this.emit('sectionEnd', options, this);\n      if (++this.column > this.columns) {\n        if (this.height != null) {\n          return false;\n        }\n        this.document.addPage();\n        this.column = 1;\n        this.startY = this.document.page.margins.top;\n        this.maxY = this.document.page.maxY();\n        this.document.x = this.startX;\n        if (this.document._fillColor) {\n          (ref = this.document).fillColor.apply(ref, this.document._fillColor);\n        }\n        this.emit('pageBreak', options, this);\n      } else {\n        this.document.x += this.lineWidth + this.columnGap;\n        this.document.y = this.startY;\n        this.emit('columnBreak', options, this);\n      }\n      this.emit('sectionStart', options, this);\n      return true;\n    };\n\n    return LineWrapper;\n\n  })(EventEmitter);\n\n  module.exports = LineWrapper;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}