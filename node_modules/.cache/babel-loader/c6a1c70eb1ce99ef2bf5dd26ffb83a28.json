{"ast":null,"code":"var _jsxFileName = \"/Users/kaja/Code/mallar/app/src/CvForm/Experience.js\";\nimport React, { useContext, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport InfoCard from './InfoCard';\nimport { ExperienceDispatchContext } from 'context/experience';\nimport deleteImg from \"assets/svg/delete.svg\";\n\nconst Experience = ({\n  index\n}) => {\n  let typingTimer = null;\n  const dipatch = useContext(ExperienceDispatchContext);\n\n  const onChange = event => {\n    dipatch({\n      type: 'update',\n      index: index,\n      fieldName: event.target.id,\n      payload: event.currentTarget.value\n    });\n  };\n\n  useEffect(() => {\n    return function cleanup() {\n      clearTimeout(typingTimer);\n    };\n  });\n\n  const onChangeTimeout = event => {\n    const val = event.target.value;\n    const id = event.target.id;\n    clearTimeout(typingTimer);\n    typingTimer = setTimeout(() => {\n      if (val) {\n        dipatch({\n          type: 'update',\n          index: index,\n          fieldName: id,\n          payload: val\n        });\n      }\n    }, 3000);\n  };\n\n  return /*#__PURE__*/React.createElement(InfoCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"workTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Titel\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"employer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Arbetsgivare\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"startDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: onChange,\n    type: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"endDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Slut\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: onChange,\n    type: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Beskrivning\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: onChangeTimeout,\n    as: \"textarea\",\n    rows: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Experience;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/src/CvForm/Experience.js"],"names":["React","useContext","useEffect","Form","Col","InfoCard","ExperienceDispatchContext","Experience","index","typingTimer","dipatch","onChange","event","type","fieldName","target","id","payload","currentTarget","value","cleanup","clearTimeout","onChangeTimeout","val","setTimeout"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport InfoCard from './InfoCard';\nimport { ExperienceDispatchContext } from 'context/experience'\nimport deleteImg from 'assets/svg/delete.svg'\n\n\nconst Experience = ({index}) => {\n    let typingTimer = null;\n    const dipatch = useContext(ExperienceDispatchContext)\n    const onChange = (event) => {\n        dipatch({\n            type: 'update',\n            index: index,\n            fieldName: event.target.id,\n            payload: event.currentTarget.value,\n        })\n    }\n\n    useEffect(() => {\n        return function cleanup() {\n            clearTimeout(typingTimer);\n        };\n    });\n\n    const onChangeTimeout = (event) => {\n        const val = event.target.value;\n        const id = event.target.id;\n        clearTimeout(typingTimer);\n        typingTimer = setTimeout(() => {\n            if (val) {\n                dipatch({\n                    type: 'update',\n                    index: index,\n                    fieldName: id,\n                    payload: val,\n                })\n            }\n        }, 3000);\n    }\n\n    return (\n        <InfoCard>\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"workTitle\">\n                    <Form.Label>Titel</Form.Label>\n                    <Form.Control type=\"text\" onChange={onChange}/>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"employer\">\n                    <Form.Label>Arbetsgivare</Form.Label>\n                    <Form.Control onChange={onChange} />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"startDate\">\n                    <Form.Label>Start</Form.Label>\n                    <Form.Control onChange={onChange} type=\"date\"/>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"endDate\">\n                    <Form.Label>Slut</Form.Label>\n                    <Form.Control onChange={onChange} type=\"date\"/>\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Group controlId=\"description\">\n                <Form.Label>Beskrivning</Form.Label>\n                <Form.Control onChange={onChangeTimeout} as=\"textarea\" rows=\"4\"/>\n            </Form.Group>\n        </InfoCard>\n    )\n}\n\n\n\nexport default Experience"]},"metadata":{},"sourceType":"module"}