{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _getDefs = _interopRequireDefault(require(\"./getDefs\"));\n\nconst isDefs = R.propEq('type', P.Defs);\nconst isNotDefs = R.complement(isDefs);\nconst detachDefs = R.evolve({\n  children: R.filter(isNotDefs)\n});\nconst URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\n\nconst replaceDef = defs => R.compose(R.when(R.test(URL_REGEX), R.compose(R.prop(R.__, defs), R.prop(1), R.match(URL_REGEX))), R.defaultTo(''));\n\nconst parseNodeDefs = defs => node => R.compose(R.evolve({\n  props: R.evolve({\n    fill: replaceDef(defs),\n    clipPath: replaceDef(defs)\n  })\n}), R.evolve({\n  children: R.map(parseNodeDefs(defs))\n}))(node);\n\nconst parseDefs = root => {\n  const defs = (0, _getDefs.default)(root);\n  return R.evolve({\n    children: R.map(parseNodeDefs(defs))\n  }, root);\n};\n\nconst replaceDefs = R.compose(detachDefs, parseDefs);\nvar _default = replaceDefs;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/layout/lib/svg/replaceDefs.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","P","_getDefs","isDefs","propEq","Defs","isNotDefs","complement","detachDefs","evolve","children","filter","URL_REGEX","replaceDef","defs","compose","when","test","prop","__","match","defaultTo","parseNodeDefs","node","props","fill","clipPath","map","parseDefs","root","replaceDefs","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGJ,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,CAAC,GAAGL,uBAAuB,CAACD,OAAO,CAAC,uBAAD,CAAR,CAA/B;;AAEA,IAAIO,QAAQ,GAAGR,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,MAAMQ,MAAM,GAAGH,CAAC,CAACI,MAAF,CAAS,MAAT,EAAiBH,CAAC,CAACI,IAAnB,CAAf;AACA,MAAMC,SAAS,GAAGN,CAAC,CAACO,UAAF,CAAaJ,MAAb,CAAlB;AACA,MAAMK,UAAU,GAAGR,CAAC,CAACS,MAAF,CAAS;AAC1BC,EAAAA,QAAQ,EAAEV,CAAC,CAACW,MAAF,CAASL,SAAT;AADgB,CAAT,CAAnB;AAGA,MAAMM,SAAS,GAAG,4BAAlB;;AAEA,MAAMC,UAAU,GAAGC,IAAI,IAAId,CAAC,CAACe,OAAF,CAAUf,CAAC,CAACgB,IAAF,CAAOhB,CAAC,CAACiB,IAAF,CAAOL,SAAP,CAAP,EAA0BZ,CAAC,CAACe,OAAF,CAAUf,CAAC,CAACkB,IAAF,CAAOlB,CAAC,CAACmB,EAAT,EAAaL,IAAb,CAAV,EAA8Bd,CAAC,CAACkB,IAAF,CAAO,CAAP,CAA9B,EAAyClB,CAAC,CAACoB,KAAF,CAAQR,SAAR,CAAzC,CAA1B,CAAV,EAAmGZ,CAAC,CAACqB,SAAF,CAAY,EAAZ,CAAnG,CAA3B;;AAEA,MAAMC,aAAa,GAAGR,IAAI,IAAIS,IAAI,IAAIvB,CAAC,CAACe,OAAF,CAAUf,CAAC,CAACS,MAAF,CAAS;AACvDe,EAAAA,KAAK,EAAExB,CAAC,CAACS,MAAF,CAAS;AACdgB,IAAAA,IAAI,EAAEZ,UAAU,CAACC,IAAD,CADF;AAEdY,IAAAA,QAAQ,EAAEb,UAAU,CAACC,IAAD;AAFN,GAAT;AADgD,CAAT,CAAV,EAKlCd,CAAC,CAACS,MAAF,CAAS;AACXC,EAAAA,QAAQ,EAAEV,CAAC,CAAC2B,GAAF,CAAML,aAAa,CAACR,IAAD,CAAnB;AADC,CAAT,CALkC,EAOlCS,IAPkC,CAAtC;;AASA,MAAMK,SAAS,GAAGC,IAAI,IAAI;AACxB,QAAMf,IAAI,GAAG,CAAC,GAAGZ,QAAQ,CAACH,OAAb,EAAsB8B,IAAtB,CAAb;AACA,SAAO7B,CAAC,CAACS,MAAF,CAAS;AACdC,IAAAA,QAAQ,EAAEV,CAAC,CAAC2B,GAAF,CAAML,aAAa,CAACR,IAAD,CAAnB;AADI,GAAT,EAEJe,IAFI,CAAP;AAGD,CALD;;AAOA,MAAMC,WAAW,GAAG9B,CAAC,CAACe,OAAF,CAAUP,UAAV,EAAsBoB,SAAtB,CAApB;AACA,IAAIG,QAAQ,GAAGD,WAAf;AACAjC,OAAO,CAACE,OAAR,GAAkBgC,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _getDefs = _interopRequireDefault(require(\"./getDefs\"));\n\nconst isDefs = R.propEq('type', P.Defs);\nconst isNotDefs = R.complement(isDefs);\nconst detachDefs = R.evolve({\n  children: R.filter(isNotDefs)\n});\nconst URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\n\nconst replaceDef = defs => R.compose(R.when(R.test(URL_REGEX), R.compose(R.prop(R.__, defs), R.prop(1), R.match(URL_REGEX))), R.defaultTo(''));\n\nconst parseNodeDefs = defs => node => R.compose(R.evolve({\n  props: R.evolve({\n    fill: replaceDef(defs),\n    clipPath: replaceDef(defs)\n  })\n}), R.evolve({\n  children: R.map(parseNodeDefs(defs))\n}))(node);\n\nconst parseDefs = root => {\n  const defs = (0, _getDefs.default)(root);\n  return R.evolve({\n    children: R.map(parseNodeDefs(defs))\n  }, root);\n};\n\nconst replaceDefs = R.compose(detachDefs, parseDefs);\nvar _default = replaceDefs;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}