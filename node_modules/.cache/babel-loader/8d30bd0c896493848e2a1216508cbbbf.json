{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nconst DPI = 72; // 72pt per inch.\n\nconst MM_FACTOR = 1 / 25.4 * DPI;\nconst CM_FACTOR = 1 / 2.54 * DPI;\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\n\nconst parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n  return match ? {\n    value: parseFloat(match[1], 10),\n    unit: match[2] || 'pt'\n  } : {\n    value,\n    unit: undefined\n  };\n};\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nconst transformUnit = R.curryN(2, (container, value) => {\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * DPI;\n\n    case 'mm':\n      return scalar.value * MM_FACTOR;\n\n    case 'cm':\n      return scalar.value * CM_FACTOR;\n\n    case 'vh':\n      return scalar.value * (container.height / 100);\n\n    case 'vw':\n      return scalar.value * (container.width / 100);\n\n    default:\n      return scalar.value;\n  }\n});\n/**\n * Transform units on given styles object.\n * Container is given to calculate vh and vw\n *\n * @param {Object} container\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\n\nconst transformUnits = (container, styles) => R.map(transformUnit(container), styles);\n\nvar _default = R.curryN(2, transformUnits);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/stylesheet/lib/units.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","R","DPI","MM_FACTOR","CM_FACTOR","parseValue","value","match","exec","parseFloat","unit","undefined","transformUnit","curryN","container","scalar","height","width","transformUnits","styles","map","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,MAAMK,GAAG,GAAG,EAAZ,C,CAAgB;;AAEhB,MAAMC,SAAS,GAAG,IAAI,IAAJ,GAAWD,GAA7B;AACA,MAAME,SAAS,GAAG,IAAI,IAAJ,GAAWF,GAA7B;AACA;;;;;;;AAOA,MAAMG,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,KAAK,GAAG,0CAA0CC,IAA1C,CAA+CF,KAA/C,CAAd;AACA,SAAOC,KAAK,GAAG;AACbD,IAAAA,KAAK,EAAEG,UAAU,CAACF,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CADJ;AAEbG,IAAAA,IAAI,EAAEH,KAAK,CAAC,CAAD,CAAL,IAAY;AAFL,GAAH,GAGR;AACFD,IAAAA,KADE;AAEFI,IAAAA,IAAI,EAAEC;AAFJ,GAHJ;AAOD,CATD;AAUA;;;;;;;;;AASA,MAAMC,aAAa,GAAGX,CAAC,CAACY,MAAF,CAAS,CAAT,EAAY,CAACC,SAAD,EAAYR,KAAZ,KAAsB;AACtD,QAAMS,MAAM,GAAGV,UAAU,CAACC,KAAD,CAAzB;;AAEA,UAAQS,MAAM,CAACL,IAAf;AACE,SAAK,IAAL;AACE,aAAOK,MAAM,CAACT,KAAP,GAAeJ,GAAtB;;AAEF,SAAK,IAAL;AACE,aAAOa,MAAM,CAACT,KAAP,GAAeH,SAAtB;;AAEF,SAAK,IAAL;AACE,aAAOY,MAAM,CAACT,KAAP,GAAeF,SAAtB;;AAEF,SAAK,IAAL;AACE,aAAOW,MAAM,CAACT,KAAP,IAAgBQ,SAAS,CAACE,MAAV,GAAmB,GAAnC,CAAP;;AAEF,SAAK,IAAL;AACE,aAAOD,MAAM,CAACT,KAAP,IAAgBQ,SAAS,CAACG,KAAV,GAAkB,GAAlC,CAAP;;AAEF;AACE,aAAOF,MAAM,CAACT,KAAd;AAjBJ;AAmBD,CAtBqB,CAAtB;AAuBA;;;;;;;;;AASA,MAAMY,cAAc,GAAG,CAACJ,SAAD,EAAYK,MAAZ,KAAuBlB,CAAC,CAACmB,GAAF,CAAMR,aAAa,CAACE,SAAD,CAAnB,EAAgCK,MAAhC,CAA9C;;AAEA,IAAIE,QAAQ,GAAGpB,CAAC,CAACY,MAAF,CAAS,CAAT,EAAYK,cAAZ,CAAf;;AAEApB,OAAO,CAACE,OAAR,GAAkBqB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nconst DPI = 72; // 72pt per inch.\n\nconst MM_FACTOR = 1 / 25.4 * DPI;\nconst CM_FACTOR = 1 / 2.54 * DPI;\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\n\nconst parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n  return match ? {\n    value: parseFloat(match[1], 10),\n    unit: match[2] || 'pt'\n  } : {\n    value,\n    unit: undefined\n  };\n};\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nconst transformUnit = R.curryN(2, (container, value) => {\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * DPI;\n\n    case 'mm':\n      return scalar.value * MM_FACTOR;\n\n    case 'cm':\n      return scalar.value * CM_FACTOR;\n\n    case 'vh':\n      return scalar.value * (container.height / 100);\n\n    case 'vw':\n      return scalar.value * (container.width / 100);\n\n    default:\n      return scalar.value;\n  }\n});\n/**\n * Transform units on given styles object.\n * Container is given to calculate vh and vw\n *\n * @param {Object} container\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\n\nconst transformUnits = (container, styles) => R.map(transformUnit(container), styles);\n\nvar _default = R.curryN(2, transformUnits);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}