{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n/* eslint-disable no-await-in-loop */\n\n/**\n * Performs right-to-left function composition with async functions support\n *\n * @param  {...any} functions\n */\n\n\nconst asyncCompose = (...fns) => async (value, ...args) => {\n  let result = value;\n  const reversedFns = R.reverse(fns);\n\n  for (let i = 0; i < reversedFns.length; i += 1) {\n    const fn = reversedFns[i];\n    result = await fn(result, ...args);\n  }\n\n  return result;\n};\n\nvar _default = asyncCompose;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/layout/lib/utils/asyncCompose.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","R","asyncCompose","fns","value","args","result","reversedFns","reverse","i","length","fn","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;AAEA;;AAEA;;;;;;;AAKA,MAAMK,YAAY,GAAG,CAAC,GAAGC,GAAJ,KAAY,OAAOC,KAAP,EAAc,GAAGC,IAAjB,KAA0B;AACzD,MAAIC,MAAM,GAAGF,KAAb;AACA,QAAMG,WAAW,GAAGN,CAAC,CAACO,OAAF,CAAUL,GAAV,CAApB;;AAEA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwCD,CAAC,IAAI,CAA7C,EAAgD;AAC9C,UAAME,EAAE,GAAGJ,WAAW,CAACE,CAAD,CAAtB;AACAH,IAAAA,MAAM,GAAG,MAAMK,EAAE,CAACL,MAAD,EAAS,GAAGD,IAAZ,CAAjB;AACD;;AAED,SAAOC,MAAP;AACD,CAVD;;AAYA,IAAIM,QAAQ,GAAGV,YAAf;AACAJ,OAAO,CAACE,OAAR,GAAkBY,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/* eslint-disable no-await-in-loop */\n\n/**\n * Performs right-to-left function composition with async functions support\n *\n * @param  {...any} functions\n */\nconst asyncCompose = (...fns) => async (value, ...args) => {\n  let result = value;\n  const reversedFns = R.reverse(fns);\n\n  for (let i = 0; i < reversedFns.length; i += 1) {\n    const fn = reversedFns[i];\n    result = await fn(result, ...args);\n  }\n\n  return result;\n};\n\nvar _default = asyncCompose;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}