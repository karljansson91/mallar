{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _layout = _interopRequireDefault(require(\"@react-pdf/textkit/layout\"));\n\nvar _linebreaker = _interopRequireDefault(require(\"@react-pdf/textkit/engines/linebreaker\"));\n\nvar _justification = _interopRequireDefault(require(\"@react-pdf/textkit/engines/justification\"));\n\nvar _scriptItemizer = _interopRequireDefault(require(\"@react-pdf/textkit/engines/scriptItemizer\"));\n\nvar _wordHyphenation = _interopRequireDefault(require(\"@react-pdf/textkit/engines/wordHyphenation\"));\n\nvar _textDecoration = _interopRequireDefault(require(\"@react-pdf/textkit/engines/textDecoration\"));\n\nvar _attributedString = _interopRequireDefault(require(\"@react-pdf/textkit/attributedString\"));\n\nvar _transformText = _interopRequireDefault(require(\"../text/transformText\"));\n\nvar _fontSubstitution = _interopRequireDefault(require(\"../text/fontSubstitution\"));\n\nconst isTextInstance = R.propEq('type', P.TextInstance);\nconst engines = {\n  linebreaker: _linebreaker.default,\n  justification: _justification.default,\n  scriptItemizer: _scriptItemizer.default,\n  wordHyphenation: _wordHyphenation.default,\n  fontSubstitution: _fontSubstitution.default,\n  textDecoration: _textDecoration.default\n};\nconst engine = (0, _layout.default)(engines);\n\nconst getFragments = (fontStore, instance) => {\n  if (!instance) return [{\n    string: ''\n  }];\n  const fragments = [];\n  const {\n    fill = 'black',\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    opacity\n  } = instance.props;\n  const obj = fontStore ? fontStore.getFont({\n    fontFamily,\n    fontWeight,\n    fontStyle\n  }) : null;\n  const font = obj ? obj.data : fontFamily;\n  const attributes = {\n    font,\n    opacity,\n    fontSize,\n    color: fill,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || fill,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || fill\n  };\n\n  for (let i = 0; i < instance.children.length; i += 1) {\n    const child = instance.children[i];\n\n    if (isTextInstance(child)) {\n      fragments.push({\n        string: (0, _transformText.default)(child.value, textTransform),\n        attributes\n      });\n    } else if (child) {\n      fragments.push(...getFragments(child));\n    }\n  }\n\n  return fragments;\n};\n\nconst getAttributedString = (fontStore, instance) => _attributedString.default.fromFragments(getFragments(fontStore, instance));\n\nconst AlmostInfinity = 999999999999;\nconst shrinkWhitespaceFactor = {\n  before: -0.5,\n  after: -0.5\n};\n\nconst layoutTspan = fontStore => node => {\n  const attributedString = getAttributedString(fontStore, node);\n  const x = R.pathOr(0, ['props', 'x'], node);\n  const y = R.pathOr(0, ['props', 'y'], node);\n  const container = {\n    x,\n    y,\n    width: AlmostInfinity,\n    height: AlmostInfinity\n  };\n  const hyphenationCallback = fontStore ? fontStore.getHyphenationCallback() : null;\n  const layoutOptions = {\n    hyphenationCallback,\n    shrinkWhitespaceFactor\n  };\n  const lines = R.compose(R.reduce(R.concat, []), engine)(attributedString, container, layoutOptions);\n  return R.assoc('lines', lines, node);\n};\n\nconst layoutText = (fontStore, node) => R.evolve({\n  children: R.map(layoutTspan(fontStore))\n})(node);\n\nvar _default = R.curryN(2, layoutText);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/layout/lib/svg/layoutText.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","P","_layout","_linebreaker","_justification","_scriptItemizer","_wordHyphenation","_textDecoration","_attributedString","_transformText","_fontSubstitution","isTextInstance","propEq","TextInstance","engines","linebreaker","justification","scriptItemizer","wordHyphenation","fontSubstitution","textDecoration","engine","getFragments","fontStore","instance","string","fragments","fill","fontFamily","fontWeight","fontStyle","fontSize","textDecorationColor","textDecorationStyle","textTransform","opacity","props","obj","getFont","font","data","attributes","color","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","i","children","length","child","push","value","getAttributedString","fromFragments","AlmostInfinity","shrinkWhitespaceFactor","before","after","layoutTspan","node","attributedString","x","pathOr","y","container","width","height","hyphenationCallback","getHyphenationCallback","layoutOptions","lines","compose","reduce","concat","assoc","layoutText","evolve","map","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGJ,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,CAAC,GAAGL,uBAAuB,CAACD,OAAO,CAAC,uBAAD,CAAR,CAA/B;;AAEA,IAAIO,OAAO,GAAGR,sBAAsB,CAACC,OAAO,CAAC,2BAAD,CAAR,CAApC;;AAEA,IAAIQ,YAAY,GAAGT,sBAAsB,CAACC,OAAO,CAAC,wCAAD,CAAR,CAAzC;;AAEA,IAAIS,cAAc,GAAGV,sBAAsB,CAACC,OAAO,CAAC,0CAAD,CAAR,CAA3C;;AAEA,IAAIU,eAAe,GAAGX,sBAAsB,CAACC,OAAO,CAAC,2CAAD,CAAR,CAA5C;;AAEA,IAAIW,gBAAgB,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,4CAAD,CAAR,CAA7C;;AAEA,IAAIY,eAAe,GAAGb,sBAAsB,CAACC,OAAO,CAAC,2CAAD,CAAR,CAA5C;;AAEA,IAAIa,iBAAiB,GAAGd,sBAAsB,CAACC,OAAO,CAAC,qCAAD,CAAR,CAA9C;;AAEA,IAAIc,cAAc,GAAGf,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAA3C;;AAEA,IAAIe,iBAAiB,GAAGhB,sBAAsB,CAACC,OAAO,CAAC,0BAAD,CAAR,CAA9C;;AAEA,MAAMgB,cAAc,GAAGX,CAAC,CAACY,MAAF,CAAS,MAAT,EAAiBX,CAAC,CAACY,YAAnB,CAAvB;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAEZ,YAAY,CAACJ,OADZ;AAEdiB,EAAAA,aAAa,EAAEZ,cAAc,CAACL,OAFhB;AAGdkB,EAAAA,cAAc,EAAEZ,eAAe,CAACN,OAHlB;AAIdmB,EAAAA,eAAe,EAAEZ,gBAAgB,CAACP,OAJpB;AAKdoB,EAAAA,gBAAgB,EAAET,iBAAiB,CAACX,OALtB;AAMdqB,EAAAA,cAAc,EAAEb,eAAe,CAACR;AANlB,CAAhB;AAQA,MAAMsB,MAAM,GAAG,CAAC,GAAGnB,OAAO,CAACH,OAAZ,EAAqBe,OAArB,CAAf;;AAEA,MAAMQ,YAAY,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AAC5C,MAAI,CAACA,QAAL,EAAe,OAAO,CAAC;AACrBC,IAAAA,MAAM,EAAE;AADa,GAAD,CAAP;AAGf,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAM;AACJC,IAAAA,IAAI,GAAG,OADH;AAEJC,IAAAA,UAAU,GAAG,WAFT;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,QAAQ,GAAG,EALP;AAMJX,IAAAA,cANI;AAOJY,IAAAA,mBAPI;AAQJC,IAAAA,mBARI;AASJC,IAAAA,aATI;AAUJC,IAAAA;AAVI,MAWFX,QAAQ,CAACY,KAXb;AAYA,QAAMC,GAAG,GAAGd,SAAS,GAAGA,SAAS,CAACe,OAAV,CAAkB;AACxCV,IAAAA,UADwC;AAExCC,IAAAA,UAFwC;AAGxCC,IAAAA;AAHwC,GAAlB,CAAH,GAIhB,IAJL;AAKA,QAAMS,IAAI,GAAGF,GAAG,GAAGA,GAAG,CAACG,IAAP,GAAcZ,UAA9B;AACA,QAAMa,UAAU,GAAG;AACjBF,IAAAA,IADiB;AAEjBJ,IAAAA,OAFiB;AAGjBJ,IAAAA,QAHiB;AAIjBW,IAAAA,KAAK,EAAEf,IAJU;AAKjBgB,IAAAA,cAAc,EAAEV,mBALC;AAMjBW,IAAAA,SAAS,EAAExB,cAAc,KAAK,WANb;AAOjByB,IAAAA,cAAc,EAAEb,mBAAmB,IAAIL,IAPtB;AAQjBmB,IAAAA,MAAM,EAAE1B,cAAc,KAAK,cARV;AASjB2B,IAAAA,WAAW,EAAEd,mBATI;AAUjBe,IAAAA,WAAW,EAAEhB,mBAAmB,IAAIL;AAVnB,GAAnB;;AAaA,OAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,QAAQ,CAAC0B,QAAT,CAAkBC,MAAtC,EAA8CF,CAAC,IAAI,CAAnD,EAAsD;AACpD,UAAMG,KAAK,GAAG5B,QAAQ,CAAC0B,QAAT,CAAkBD,CAAlB,CAAd;;AAEA,QAAItC,cAAc,CAACyC,KAAD,CAAlB,EAA2B;AACzB1B,MAAAA,SAAS,CAAC2B,IAAV,CAAe;AACb5B,QAAAA,MAAM,EAAE,CAAC,GAAGhB,cAAc,CAACV,OAAnB,EAA4BqD,KAAK,CAACE,KAAlC,EAAyCpB,aAAzC,CADK;AAEbO,QAAAA;AAFa,OAAf;AAID,KALD,MAKO,IAAIW,KAAJ,EAAW;AAChB1B,MAAAA,SAAS,CAAC2B,IAAV,CAAe,GAAG/B,YAAY,CAAC8B,KAAD,CAA9B;AACD;AACF;;AAED,SAAO1B,SAAP;AACD,CAlDD;;AAoDA,MAAM6B,mBAAmB,GAAG,CAAChC,SAAD,EAAYC,QAAZ,KAAyBhB,iBAAiB,CAACT,OAAlB,CAA0ByD,aAA1B,CAAwClC,YAAY,CAACC,SAAD,EAAYC,QAAZ,CAApD,CAArD;;AAEA,MAAMiC,cAAc,GAAG,YAAvB;AACA,MAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,MAAM,EAAE,CAAC,GADoB;AAE7BC,EAAAA,KAAK,EAAE,CAAC;AAFqB,CAA/B;;AAKA,MAAMC,WAAW,GAAGtC,SAAS,IAAIuC,IAAI,IAAI;AACvC,QAAMC,gBAAgB,GAAGR,mBAAmB,CAAChC,SAAD,EAAYuC,IAAZ,CAA5C;AACA,QAAME,CAAC,GAAGhE,CAAC,CAACiE,MAAF,CAAS,CAAT,EAAY,CAAC,OAAD,EAAU,GAAV,CAAZ,EAA4BH,IAA5B,CAAV;AACA,QAAMI,CAAC,GAAGlE,CAAC,CAACiE,MAAF,CAAS,CAAT,EAAY,CAAC,OAAD,EAAU,GAAV,CAAZ,EAA4BH,IAA5B,CAAV;AACA,QAAMK,SAAS,GAAG;AAChBH,IAAAA,CADgB;AAEhBE,IAAAA,CAFgB;AAGhBE,IAAAA,KAAK,EAAEX,cAHS;AAIhBY,IAAAA,MAAM,EAAEZ;AAJQ,GAAlB;AAMA,QAAMa,mBAAmB,GAAG/C,SAAS,GAAGA,SAAS,CAACgD,sBAAV,EAAH,GAAwC,IAA7E;AACA,QAAMC,aAAa,GAAG;AACpBF,IAAAA,mBADoB;AAEpBZ,IAAAA;AAFoB,GAAtB;AAIA,QAAMe,KAAK,GAAGzE,CAAC,CAAC0E,OAAF,CAAU1E,CAAC,CAAC2E,MAAF,CAAS3E,CAAC,CAAC4E,MAAX,EAAmB,EAAnB,CAAV,EAAkCvD,MAAlC,EAA0C0C,gBAA1C,EAA4DI,SAA5D,EAAuEK,aAAvE,CAAd;AACA,SAAOxE,CAAC,CAAC6E,KAAF,CAAQ,OAAR,EAAiBJ,KAAjB,EAAwBX,IAAxB,CAAP;AACD,CAjBD;;AAmBA,MAAMgB,UAAU,GAAG,CAACvD,SAAD,EAAYuC,IAAZ,KAAqB9D,CAAC,CAAC+E,MAAF,CAAS;AAC/C7B,EAAAA,QAAQ,EAAElD,CAAC,CAACgF,GAAF,CAAMnB,WAAW,CAACtC,SAAD,CAAjB;AADqC,CAAT,EAErCuC,IAFqC,CAAxC;;AAIA,IAAImB,QAAQ,GAAGjF,CAAC,CAACkF,MAAF,CAAS,CAAT,EAAYJ,UAAZ,CAAf;;AAEAjF,OAAO,CAACE,OAAR,GAAkBkF,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _layout = _interopRequireDefault(require(\"@react-pdf/textkit/layout\"));\n\nvar _linebreaker = _interopRequireDefault(require(\"@react-pdf/textkit/engines/linebreaker\"));\n\nvar _justification = _interopRequireDefault(require(\"@react-pdf/textkit/engines/justification\"));\n\nvar _scriptItemizer = _interopRequireDefault(require(\"@react-pdf/textkit/engines/scriptItemizer\"));\n\nvar _wordHyphenation = _interopRequireDefault(require(\"@react-pdf/textkit/engines/wordHyphenation\"));\n\nvar _textDecoration = _interopRequireDefault(require(\"@react-pdf/textkit/engines/textDecoration\"));\n\nvar _attributedString = _interopRequireDefault(require(\"@react-pdf/textkit/attributedString\"));\n\nvar _transformText = _interopRequireDefault(require(\"../text/transformText\"));\n\nvar _fontSubstitution = _interopRequireDefault(require(\"../text/fontSubstitution\"));\n\nconst isTextInstance = R.propEq('type', P.TextInstance);\nconst engines = {\n  linebreaker: _linebreaker.default,\n  justification: _justification.default,\n  scriptItemizer: _scriptItemizer.default,\n  wordHyphenation: _wordHyphenation.default,\n  fontSubstitution: _fontSubstitution.default,\n  textDecoration: _textDecoration.default\n};\nconst engine = (0, _layout.default)(engines);\n\nconst getFragments = (fontStore, instance) => {\n  if (!instance) return [{\n    string: ''\n  }];\n  const fragments = [];\n  const {\n    fill = 'black',\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    opacity\n  } = instance.props;\n  const obj = fontStore ? fontStore.getFont({\n    fontFamily,\n    fontWeight,\n    fontStyle\n  }) : null;\n  const font = obj ? obj.data : fontFamily;\n  const attributes = {\n    font,\n    opacity,\n    fontSize,\n    color: fill,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || fill,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || fill\n  };\n\n  for (let i = 0; i < instance.children.length; i += 1) {\n    const child = instance.children[i];\n\n    if (isTextInstance(child)) {\n      fragments.push({\n        string: (0, _transformText.default)(child.value, textTransform),\n        attributes\n      });\n    } else if (child) {\n      fragments.push(...getFragments(child));\n    }\n  }\n\n  return fragments;\n};\n\nconst getAttributedString = (fontStore, instance) => _attributedString.default.fromFragments(getFragments(fontStore, instance));\n\nconst AlmostInfinity = 999999999999;\nconst shrinkWhitespaceFactor = {\n  before: -0.5,\n  after: -0.5\n};\n\nconst layoutTspan = fontStore => node => {\n  const attributedString = getAttributedString(fontStore, node);\n  const x = R.pathOr(0, ['props', 'x'], node);\n  const y = R.pathOr(0, ['props', 'y'], node);\n  const container = {\n    x,\n    y,\n    width: AlmostInfinity,\n    height: AlmostInfinity\n  };\n  const hyphenationCallback = fontStore ? fontStore.getHyphenationCallback() : null;\n  const layoutOptions = {\n    hyphenationCallback,\n    shrinkWhitespaceFactor\n  };\n  const lines = R.compose(R.reduce(R.concat, []), engine)(attributedString, container, layoutOptions);\n  return R.assoc('lines', lines, node);\n};\n\nconst layoutText = (fontStore, node) => R.evolve({\n  children: R.map(layoutTspan(fontStore))\n})(node);\n\nvar _default = R.curryN(2, layoutText);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}