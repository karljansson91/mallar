{"ast":null,"code":"// Generated by CoffeeScript 1.12.1\n(function () {\n  var EmbeddedFont, PDFFont, StandardFont, fontkit;\n  fontkit = require('fontkit');\n\n  PDFFont = function () {\n    PDFFont.open = function (document, src, family, id) {\n      var font;\n\n      if (typeof src === 'string') {\n        if (StandardFont.isStandardFont(src)) {\n          return new StandardFont(document, src, id);\n        }\n\n        font = fontkit.openSync(src, family);\n      } else if (Buffer.isBuffer(src)) {\n        font = fontkit.create(src, family);\n      } else if (src instanceof Uint8Array) {\n        font = fontkit.create(new Buffer(src), family);\n      } else if (src instanceof ArrayBuffer) {\n        font = fontkit.create(new Buffer(new Uint8Array(src)), family);\n      }\n\n      if (font == null) {\n        throw new Error('Not a supported font format or standard PDF font.');\n      }\n\n      return new EmbeddedFont(document, font, id);\n    };\n\n    function PDFFont() {\n      throw new Error('Cannot construct a PDFFont directly.');\n    }\n\n    PDFFont.prototype.encode = function (text) {\n      throw new Error('Must be implemented by subclasses');\n    };\n\n    PDFFont.prototype.widthOfString = function (text) {\n      throw new Error('Must be implemented by subclasses');\n    };\n\n    PDFFont.prototype.ref = function () {\n      return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();\n    };\n\n    PDFFont.prototype.finalize = function () {\n      if (this.embedded || this.dictionary == null) {\n        return;\n      }\n\n      this.embed();\n      return this.embedded = true;\n    };\n\n    PDFFont.prototype.embed = function () {\n      throw new Error('Must be implemented by subclasses');\n    };\n\n    PDFFont.prototype.lineHeight = function (size, includeGap) {\n      var gap;\n\n      if (includeGap == null) {\n        includeGap = false;\n      }\n\n      gap = includeGap ? this.lineGap : 0;\n      return (this.ascender + gap - this.descender) / 1000 * size;\n    };\n\n    return PDFFont;\n  }();\n\n  module.exports = PDFFont;\n  StandardFont = require('./font/standard');\n  EmbeddedFont = require('./font/embedded');\n}).call(this);","map":{"version":3,"sources":["/Users/kaja/Code/mallar/node_modules/pdfkit/js/font.js"],"names":["EmbeddedFont","PDFFont","StandardFont","fontkit","require","open","document","src","family","id","font","isStandardFont","openSync","Buffer","isBuffer","create","Uint8Array","ArrayBuffer","Error","prototype","encode","text","widthOfString","ref","dictionary","finalize","embedded","embed","lineHeight","size","includeGap","gap","lineGap","ascender","descender","module","exports","call"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.1\n(function() {\n  var EmbeddedFont, PDFFont, StandardFont, fontkit;\n\n  fontkit = require('fontkit');\n\n  PDFFont = (function() {\n    PDFFont.open = function(document, src, family, id) {\n      var font;\n      if (typeof src === 'string') {\n        if (StandardFont.isStandardFont(src)) {\n          return new StandardFont(document, src, id);\n        }\n        font = fontkit.openSync(src, family);\n      } else if (Buffer.isBuffer(src)) {\n        font = fontkit.create(src, family);\n      } else if (src instanceof Uint8Array) {\n        font = fontkit.create(new Buffer(src), family);\n      } else if (src instanceof ArrayBuffer) {\n        font = fontkit.create(new Buffer(new Uint8Array(src)), family);\n      }\n      if (font == null) {\n        throw new Error('Not a supported font format or standard PDF font.');\n      }\n      return new EmbeddedFont(document, font, id);\n    };\n\n    function PDFFont() {\n      throw new Error('Cannot construct a PDFFont directly.');\n    }\n\n    PDFFont.prototype.encode = function(text) {\n      throw new Error('Must be implemented by subclasses');\n    };\n\n    PDFFont.prototype.widthOfString = function(text) {\n      throw new Error('Must be implemented by subclasses');\n    };\n\n    PDFFont.prototype.ref = function() {\n      return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();\n    };\n\n    PDFFont.prototype.finalize = function() {\n      if (this.embedded || (this.dictionary == null)) {\n        return;\n      }\n      this.embed();\n      return this.embedded = true;\n    };\n\n    PDFFont.prototype.embed = function() {\n      throw new Error('Must be implemented by subclasses');\n    };\n\n    PDFFont.prototype.lineHeight = function(size, includeGap) {\n      var gap;\n      if (includeGap == null) {\n        includeGap = false;\n      }\n      gap = includeGap ? this.lineGap : 0;\n      return (this.ascender + gap - this.descender) / 1000 * size;\n    };\n\n    return PDFFont;\n\n  })();\n\n  module.exports = PDFFont;\n\n  StandardFont = require('./font/standard');\n\n  EmbeddedFont = require('./font/embedded');\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}