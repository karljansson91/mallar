{"ast":null,"code":"var _jsxFileName = \"/Users/kaja/Code/mallar/app/src/CvForm/Summary.js\";\nimport React, { useContext, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InfoCard from './InfoCard';\nimport { UserDispatchContext } from '../context/user';\n\nconst Summary = () => {\n  let typingTimer = null;\n  const userDispatch = useContext(UserDispatchContext);\n  useEffect(() => {\n    return function cleanup() {\n      clearTimeout(typingTimer);\n    };\n  });\n\n  const onChange = event => {\n    const val = event.target.value;\n    const id = event.target.id;\n    clearTimeout(typingTimer);\n    typingTimer = setTimeout(() => {\n      if (val) {\n        userDispatch({\n          type: 'field',\n          fieldName: id,\n          payload: val\n        });\n      }\n    }, 3000);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoCard, {\n    title: 'Sammanfattning av erfarenheter',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Beskriv din kompetens och markera dina upplevelser. Beskriv hur du arbetar i projekt och vad dina kollegor s\\xE4ger om dig.\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    onChange: onChange,\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Summary;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/src/CvForm/Summary.js"],"names":["React","useContext","useEffect","Form","InfoCard","UserDispatchContext","Summary","typingTimer","userDispatch","cleanup","clearTimeout","onChange","event","val","target","value","id","setTimeout","type","fieldName","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,mBAAT,QAAoC,iBAApC;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAClB,MAAIC,WAAW,GAAG,IAAlB;AACA,QAAMC,YAAY,GAAGP,UAAU,CAACI,mBAAD,CAA/B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,SAASO,OAAT,GAAmB;AACtBC,MAAAA,YAAY,CAACH,WAAD,CAAZ;AACH,KAFD;AAGH,GAJQ,CAAT;;AAMA,QAAMI,QAAQ,GAAIC,KAAD,IAAW;AACxB,UAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAzB;AACA,UAAMC,EAAE,GAAGJ,KAAK,CAACE,MAAN,CAAaE,EAAxB;AACAN,IAAAA,YAAY,CAACH,WAAD,CAAZ;AACAA,IAAAA,WAAW,GAAGU,UAAU,CAAC,MAAM;AAC3B,UAAIJ,GAAJ,EAAS;AACLL,QAAAA,YAAY,CAAC;AACTU,UAAAA,IAAI,EAAE,OADG;AAETC,UAAAA,SAAS,EAAEH,EAFF;AAGTI,UAAAA,OAAO,EAAEP;AAHA,SAAD,CAAZ;AAKH;AACJ,KARuB,EAQrB,IARqB,CAAxB;AASH,GAbD;;AAeA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mIADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,UAAjB;AAA4B,IAAA,QAAQ,EAAEF,QAAtC;AAAgD,IAAA,IAAI,EAAC,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,CADJ;AAUH,CAnCD;;AAwCA,eAAeL,OAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InfoCard from './InfoCard';\nimport { UserDispatchContext } from '../context/user';\n\n\nconst Summary = () => {\n    let typingTimer = null;\n    const userDispatch = useContext(UserDispatchContext)\n\n    useEffect(() => {\n        return function cleanup() {\n            clearTimeout(typingTimer);\n        };\n    });\n\n    const onChange = (event) => {\n        const val = event.target.value;\n        const id = event.target.id;\n        clearTimeout(typingTimer);\n        typingTimer = setTimeout(() => {\n            if (val) {\n                userDispatch({\n                    type: 'field',\n                    fieldName: id,\n                    payload: val,\n                })\n            }\n        }, 3000);\n    }\n\n    return (\n        <Form>\n            <InfoCard title={'Sammanfattning av erfarenheter'}>\n                <Form.Group controlId=\"profile\">\n                    <Form.Text className=\"text-muted\">Beskriv din kompetens och markera dina upplevelser. Beskriv hur du arbetar i projekt och vad dina kollegor s√§ger om dig.</Form.Text>\n                    <Form.Control as=\"textarea\" onChange={onChange} rows=\"3\" />\n                </Form.Group>\n            </InfoCard>\n        </Form>\n    )\n}\n\n\n\n\nexport default Summary"]},"metadata":{},"sourceType":"module"}