{"ast":null,"code":"var _jsxFileName = \"/Users/kaja/Code/mallar/app/src/Templates/Simple/Experience.js\";\nimport React, { useContext } from 'react';\nimport Title from '../Components/Title';\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\nimport PropTypes from 'prop-types';\nimport { ExperienceStateContext } from 'context/experience';\nconst styles = StyleSheet.create({\n  entryContainer: {\n    margin: \"8px 0px\"\n  },\n  date: {\n    fontSize: 9,\n    color: '#808080'\n  },\n  descriptionContainer: {\n    flexDirection: 'row',\n    fontSize: 10\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    marginBottom: 6\n  },\n  leftColumn: {\n    flexDirection: 'column'\n  },\n  rightColumn: {\n    flexDirection: 'column',\n    flexGrow: 1,\n    alignItems: 'flex-end',\n    justifySelf: 'flex-end',\n    fontSize: 9\n  },\n  title: {\n    fontSize: 10,\n    fontWeight: 500,\n    textDecoration: 'none'\n  }\n});\n\nconst ExperienceEntry = ({\n  employer,\n  description,\n  workTitle,\n  date\n}) => {\n  const title = `${employer} | ${workTitle}`;\n  return /*#__PURE__*/React.createElement(View, {\n    style: styles.entryContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.leftColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, title)), /*#__PURE__*/React.createElement(View, {\n    style: styles.rightColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, date))), /*#__PURE__*/React.createElement(Text, {\n    style: styles.descriptionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, description));\n};\n\nconst Experience = ({\n  experience\n}) => /*#__PURE__*/React.createElement(View, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Title, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }\n}, \"Arbetshistoria\"), experience.map(({\n  employer,\n  date,\n  description,\n  workTitle\n}) => /*#__PURE__*/React.createElement(ExperienceEntry, {\n  employer: employer,\n  date: date,\n  description: description,\n  key: employer + workTitle,\n  workTitle: workTitle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }\n})));\n\nExperience.propTypes = {\n  experience: PropTypes.arrayOf(PropTypes.object)\n};\nExperience.defaultProps = {\n  experience: [{\n    workTitle: 'Kundtjänst',\n    employer: 'Aspiranterna',\n    startDate: 'Jan 2000',\n    endDate: 'Okt 2005',\n    date: 'Jan 2000 - Okt 2005',\n    description: 'Problemlösning och kundkontakt var två ledord för min roll på Aspiranterna. Jag lärde mig det interna butikssystemet utantill och fick en bred förståelse för företagets produkter.'\n  }, {\n    workTitle: 'HR assistent',\n    employer: 'Spotify',\n    startDate: 'Jan 2000',\n    endDate: 'Okt 2005',\n    date: 'Feb 2011 - Dec 2015',\n    description: 'Ett administrativt jobb som utvecklades till att jag fick ansvar för både lönesättning och personalsamtal. Jag lärde mig hur man ska handskas med personer och att det alltid finns fler infallsvinklar som måste analyseras för att lösa ett problem.'\n  }]\n};\nexport default Experience;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/src/Templates/Simple/Experience.js"],"names":["React","useContext","Title","Text","View","StyleSheet","PropTypes","ExperienceStateContext","styles","create","entryContainer","margin","date","fontSize","color","descriptionContainer","flexDirection","headerContainer","marginBottom","leftColumn","rightColumn","flexGrow","alignItems","justifySelf","title","fontWeight","textDecoration","ExperienceEntry","employer","description","workTitle","Experience","experience","map","propTypes","arrayOf","object","defaultProps","startDate","endDate"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\n\nimport Title from '../Components/Title';\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\nimport PropTypes from 'prop-types';\nimport { ExperienceStateContext } from 'context/experience';\n\nconst styles = StyleSheet.create({\n  entryContainer: {\n    margin: \"8px 0px\",\n  },\n  date: {\n    fontSize: 9,\n    color: '#808080'\n  },\n  descriptionContainer: {\n    flexDirection: 'row',\n    fontSize: 10,\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    marginBottom: 6,\n  },\n  leftColumn: {\n    flexDirection: 'column',\n  },\n  rightColumn: {\n    flexDirection: 'column',\n    flexGrow: 1,\n    alignItems: 'flex-end',\n    justifySelf: 'flex-end',\n    fontSize: 9\n  },\n  title: {\n    fontSize: 10,\n    fontWeight: 500,\n    textDecoration: 'none',\n  },\n});\n\nconst ExperienceEntry = ({ employer, description, workTitle, date }) => {\n  const title = `${employer} | ${workTitle}`;\n  return (\n    <View style={styles.entryContainer}>\n      <View style={styles.headerContainer}>\n        <View style={styles.leftColumn}>\n          <Text style={styles.title}>{title}</Text>\n        </View>\n        <View style={styles.rightColumn}>\n          <Text style={styles.date}>{date}</Text>\n        </View>\n      </View>\n        \n      <Text style={styles.descriptionContainer}>\n        {description}\n      </Text>\n    </View>\n  );\n};\n\nconst Experience = ({experience}) => (\n  <View>\n    <Title>Arbetshistoria</Title>\n    {experience.map(({ employer, date, description, workTitle }) => (\n      <ExperienceEntry\n        employer={employer}\n        date={date}\n        description={description}\n        key={employer + workTitle}\n        workTitle={workTitle}\n      />\n    ))}\n  </View>\n);\n\nExperience.propTypes = {\n  experience: PropTypes.arrayOf(PropTypes.object)\n};\n\nExperience.defaultProps = {\n  experience: [{\n      workTitle: 'Kundtjänst',\n      employer: 'Aspiranterna',\n      startDate: 'Jan 2000',\n      endDate: 'Okt 2005',\n      date: 'Jan 2000 - Okt 2005',\n      description: 'Problemlösning och kundkontakt var två ledord för min roll på Aspiranterna. Jag lärde mig det interna butikssystemet utantill och fick en bred förståelse för företagets produkter.'\n  },\n  {\n      workTitle: 'HR assistent',\n      employer: 'Spotify',\n      startDate: 'Jan 2000',\n      endDate: 'Okt 2005',\n      date: 'Feb 2011 - Dec 2015',\n      description: 'Ett administrativt jobb som utvecklades till att jag fick ansvar för både lönesättning och personalsamtal. Jag lärde mig hur man ska handskas med personer och att det alltid finns fler infallsvinklar som måste analyseras för att lösa ett problem.'\n  }]\n};\n\nexport default Experience;"]},"metadata":{},"sourceType":"module"}