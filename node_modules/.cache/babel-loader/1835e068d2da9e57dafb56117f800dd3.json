{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nconst INHERITED_PROPERTIES = ['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'opacity', 'textDecoration', 'textTransform', 'lineHeight', 'textAlign', 'visibility', 'wordSpacing'];\nconst isSvg = R.propEq('type', P.Svg);\n/**\n * Get styles sub group of inherited properties\n *\n * @param {Object} style object\n * @returns {Object} style object only with inherited properties\n */\n\nconst getInheritStyles = R.compose(R.pick(INHERITED_PROPERTIES), R.propOr({}, 'style'));\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\n\nconst mergeStyles = styles => R.evolve({\n  style: R.merge(styles)\n});\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\n\n\nconst resolveInheritance = node => {\n  if (isSvg(node)) return node;\n  const inheritStyles = getInheritStyles(node);\n  const resolveChild = R.compose(resolveInheritance, mergeStyles(inheritStyles));\n  return R.evolve({\n    children: R.map(resolveChild)\n  })(node);\n};\n\nvar _default = resolveInheritance;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/layout/lib/steps/resolveInheritance.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","R","P","INHERITED_PROPERTIES","isSvg","propEq","Svg","getInheritStyles","compose","pick","propOr","mergeStyles","styles","evolve","style","merge","resolveInheritance","node","inheritStyles","resolveChild","children","map","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIK,CAAC,GAAGN,uBAAuB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAA/B;;AAEA,MAAMM,oBAAoB,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,UAAxB,EAAoC,WAApC,EAAiD,YAAjD,EAA+D,eAA/D,EAAgF,SAAhF,EAA2F,gBAA3F,EAA6G,eAA7G,EAA8H,YAA9H,EAA4I,WAA5I,EAAyJ,YAAzJ,EAAuK,aAAvK,CAA7B;AACA,MAAMC,KAAK,GAAGH,CAAC,CAACI,MAAF,CAAS,MAAT,EAAiBH,CAAC,CAACI,GAAnB,CAAd;AACA;;;;;;;AAOA,MAAMC,gBAAgB,GAAGN,CAAC,CAACO,OAAF,CAAUP,CAAC,CAACQ,IAAF,CAAON,oBAAP,CAAV,EAAwCF,CAAC,CAACS,MAAF,CAAS,EAAT,EAAa,OAAb,CAAxC,CAAzB;AACA;;;;;;;;AAQA,MAAMC,WAAW,GAAGC,MAAM,IAAIX,CAAC,CAACY,MAAF,CAAS;AACrCC,EAAAA,KAAK,EAAEb,CAAC,CAACc,KAAF,CAAQH,MAAR;AAD8B,CAAT,CAA9B;AAGA;;;;;;;;;AASA,MAAMI,kBAAkB,GAAGC,IAAI,IAAI;AACjC,MAAIb,KAAK,CAACa,IAAD,CAAT,EAAiB,OAAOA,IAAP;AACjB,QAAMC,aAAa,GAAGX,gBAAgB,CAACU,IAAD,CAAtC;AACA,QAAME,YAAY,GAAGlB,CAAC,CAACO,OAAF,CAAUQ,kBAAV,EAA8BL,WAAW,CAACO,aAAD,CAAzC,CAArB;AACA,SAAOjB,CAAC,CAACY,MAAF,CAAS;AACdO,IAAAA,QAAQ,EAAEnB,CAAC,CAACoB,GAAF,CAAMF,YAAN;AADI,GAAT,EAEJF,IAFI,CAAP;AAGD,CAPD;;AASA,IAAIK,QAAQ,GAAGN,kBAAf;AACAlB,OAAO,CAACE,OAAR,GAAkBsB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nconst INHERITED_PROPERTIES = ['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'opacity', 'textDecoration', 'textTransform', 'lineHeight', 'textAlign', 'visibility', 'wordSpacing'];\nconst isSvg = R.propEq('type', P.Svg);\n/**\n * Get styles sub group of inherited properties\n *\n * @param {Object} style object\n * @returns {Object} style object only with inherited properties\n */\n\nconst getInheritStyles = R.compose(R.pick(INHERITED_PROPERTIES), R.propOr({}, 'style'));\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\n\nconst mergeStyles = styles => R.evolve({\n  style: R.merge(styles)\n});\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\n\n\nconst resolveInheritance = node => {\n  if (isSvg(node)) return node;\n  const inheritStyles = getInheritStyles(node);\n  const resolveChild = R.compose(resolveInheritance, mergeStyles(inheritStyles));\n  return R.evolve({\n    children: R.map(resolveChild)\n  })(node);\n};\n\nvar _default = resolveInheritance;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}