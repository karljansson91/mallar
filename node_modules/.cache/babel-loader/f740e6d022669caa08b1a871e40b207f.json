{"ast":null,"code":"var _jsxFileName = \"/Users/kaja/Code/mallar/app/src/Templates/Simple/Experience.js\";\nimport React from 'react';\nimport Title from '../Components/Title';\nimport List, { Item } from './List';\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\nimport PropTypes from 'prop-types';\nconst styles = StyleSheet.create({\n  entryContainer: {\n    marginBottom: 10\n  },\n  date: {\n    fontSize: 11\n  },\n  detailContainer: {\n    flexDirection: 'row'\n  },\n  detailLeftColumn: {\n    flexDirection: 'column',\n    marginLeft: 10,\n    marginRight: 10\n  },\n  detailRightColumn: {\n    flexDirection: 'column',\n    flexGrow: 9\n  },\n  bulletPoint: {\n    fontSize: 10\n  },\n  details: {\n    fontSize: 10\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  leftColumn: {\n    flexDirection: 'column',\n    flexGrow: 9\n  },\n  rightColumn: {\n    flexDirection: 'column',\n    flexGrow: 1,\n    alignItems: 'flex-end',\n    justifySelf: 'flex-end'\n  },\n  title: {\n    fontSize: 11,\n    color: 'black',\n    textDecoration: 'none'\n  }\n});\n\nconst ExperienceEntry = ({\n  company,\n  detail,\n  position,\n  date\n}) => {\n  const title = `${company} | ${position}`;\n  return /*#__PURE__*/React.createElement(View, {\n    style: styles.entryContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.leftColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, title)), /*#__PURE__*/React.createElement(View, {\n    style: styles.rightColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, date))), /*#__PURE__*/React.createElement(Text, {\n    key: i,\n    style: styles.detailContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, detail));\n};\n\nconst Experience = ({\n  experience\n}) => /*#__PURE__*/React.createElement(View, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Title, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }\n}, \"Arbetshistoria\"), experience.map(({\n  company,\n  date,\n  details,\n  position\n}) => /*#__PURE__*/React.createElement(ExperienceEntry, {\n  company: company,\n  date: date,\n  details: detail,\n  key: company + position,\n  position: position,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }\n})));\n\nExperience.propTypes = {\n  experience: PropTypes.arrayOf(PropTypes.object)\n};\nExperience.defaultProps = {\n  experience: [{\n    position: 'Kundtjänst',\n    company: 'Aspiranterna',\n    date: 'Jan 2000 - Okt 2005',\n    detail: 'Problemlösning och kundkontakt var två ledord för min roll på Aspiranterna. Jag lärde mig det interna butikssystemet utantill och fick en bred förståelse för företagets produkter.'\n  }, {\n    position: 'HR assistent',\n    company: 'Spotify',\n    date: 'Feb 2011 - Dec 2015',\n    detail: 'Ett administrativt jobb som utvecklades till att jag fick ansvar för både lönesättning och personalsamtal. Jag lärde mig hur man ska handskas med personer och att det alltid finns fler infallsvinklar som måste analyseras för att lösa ett problem.'\n  }]\n};\nexport default Experience;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/src/Templates/Simple/Experience.js"],"names":["React","Title","List","Item","Text","View","StyleSheet","PropTypes","styles","create","entryContainer","marginBottom","date","fontSize","detailContainer","flexDirection","detailLeftColumn","marginLeft","marginRight","detailRightColumn","flexGrow","bulletPoint","details","headerContainer","leftColumn","rightColumn","alignItems","justifySelf","title","color","textDecoration","ExperienceEntry","company","detail","position","i","Experience","experience","map","propTypes","arrayOf","object","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Title from '../Components/Title';\nimport List, { Item } from './List';\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\nimport PropTypes from 'prop-types';\n\nconst styles = StyleSheet.create({\n  entryContainer: {\n    marginBottom: 10,\n  },\n  date: {\n    fontSize: 11,\n  },\n  detailContainer: {\n    flexDirection: 'row',\n  },\n  detailLeftColumn: {\n    flexDirection: 'column',\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  detailRightColumn: {\n    flexDirection: 'column',\n    flexGrow: 9,\n  },\n  bulletPoint: {\n    fontSize: 10,\n  },\n  details: {\n    fontSize: 10,\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  leftColumn: {\n    flexDirection: 'column',\n    flexGrow: 9,\n  },\n  rightColumn: {\n    flexDirection: 'column',\n    flexGrow: 1,\n    alignItems: 'flex-end',\n    justifySelf: 'flex-end',\n  },\n  title: {\n    fontSize: 11,\n    color: 'black',\n    textDecoration: 'none',\n  },\n});\n\nconst ExperienceEntry = ({ company, detail, position, date }) => {\n  const title = `${company} | ${position}`;\n  return (\n    <View style={styles.entryContainer}>\n      <View style={styles.headerContainer}>\n        <View style={styles.leftColumn}>\n          <Text style={styles.title}>{title}</Text>\n        </View>\n        <View style={styles.rightColumn}>\n          <Text style={styles.date}>{date}</Text>\n        </View>\n      </View>\n        \n      <Text key={i} style={styles.detailContainer}>\n        {detail}\n      </Text>\n    </View>\n  );\n};\n\nconst Experience = ({experience}) => (\n  <View>\n    <Title>Arbetshistoria</Title>\n    {experience.map(({ company, date, details, position }) => (\n      <ExperienceEntry\n        company={company}\n        date={date}\n        details={detail}\n        key={company + position}\n        position={position}\n      />\n    ))}\n  </View>\n);\n\nExperience.propTypes = {\n  experience: PropTypes.arrayOf(PropTypes.object)\n};\n\nExperience.defaultProps = {\n  experience: [{\n      position: 'Kundtjänst',\n      company: 'Aspiranterna',\n      date: 'Jan 2000 - Okt 2005',\n      detail: 'Problemlösning och kundkontakt var två ledord för min roll på Aspiranterna. Jag lärde mig det interna butikssystemet utantill och fick en bred förståelse för företagets produkter.'\n  },\n  {\n      position: 'HR assistent',\n      company: 'Spotify',\n      date: 'Feb 2011 - Dec 2015',\n      detail: 'Ett administrativt jobb som utvecklades till att jag fick ansvar för både lönesättning och personalsamtal. Jag lärde mig hur man ska handskas med personer och att det alltid finns fler infallsvinklar som måste analyseras för att lösa ett problem.'\n  }]\n};\n\nexport default Experience;"]},"metadata":{},"sourceType":"module"}