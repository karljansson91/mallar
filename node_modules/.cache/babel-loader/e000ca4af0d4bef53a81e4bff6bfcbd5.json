{"ast":null,"code":"/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup table to map the previous two bytes to a context id.\n\n   There are four different context modeling modes defined here:\n     CONTEXT_LSB6: context id is the least significant 6 bits of the last byte,\n     CONTEXT_MSB6: context id is the most significant 6 bits of the last byte,\n     CONTEXT_UTF8: second-order context model tuned for UTF8-encoded text,\n     CONTEXT_SIGNED: second-order context model tuned for signed integers.\n\n   The context id for the UTF8 context model is calculated as follows. If p1\n   and p2 are the previous two bytes, we calcualte the context as\n\n     context = kContextLookup[p1] | kContextLookup[p2 + 256].\n\n   If the previous two bytes are ASCII characters (i.e. < 128), this will be\n   equivalent to\n\n     context = 4 * context1(p1) + context2(p2),\n\n   where context1 is based on the previous byte in the following way:\n\n     0  : non-ASCII control\n     1  : \\t, \\n, \\r\n     2  : space\n     3  : other punctuation\n     4  : \" '\n     5  : %\n     6  : ( < [ {\n     7  : ) > ] }\n     8  : , ; :\n     9  : .\n     10 : =\n     11 : number\n     12 : upper-case vowel\n     13 : upper-case consonant\n     14 : lower-case vowel\n     15 : lower-case consonant\n\n   and context2 is based on the second last byte:\n\n     0 : control, space\n     1 : punctuation\n     2 : upper-case letter, number\n     3 : lower-case letter\n\n   If the last byte is ASCII, and the second last byte is not (in a valid UTF8\n   stream it will be a continuation byte, value between 128 and 191), the\n   context is the same as if the second last byte was an ASCII control or space.\n\n   If the last byte is a UTF8 lead byte (value >= 192), then the next byte will\n   be a continuation byte and the context id is 2 or 3 depending on the LSB of\n   the last byte and to a lesser extent on the second last byte if it is ASCII.\n\n   If the last byte is a UTF8 continuation byte, the second last byte can be:\n     - continuation byte: the next byte is probably ASCII or lead byte (assuming\n       4-byte UTF8 characters are rare) and the context id is 0 or 1.\n     - lead byte (192 - 207): next byte is ASCII or lead byte, context is 0 or 1\n     - lead byte (208 - 255): next byte is continuation byte, context is 2 or 3\n\n   The possible value combinations of the previous two bytes, the range of\n   context ids and the type of the next byte is summarized in the table below:\n\n   |--------\\-----------------------------------------------------------------|\n   |         \\                         Last byte                              |\n   | Second   \\---------------------------------------------------------------|\n   | last byte \\    ASCII            |   cont. byte        |   lead byte      |\n   |            \\   (0-127)          |   (128-191)         |   (192-)         |\n   |=============|===================|=====================|==================|\n   |  ASCII      | next: ASCII/lead  |  not valid          |  next: cont.     |\n   |  (0-127)    | context: 4 - 63   |                     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  cont. byte | next: ASCII/lead  |  next: ASCII/lead   |  next: cont.     |\n   |  (128-191)  | context: 4 - 63   |  context: 0 - 1     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: ASCII/lead   |  not valid       |\n   |  (192-207)  |                   |  context: 0 - 1     |                  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: cont.        |  not valid       |\n   |  (208-)     |                   |  context: 2 - 3     |                  |\n   |-------------|-------------------|---------------------|------------------|\n\n   The context id for the signed context mode is calculated as:\n\n     context = (kContextLookup[512 + p1] << 3) | kContextLookup[512 + p2].\n\n   For any context modeling modes, the context ids can be calculated by |-ing\n   together two lookups from one table using context model dependent offsets:\n\n     context = kContextLookup[offset1 + p1] | kContextLookup[offset2 + p2].\n\n   where offset1 and offset2 are dependent on the context mode.\n*/\nvar CONTEXT_LSB6 = 0;\nvar CONTEXT_MSB6 = 1;\nvar CONTEXT_UTF8 = 2;\nvar CONTEXT_SIGNED = 3;\n/* Common context lookup table for all context modes. */\n\nexports.lookup = new Uint8Array([\n/* CONTEXT_UTF8, last byte. */\n\n/* ASCII range. */\n0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 12, 16, 12, 12, 20, 12, 16, 24, 28, 12, 12, 32, 12, 36, 12, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 32, 32, 24, 40, 28, 12, 12, 48, 52, 52, 52, 48, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52, 24, 12, 28, 12, 12, 12, 56, 60, 60, 60, 56, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 24, 12, 28, 12, 0,\n/* UTF8 continuation byte range. */\n0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n/* UTF8 lead byte range. */\n2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n/* CONTEXT_UTF8 second last byte. */\n\n/* ASCII range. */\n0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0,\n/* UTF8 continuation byte range. */\n0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n/* UTF8 lead byte range. */\n0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n/* CONTEXT_SIGNED, second last byte. */\n0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7,\n/* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */\n0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 56,\n/* CONTEXT_LSB6, last byte. */\n0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n/* CONTEXT_MSB6, last byte. */\n0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 31, 32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35, 36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39, 40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 43, 43, 43, 43, 44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 47, 47, 48, 48, 48, 48, 49, 49, 49, 49, 50, 50, 50, 50, 51, 51, 51, 51, 52, 52, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 55, 55, 55, 55, 56, 56, 56, 56, 57, 57, 57, 57, 58, 58, 58, 58, 59, 59, 59, 59, 60, 60, 60, 60, 61, 61, 61, 61, 62, 62, 62, 62, 63, 63, 63, 63,\n/* CONTEXT_{M,L}SB6, second last byte, */\n0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nexports.lookupOffsets = new Uint16Array([\n/* CONTEXT_LSB6 */\n1024, 1536,\n/* CONTEXT_MSB6 */\n1280, 1536,\n/* CONTEXT_UTF8 */\n0, 256,\n/* CONTEXT_SIGNED */\n768, 512]);","map":{"version":3,"sources":["/Users/kaja/Code/mallar/node_modules/brotli/dec/context.js"],"names":["CONTEXT_LSB6","CONTEXT_MSB6","CONTEXT_UTF8","CONTEXT_SIGNED","exports","lookup","Uint8Array","lookupOffsets","Uint16Array"],"mappings":"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","sourcesContent":["/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup table to map the previous two bytes to a context id.\n\n   There are four different context modeling modes defined here:\n     CONTEXT_LSB6: context id is the least significant 6 bits of the last byte,\n     CONTEXT_MSB6: context id is the most significant 6 bits of the last byte,\n     CONTEXT_UTF8: second-order context model tuned for UTF8-encoded text,\n     CONTEXT_SIGNED: second-order context model tuned for signed integers.\n\n   The context id for the UTF8 context model is calculated as follows. If p1\n   and p2 are the previous two bytes, we calcualte the context as\n\n     context = kContextLookup[p1] | kContextLookup[p2 + 256].\n\n   If the previous two bytes are ASCII characters (i.e. < 128), this will be\n   equivalent to\n\n     context = 4 * context1(p1) + context2(p2),\n\n   where context1 is based on the previous byte in the following way:\n\n     0  : non-ASCII control\n     1  : \\t, \\n, \\r\n     2  : space\n     3  : other punctuation\n     4  : \" '\n     5  : %\n     6  : ( < [ {\n     7  : ) > ] }\n     8  : , ; :\n     9  : .\n     10 : =\n     11 : number\n     12 : upper-case vowel\n     13 : upper-case consonant\n     14 : lower-case vowel\n     15 : lower-case consonant\n\n   and context2 is based on the second last byte:\n\n     0 : control, space\n     1 : punctuation\n     2 : upper-case letter, number\n     3 : lower-case letter\n\n   If the last byte is ASCII, and the second last byte is not (in a valid UTF8\n   stream it will be a continuation byte, value between 128 and 191), the\n   context is the same as if the second last byte was an ASCII control or space.\n\n   If the last byte is a UTF8 lead byte (value >= 192), then the next byte will\n   be a continuation byte and the context id is 2 or 3 depending on the LSB of\n   the last byte and to a lesser extent on the second last byte if it is ASCII.\n\n   If the last byte is a UTF8 continuation byte, the second last byte can be:\n     - continuation byte: the next byte is probably ASCII or lead byte (assuming\n       4-byte UTF8 characters are rare) and the context id is 0 or 1.\n     - lead byte (192 - 207): next byte is ASCII or lead byte, context is 0 or 1\n     - lead byte (208 - 255): next byte is continuation byte, context is 2 or 3\n\n   The possible value combinations of the previous two bytes, the range of\n   context ids and the type of the next byte is summarized in the table below:\n\n   |--------\\-----------------------------------------------------------------|\n   |         \\                         Last byte                              |\n   | Second   \\---------------------------------------------------------------|\n   | last byte \\    ASCII            |   cont. byte        |   lead byte      |\n   |            \\   (0-127)          |   (128-191)         |   (192-)         |\n   |=============|===================|=====================|==================|\n   |  ASCII      | next: ASCII/lead  |  not valid          |  next: cont.     |\n   |  (0-127)    | context: 4 - 63   |                     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  cont. byte | next: ASCII/lead  |  next: ASCII/lead   |  next: cont.     |\n   |  (128-191)  | context: 4 - 63   |  context: 0 - 1     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: ASCII/lead   |  not valid       |\n   |  (192-207)  |                   |  context: 0 - 1     |                  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: cont.        |  not valid       |\n   |  (208-)     |                   |  context: 2 - 3     |                  |\n   |-------------|-------------------|---------------------|------------------|\n\n   The context id for the signed context mode is calculated as:\n\n     context = (kContextLookup[512 + p1] << 3) | kContextLookup[512 + p2].\n\n   For any context modeling modes, the context ids can be calculated by |-ing\n   together two lookups from one table using context model dependent offsets:\n\n     context = kContextLookup[offset1 + p1] | kContextLookup[offset2 + p2].\n\n   where offset1 and offset2 are dependent on the context mode.\n*/\n\nvar CONTEXT_LSB6         = 0;\nvar CONTEXT_MSB6         = 1;\nvar CONTEXT_UTF8         = 2;\nvar CONTEXT_SIGNED       = 3;\n\n/* Common context lookup table for all context modes. */\nexports.lookup = new Uint8Array([\n  /* CONTEXT_UTF8, last byte. */\n  /* ASCII range. */\n   0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  0,  0,  4,  0,  0,\n   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n   8, 12, 16, 12, 12, 20, 12, 16, 24, 28, 12, 12, 32, 12, 36, 12,\n  44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 32, 32, 24, 40, 28, 12,\n  12, 48, 52, 52, 52, 48, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48,\n  52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52, 24, 12, 28, 12, 12,\n  12, 56, 60, 60, 60, 56, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56,\n  60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 24, 12, 28, 12,  0,\n  /* UTF8 continuation byte range. */\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  /* UTF8 lead byte range. */\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  /* CONTEXT_UTF8 second last byte. */\n  /* ASCII range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,\n  1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0,\n  /* UTF8 continuation byte range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  /* UTF8 lead byte range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  /* CONTEXT_SIGNED, second last byte. */\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7,\n  /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */\n   0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 56,\n  /* CONTEXT_LSB6, last byte. */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n  /* CONTEXT_MSB6, last byte. */\n   0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,\n   4,  4,  4,  4,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,\n   8,  8,  8,  8,  9,  9,  9,  9, 10, 10, 10, 10, 11, 11, 11, 11,\n  12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15,\n  16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19,\n  20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23,\n  24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27,\n  28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 31,\n  32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35,\n  36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39,\n  40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 43, 43, 43, 43,\n  44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 47, 47,\n  48, 48, 48, 48, 49, 49, 49, 49, 50, 50, 50, 50, 51, 51, 51, 51,\n  52, 52, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 55, 55, 55, 55,\n  56, 56, 56, 56, 57, 57, 57, 57, 58, 58, 58, 58, 59, 59, 59, 59,\n  60, 60, 60, 60, 61, 61, 61, 61, 62, 62, 62, 62, 63, 63, 63, 63,\n  /* CONTEXT_{M,L}SB6, second last byte, */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n]);\n\nexports.lookupOffsets = new Uint16Array([\n  /* CONTEXT_LSB6 */\n  1024, 1536,\n  /* CONTEXT_MSB6 */\n  1280, 1536,\n  /* CONTEXT_UTF8 */\n  0, 256,\n  /* CONTEXT_SIGNED */\n  768, 512,\n]);\n"]},"metadata":{},"sourceType":"script"}