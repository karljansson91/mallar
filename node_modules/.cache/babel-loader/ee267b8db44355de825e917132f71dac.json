{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nconst isOdd = x => x % 2 !== 0;\n\nconst lengthIsOdd = R.o(isOdd, R.prop('length'));\n/**\n * Parse svg-like points into number arrays\n *\n * @param {String} points string ex. \"20,30 50,60\"\n * @return {Array} points array ex. [[20, 30], [50, 60]]\n */\n\nconst parsePoints = R.compose(R.splitEvery(2), R.map(parseFloat), R.when(lengthIsOdd, R.slice(0, -1)), R.split(/\\s+/), R.replace(/(\\d)-(\\d)/g, '$1 -$2'), R.replace(/,/g, ' '), R.trim, R.defaultTo(''));\nvar _default = parsePoints;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/render/lib/svg/parsePoints.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","R","isOdd","x","lengthIsOdd","o","prop","parsePoints","compose","splitEvery","map","parseFloat","when","slice","split","replace","trim","defaultTo","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,MAAMK,KAAK,GAAGC,CAAC,IAAIA,CAAC,GAAG,CAAJ,KAAU,CAA7B;;AAEA,MAAMC,WAAW,GAAGH,CAAC,CAACI,CAAF,CAAIH,KAAJ,EAAWD,CAAC,CAACK,IAAF,CAAO,QAAP,CAAX,CAApB;AACA;;;;;;;AAOA,MAAMC,WAAW,GAAGN,CAAC,CAACO,OAAF,CAAUP,CAAC,CAACQ,UAAF,CAAa,CAAb,CAAV,EAA2BR,CAAC,CAACS,GAAF,CAAMC,UAAN,CAA3B,EAA8CV,CAAC,CAACW,IAAF,CAAOR,WAAP,EAAoBH,CAAC,CAACY,KAAF,CAAQ,CAAR,EAAW,CAAC,CAAZ,CAApB,CAA9C,EAAmFZ,CAAC,CAACa,KAAF,CAAQ,KAAR,CAAnF,EAAmGb,CAAC,CAACc,OAAF,CAAU,YAAV,EAAwB,QAAxB,CAAnG,EAAsId,CAAC,CAACc,OAAF,CAAU,IAAV,EAAgB,GAAhB,CAAtI,EAA4Jd,CAAC,CAACe,IAA9J,EAAoKf,CAAC,CAACgB,SAAF,CAAY,EAAZ,CAApK,CAApB;AACA,IAAIC,QAAQ,GAAGX,WAAf;AACAT,OAAO,CAACE,OAAR,GAAkBkB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nconst isOdd = x => x % 2 !== 0;\n\nconst lengthIsOdd = R.o(isOdd, R.prop('length'));\n/**\n * Parse svg-like points into number arrays\n *\n * @param {String} points string ex. \"20,30 50,60\"\n * @return {Array} points array ex. [[20, 30], [50, 60]]\n */\n\nconst parsePoints = R.compose(R.splitEvery(2), R.map(parseFloat), R.when(lengthIsOdd, R.slice(0, -1)), R.split(/\\s+/), R.replace(/(\\d)-(\\d)/g, '$1 -$2'), R.replace(/,/g, ' '), R.trim, R.defaultTo(''));\nvar _default = parsePoints;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}