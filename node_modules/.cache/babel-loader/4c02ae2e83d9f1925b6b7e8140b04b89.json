{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = exports.drawEllipse = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst getProp = (p, v) => R.path(['props', p], v);\n\nconst drawEllipse = (ctx, cx, cy, rx, ry) => {\n  const x = cx - rx;\n  const y = cy - ry;\n  const ox = rx * KAPPA;\n  const oy = ry * KAPPA;\n  const xe = x + rx * 2;\n  const ye = y + ry * 2;\n  const xm = x + rx;\n  const ym = y + ry;\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\n\nexports.drawEllipse = drawEllipse;\n\nconst renderEllipse = (ctx, node) => {\n  const cx = getProp('cx', node);\n  const cy = getProp('cy', node);\n  const rx = getProp('rx', node);\n  const ry = getProp('ry', node);\n  drawEllipse(ctx, cx, cy, rx, ry);\n  return node;\n};\n\nvar _default = R.curryN(2, renderEllipse);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/render/lib/primitives/renderEllipse.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","drawEllipse","R","KAPPA","Math","sqrt","getProp","p","v","path","ctx","cx","cy","rx","ry","x","y","ox","oy","xe","ye","xm","ym","moveTo","bezierCurveTo","closePath","renderEllipse","node","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,WAAR,GAAsB,KAAK,CAA7C;;AAEA,IAAIC,CAAC,GAAGN,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,MAAMM,KAAK,GAAG,OAAO,CAACC,IAAI,CAACC,IAAL,CAAU,CAAV,IAAe,GAAhB,IAAuB,GAA9B,CAAd;;AAEA,MAAMC,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUN,CAAC,CAACO,IAAF,CAAO,CAAC,OAAD,EAAUF,CAAV,CAAP,EAAqBC,CAArB,CAA1B;;AAEA,MAAMP,WAAW,GAAG,CAACS,GAAD,EAAMC,EAAN,EAAUC,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,KAAyB;AAC3C,QAAMC,CAAC,GAAGJ,EAAE,GAAGE,EAAf;AACA,QAAMG,CAAC,GAAGJ,EAAE,GAAGE,EAAf;AACA,QAAMG,EAAE,GAAGJ,EAAE,GAAGV,KAAhB;AACA,QAAMe,EAAE,GAAGJ,EAAE,GAAGX,KAAhB;AACA,QAAMgB,EAAE,GAAGJ,CAAC,GAAGF,EAAE,GAAG,CAApB;AACA,QAAMO,EAAE,GAAGJ,CAAC,GAAGF,EAAE,GAAG,CAApB;AACA,QAAMO,EAAE,GAAGN,CAAC,GAAGF,EAAf;AACA,QAAMS,EAAE,GAAGN,CAAC,GAAGF,EAAf;AACAJ,EAAAA,GAAG,CAACa,MAAJ,CAAWR,CAAX,EAAcO,EAAd;AACAZ,EAAAA,GAAG,CAACc,aAAJ,CAAkBT,CAAlB,EAAqBO,EAAE,GAAGJ,EAA1B,EAA8BG,EAAE,GAAGJ,EAAnC,EAAuCD,CAAvC,EAA0CK,EAA1C,EAA8CL,CAA9C;AACAN,EAAAA,GAAG,CAACc,aAAJ,CAAkBH,EAAE,GAAGJ,EAAvB,EAA2BD,CAA3B,EAA8BG,EAA9B,EAAkCG,EAAE,GAAGJ,EAAvC,EAA2CC,EAA3C,EAA+CG,EAA/C;AACAZ,EAAAA,GAAG,CAACc,aAAJ,CAAkBL,EAAlB,EAAsBG,EAAE,GAAGJ,EAA3B,EAA+BG,EAAE,GAAGJ,EAApC,EAAwCG,EAAxC,EAA4CC,EAA5C,EAAgDD,EAAhD;AACAV,EAAAA,GAAG,CAACc,aAAJ,CAAkBH,EAAE,GAAGJ,EAAvB,EAA2BG,EAA3B,EAA+BL,CAA/B,EAAkCO,EAAE,GAAGJ,EAAvC,EAA2CH,CAA3C,EAA8CO,EAA9C;AACAZ,EAAAA,GAAG,CAACe,SAAJ;AACD,CAfD;;AAiBA3B,OAAO,CAACG,WAAR,GAAsBA,WAAtB;;AAEA,MAAMyB,aAAa,GAAG,CAAChB,GAAD,EAAMiB,IAAN,KAAe;AACnC,QAAMhB,EAAE,GAAGL,OAAO,CAAC,IAAD,EAAOqB,IAAP,CAAlB;AACA,QAAMf,EAAE,GAAGN,OAAO,CAAC,IAAD,EAAOqB,IAAP,CAAlB;AACA,QAAMd,EAAE,GAAGP,OAAO,CAAC,IAAD,EAAOqB,IAAP,CAAlB;AACA,QAAMb,EAAE,GAAGR,OAAO,CAAC,IAAD,EAAOqB,IAAP,CAAlB;AACA1B,EAAAA,WAAW,CAACS,GAAD,EAAMC,EAAN,EAAUC,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,CAAX;AACA,SAAOa,IAAP;AACD,CAPD;;AASA,IAAIC,QAAQ,GAAG1B,CAAC,CAAC2B,MAAF,CAAS,CAAT,EAAYH,aAAZ,CAAf;;AAEA5B,OAAO,CAACE,OAAR,GAAkB4B,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = exports.drawEllipse = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst getProp = (p, v) => R.path(['props', p], v);\n\nconst drawEllipse = (ctx, cx, cy, rx, ry) => {\n  const x = cx - rx;\n  const y = cy - ry;\n  const ox = rx * KAPPA;\n  const oy = ry * KAPPA;\n  const xe = x + rx * 2;\n  const ye = y + ry * 2;\n  const xm = x + rx;\n  const ym = y + ry;\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\n\nexports.drawEllipse = drawEllipse;\n\nconst renderEllipse = (ctx, node) => {\n  const cx = getProp('cx', node);\n  const cy = getProp('cy', node);\n  const rx = getProp('rx', node);\n  const ry = getProp('ry', node);\n  drawEllipse(ctx, cx, cy, rx, ry);\n  return node;\n};\n\nvar _default = R.curryN(2, renderEllipse);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}