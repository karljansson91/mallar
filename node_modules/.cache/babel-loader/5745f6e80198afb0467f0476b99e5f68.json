{"ast":null,"code":"// Generated by CoffeeScript 1.12.1\n(function () {\n  var EmbeddedFont,\n      PDFFont,\n      PDFObject,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty,\n      slice = [].slice;\n\n  PDFFont = require('../font');\n  PDFObject = require('../object');\n\n  EmbeddedFont = function (superClass) {\n    var toHex;\n    extend(EmbeddedFont, superClass);\n\n    function EmbeddedFont(document, font, id) {\n      this.document = document;\n      this.font = font;\n      this.id = id;\n      this.subset = this.font.createSubset();\n      this.unicode = [[0]];\n      this.widths = [this.font.getGlyph(0).advanceWidth];\n      this.name = this.font.postscriptName;\n      this.scale = 1000 / this.font.unitsPerEm;\n      this.ascender = this.font.ascent * this.scale;\n      this.descender = this.font.descent * this.scale;\n      this.lineGap = this.font.lineGap * this.scale;\n      this.bbox = this.font.bbox;\n    }\n\n    EmbeddedFont.prototype.encode = function (text, features) {\n      var base, base1, gid, glyph, glyphs, i, j, key, len, positions, ref, res;\n      ref = this.font.layout(text, features), glyphs = ref.glyphs, positions = ref.positions;\n      res = [];\n\n      for (i = j = 0, len = glyphs.length; j < len; i = ++j) {\n        glyph = glyphs[i];\n        gid = this.subset.includeGlyph(glyph.id);\n        res.push(('0000' + gid.toString(16)).slice(-4));\n\n        if ((base = this.widths)[gid] == null) {\n          base[gid] = glyph.advanceWidth * this.scale;\n        }\n\n        if ((base1 = this.unicode)[gid] == null) {\n          base1[gid] = glyph.codePoints;\n        }\n\n        for (key in positions[i]) {\n          positions[i][key] *= this.scale;\n        }\n\n        positions[i].advanceWidth = glyph.advanceWidth * this.scale;\n      }\n\n      return [res, positions];\n    };\n\n    EmbeddedFont.prototype.widthOfString = function (string, size, features) {\n      var scale, width;\n      width = this.font.layout(string, features).advanceWidth;\n      scale = size / this.font.unitsPerEm;\n      return width * scale;\n    };\n\n    EmbeddedFont.prototype.embed = function () {\n      var bbox, descendantFont, descriptor, familyClass, flags, fontFile, i, isCFF, name, ref, tag;\n      isCFF = this.subset.cff != null;\n      fontFile = this.document.ref();\n\n      if (isCFF) {\n        fontFile.data.Subtype = 'CIDFontType0C';\n      }\n\n      this.subset.encodeStream().pipe(fontFile);\n      familyClass = (((ref = this.font['OS/2']) != null ? ref.sFamilyClass : void 0) || 0) >> 8;\n      flags = 0;\n\n      if (this.font.post.isFixedPitch) {\n        flags |= 1 << 0;\n      }\n\n      if (1 <= familyClass && familyClass <= 7) {\n        flags |= 1 << 1;\n      }\n\n      flags |= 1 << 2;\n\n      if (familyClass === 10) {\n        flags |= 1 << 3;\n      }\n\n      if (this.font.head.macStyle.italic) {\n        flags |= 1 << 6;\n      }\n\n      tag = function () {\n        var j, results;\n        results = [];\n\n        for (i = j = 0; j < 6; i = ++j) {\n          results.push(String.fromCharCode(Math.random() * 26 + 65));\n        }\n\n        return results;\n      }().join('');\n\n      name = tag + '+' + this.font.postscriptName;\n      bbox = this.font.bbox;\n      descriptor = this.document.ref({\n        Type: 'FontDescriptor',\n        FontName: name,\n        Flags: flags,\n        FontBBox: [bbox.minX * this.scale, bbox.minY * this.scale, bbox.maxX * this.scale, bbox.maxY * this.scale],\n        ItalicAngle: this.font.italicAngle,\n        Ascent: this.ascender,\n        Descent: this.descender,\n        CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,\n        XHeight: (this.font.xHeight || 0) * this.scale,\n        StemV: 0\n      });\n\n      if (isCFF) {\n        descriptor.data.FontFile3 = fontFile;\n      } else {\n        descriptor.data.FontFile2 = fontFile;\n      }\n\n      descriptor.end();\n      descendantFont = this.document.ref({\n        Type: 'Font',\n        Subtype: isCFF ? 'CIDFontType0' : 'CIDFontType2',\n        BaseFont: name,\n        CIDSystemInfo: {\n          Registry: new String('Adobe'),\n          Ordering: new String('Identity'),\n          Supplement: 0\n        },\n        FontDescriptor: descriptor,\n        W: [0, this.widths]\n      });\n      descendantFont.end();\n      this.dictionary.data = {\n        Type: 'Font',\n        Subtype: 'Type0',\n        BaseFont: name,\n        Encoding: 'Identity-H',\n        DescendantFonts: [descendantFont],\n        ToUnicode: this.toUnicodeCmap()\n      };\n      return this.dictionary.end();\n    };\n\n    toHex = function () {\n      var code, codePoints, codes;\n      codePoints = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n\n      codes = function () {\n        var j, len, results;\n        results = [];\n\n        for (j = 0, len = codePoints.length; j < len; j++) {\n          code = codePoints[j];\n          results.push(('0000' + code.toString(16)).slice(-4));\n        }\n\n        return results;\n      }();\n\n      return codes.join('');\n    };\n\n    EmbeddedFont.prototype.toUnicodeCmap = function () {\n      var cmap, codePoints, encoded, entries, j, k, len, len1, ref, value;\n      cmap = this.document.ref();\n      entries = [];\n      ref = this.unicode;\n\n      for (j = 0, len = ref.length; j < len; j++) {\n        codePoints = ref[j];\n        encoded = [];\n\n        for (k = 0, len1 = codePoints.length; k < len1; k++) {\n          value = codePoints[k];\n\n          if (value > 0xffff) {\n            value -= 0x10000;\n            encoded.push(toHex(value >>> 10 & 0x3ff | 0xd800));\n            value = 0xdc00 | value & 0x3ff;\n          }\n\n          encoded.push(toHex(value));\n        }\n\n        entries.push(\"<\" + encoded.join(' ') + \">\");\n      }\n\n      cmap.end(\"/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo <<\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement 0\\n>> def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange\\n<0000><ffff>\\nendcodespacerange\\n1 beginbfrange\\n<0000> <\" + toHex(entries.length - 1) + \"> [\" + entries.join(' ') + \"]\\nendbfrange\\nendcmap\\nCMapName currentdict /CMap defineresource pop\\nend\\nend\");\n      return cmap;\n    };\n\n    return EmbeddedFont;\n  }(PDFFont);\n\n  module.exports = EmbeddedFont;\n}).call(this);","map":{"version":3,"sources":["/Users/kaja/Code/mallar/node_modules/pdfkit/js/font/embedded.js"],"names":["EmbeddedFont","PDFFont","PDFObject","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","slice","require","superClass","toHex","document","font","id","subset","createSubset","unicode","widths","getGlyph","advanceWidth","name","postscriptName","scale","unitsPerEm","ascender","ascent","descender","descent","lineGap","bbox","encode","text","features","base","base1","gid","glyph","glyphs","i","j","len","positions","ref","res","layout","length","includeGlyph","push","toString","codePoints","widthOfString","string","size","width","embed","descendantFont","descriptor","familyClass","flags","fontFile","isCFF","tag","cff","data","Subtype","encodeStream","pipe","sFamilyClass","post","isFixedPitch","head","macStyle","italic","results","String","fromCharCode","Math","random","join","Type","FontName","Flags","FontBBox","minX","minY","maxX","maxY","ItalicAngle","italicAngle","Ascent","Descent","CapHeight","capHeight","XHeight","xHeight","StemV","FontFile3","FontFile2","end","BaseFont","CIDSystemInfo","Registry","Ordering","Supplement","FontDescriptor","W","dictionary","Encoding","DescendantFonts","ToUnicode","toUnicodeCmap","code","codes","arguments","cmap","encoded","entries","k","len1","value","module","exports"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.1\n(function() {\n  var EmbeddedFont, PDFFont, PDFObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    slice = [].slice;\n\n  PDFFont = require('../font');\n\n  PDFObject = require('../object');\n\n  EmbeddedFont = (function(superClass) {\n    var toHex;\n\n    extend(EmbeddedFont, superClass);\n\n    function EmbeddedFont(document, font, id) {\n      this.document = document;\n      this.font = font;\n      this.id = id;\n      this.subset = this.font.createSubset();\n      this.unicode = [[0]];\n      this.widths = [this.font.getGlyph(0).advanceWidth];\n      this.name = this.font.postscriptName;\n      this.scale = 1000 / this.font.unitsPerEm;\n      this.ascender = this.font.ascent * this.scale;\n      this.descender = this.font.descent * this.scale;\n      this.lineGap = this.font.lineGap * this.scale;\n      this.bbox = this.font.bbox;\n    }\n\n    EmbeddedFont.prototype.encode = function(text, features) {\n      var base, base1, gid, glyph, glyphs, i, j, key, len, positions, ref, res;\n      ref = this.font.layout(text, features), glyphs = ref.glyphs, positions = ref.positions;\n      res = [];\n      for (i = j = 0, len = glyphs.length; j < len; i = ++j) {\n        glyph = glyphs[i];\n        gid = this.subset.includeGlyph(glyph.id);\n        res.push(('0000' + gid.toString(16)).slice(-4));\n        if ((base = this.widths)[gid] == null) {\n          base[gid] = glyph.advanceWidth * this.scale;\n        }\n        if ((base1 = this.unicode)[gid] == null) {\n          base1[gid] = glyph.codePoints;\n        }\n        for (key in positions[i]) {\n          positions[i][key] *= this.scale;\n        }\n        positions[i].advanceWidth = glyph.advanceWidth * this.scale;\n      }\n      return [res, positions];\n    };\n\n    EmbeddedFont.prototype.widthOfString = function(string, size, features) {\n      var scale, width;\n      width = this.font.layout(string, features).advanceWidth;\n      scale = size / this.font.unitsPerEm;\n      return width * scale;\n    };\n\n    EmbeddedFont.prototype.embed = function() {\n      var bbox, descendantFont, descriptor, familyClass, flags, fontFile, i, isCFF, name, ref, tag;\n      isCFF = this.subset.cff != null;\n      fontFile = this.document.ref();\n      if (isCFF) {\n        fontFile.data.Subtype = 'CIDFontType0C';\n      }\n      this.subset.encodeStream().pipe(fontFile);\n      familyClass = (((ref = this.font['OS/2']) != null ? ref.sFamilyClass : void 0) || 0) >> 8;\n      flags = 0;\n      if (this.font.post.isFixedPitch) {\n        flags |= 1 << 0;\n      }\n      if ((1 <= familyClass && familyClass <= 7)) {\n        flags |= 1 << 1;\n      }\n      flags |= 1 << 2;\n      if (familyClass === 10) {\n        flags |= 1 << 3;\n      }\n      if (this.font.head.macStyle.italic) {\n        flags |= 1 << 6;\n      }\n      tag = ((function() {\n        var j, results;\n        results = [];\n        for (i = j = 0; j < 6; i = ++j) {\n          results.push(String.fromCharCode(Math.random() * 26 + 65));\n        }\n        return results;\n      })()).join('');\n      name = tag + '+' + this.font.postscriptName;\n      bbox = this.font.bbox;\n      descriptor = this.document.ref({\n        Type: 'FontDescriptor',\n        FontName: name,\n        Flags: flags,\n        FontBBox: [bbox.minX * this.scale, bbox.minY * this.scale, bbox.maxX * this.scale, bbox.maxY * this.scale],\n        ItalicAngle: this.font.italicAngle,\n        Ascent: this.ascender,\n        Descent: this.descender,\n        CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,\n        XHeight: (this.font.xHeight || 0) * this.scale,\n        StemV: 0\n      });\n      if (isCFF) {\n        descriptor.data.FontFile3 = fontFile;\n      } else {\n        descriptor.data.FontFile2 = fontFile;\n      }\n      descriptor.end();\n      descendantFont = this.document.ref({\n        Type: 'Font',\n        Subtype: isCFF ? 'CIDFontType0' : 'CIDFontType2',\n        BaseFont: name,\n        CIDSystemInfo: {\n          Registry: new String('Adobe'),\n          Ordering: new String('Identity'),\n          Supplement: 0\n        },\n        FontDescriptor: descriptor,\n        W: [0, this.widths]\n      });\n      descendantFont.end();\n      this.dictionary.data = {\n        Type: 'Font',\n        Subtype: 'Type0',\n        BaseFont: name,\n        Encoding: 'Identity-H',\n        DescendantFonts: [descendantFont],\n        ToUnicode: this.toUnicodeCmap()\n      };\n      return this.dictionary.end();\n    };\n\n    toHex = function() {\n      var code, codePoints, codes;\n      codePoints = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      codes = (function() {\n        var j, len, results;\n        results = [];\n        for (j = 0, len = codePoints.length; j < len; j++) {\n          code = codePoints[j];\n          results.push(('0000' + code.toString(16)).slice(-4));\n        }\n        return results;\n      })();\n      return codes.join('');\n    };\n\n    EmbeddedFont.prototype.toUnicodeCmap = function() {\n      var cmap, codePoints, encoded, entries, j, k, len, len1, ref, value;\n      cmap = this.document.ref();\n      entries = [];\n      ref = this.unicode;\n      for (j = 0, len = ref.length; j < len; j++) {\n        codePoints = ref[j];\n        encoded = [];\n        for (k = 0, len1 = codePoints.length; k < len1; k++) {\n          value = codePoints[k];\n          if (value > 0xffff) {\n            value -= 0x10000;\n            encoded.push(toHex(value >>> 10 & 0x3ff | 0xd800));\n            value = 0xdc00 | value & 0x3ff;\n          }\n          encoded.push(toHex(value));\n        }\n        entries.push(\"<\" + (encoded.join(' ')) + \">\");\n      }\n      cmap.end(\"/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo <<\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement 0\\n>> def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange\\n<0000><ffff>\\nendcodespacerange\\n1 beginbfrange\\n<0000> <\" + (toHex(entries.length - 1)) + \"> [\" + (entries.join(' ')) + \"]\\nendbfrange\\nendcmap\\nCMapName currentdict /CMap defineresource pop\\nend\\nend\");\n      return cmap;\n    };\n\n    return EmbeddedFont;\n\n  })(PDFFont);\n\n  module.exports = EmbeddedFont;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}