{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = exports.drawPolyline = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _parsePoints = _interopRequireDefault(require(\"../svg/parsePoints\"));\n\nconst drawPolyline = ctx => points => {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(p => ctx.lineTo(p[0], p[1]));\n  }\n};\n\nexports.drawPolyline = drawPolyline;\n\nconst renderPolyline = ctx => R.tap(R.compose(drawPolyline(ctx), _parsePoints.default, R.pathOr('', ['props', 'points'])));\n\nvar _default = renderPolyline;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/render/lib/primitives/renderPolyline.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","drawPolyline","R","_parsePoints","ctx","points","length","moveTo","slice","forEach","p","lineTo","renderPolyline","tap","compose","pathOr","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,YAAR,GAAuB,KAAK,CAA9C;;AAEA,IAAIC,CAAC,GAAGL,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIO,YAAY,GAAGR,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAAzC;;AAEA,MAAMK,YAAY,GAAGG,GAAG,IAAIC,MAAM,IAAI;AACpC,MAAIA,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACrBF,IAAAA,GAAG,CAACG,MAAJ,CAAWF,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAX,EAAyBA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAzB;AACAA,IAAAA,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgBC,OAAhB,CAAwBC,CAAC,IAAIN,GAAG,CAACO,MAAJ,CAAWD,CAAC,CAAC,CAAD,CAAZ,EAAiBA,CAAC,CAAC,CAAD,CAAlB,CAA7B;AACD;AACF,CALD;;AAOAZ,OAAO,CAACG,YAAR,GAAuBA,YAAvB;;AAEA,MAAMW,cAAc,GAAGR,GAAG,IAAIF,CAAC,CAACW,GAAF,CAAMX,CAAC,CAACY,OAAF,CAAUb,YAAY,CAACG,GAAD,CAAtB,EAA6BD,YAAY,CAACH,OAA1C,EAAmDE,CAAC,CAACa,MAAF,CAAS,EAAT,EAAa,CAAC,OAAD,EAAU,QAAV,CAAb,CAAnD,CAAN,CAA9B;;AAEA,IAAIC,QAAQ,GAAGJ,cAAf;AACAd,OAAO,CAACE,OAAR,GAAkBgB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = exports.drawPolyline = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _parsePoints = _interopRequireDefault(require(\"../svg/parsePoints\"));\n\nconst drawPolyline = ctx => points => {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(p => ctx.lineTo(p[0], p[1]));\n  }\n};\n\nexports.drawPolyline = drawPolyline;\n\nconst renderPolyline = ctx => R.tap(R.compose(drawPolyline(ctx), _parsePoints.default, R.pathOr('', ['props', 'points'])));\n\nvar _default = renderPolyline;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}