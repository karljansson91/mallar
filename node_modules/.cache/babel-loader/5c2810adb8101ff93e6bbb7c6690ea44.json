{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _advanceWidth = _interopRequireDefault(require(\"@react-pdf/textkit/run/advanceWidth\"));\n\nvar _advanceWidth2 = _interopRequireDefault(require(\"@react-pdf/textkit/attributedString/advanceWidth\"));\n\nconst renderRun = (ctx, run) => {\n  const runAdvanceWidth = (0, _advanceWidth.default)(run);\n  const {\n    font,\n    fontSize,\n    color,\n    opacity\n  } = run.attributes;\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (let i = 0; i < run.glyphs.length; i += 1) {\n      const position = run.positions[i];\n      const glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      ctx._addGlyphs(run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(runAdvanceWidth, 0);\n};\n\nconst renderSpan = (ctx, line, textAnchor, dominantBaseline) => {\n  ctx.save();\n  const x = R.pathOr(0, ['box', 'x'], line);\n  const y = R.pathOr(0, ['box', 'y'], line);\n  const font = R.pathOr(1, ['runs', 0, 'attributes', 'font'], line);\n  const scale = R.pathOr(1, ['runs', 0, 'attributes', 'scale'], line);\n  const width = (0, _advanceWidth2.default)(line);\n  const ascent = font.ascent * scale;\n  const xHeight = font.xHeight * scale;\n  const descent = font.descent * scale;\n  const capHeight = font.capHeight * scale;\n  let xTranslate = x;\n  let yTranslate = y;\n\n  switch (textAnchor) {\n    case 'middle':\n      xTranslate = x - width / 2;\n      break;\n\n    case 'end':\n      xTranslate = x - width;\n      break;\n\n    default:\n      xTranslate = x;\n      break;\n  }\n\n  switch (dominantBaseline) {\n    case 'middle':\n    case 'central':\n      yTranslate = y + capHeight / 2;\n      break;\n\n    case 'hanging':\n      yTranslate = y + capHeight;\n      break;\n\n    case 'mathematical':\n      yTranslate = y + xHeight;\n      break;\n\n    case 'text-after-edge':\n      yTranslate = y + descent;\n      break;\n\n    case 'text-before-edge':\n      yTranslate = y + ascent;\n      break;\n\n    default:\n      yTranslate = y;\n      break;\n  }\n\n  ctx.translate(xTranslate, yTranslate);\n  line.runs.forEach(run => renderRun(ctx, run));\n  ctx.restore();\n};\n\nconst renderSvgText = ctx => node => {\n  node.children.forEach(span => renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline));\n  return node;\n};\n\nvar _default = renderSvgText;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/render/lib/primitives/renderSvgText.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_advanceWidth","_advanceWidth2","renderRun","ctx","run","runAdvanceWidth","font","fontSize","color","opacity","attributes","fillColor","fillOpacity","sbix","COLR","CPAL","save","translate","ascent","i","glyphs","length","position","positions","glyph","xOffset","yOffset","render","restore","xAdvance","yAdvance","name","_addGlyphs","error","console","log","renderSpan","line","textAnchor","dominantBaseline","x","pathOr","y","scale","width","xHeight","descent","capHeight","xTranslate","yTranslate","runs","forEach","renderSvgText","node","children","span","lines","props","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _advanceWidth = _interopRequireDefault(require(\"@react-pdf/textkit/run/advanceWidth\"));\n\nvar _advanceWidth2 = _interopRequireDefault(require(\"@react-pdf/textkit/attributedString/advanceWidth\"));\n\nconst renderRun = (ctx, run) => {\n  const runAdvanceWidth = (0, _advanceWidth.default)(run);\n  const {\n    font,\n    fontSize,\n    color,\n    opacity\n  } = run.attributes;\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (let i = 0; i < run.glyphs.length; i += 1) {\n      const position = run.positions[i];\n      const glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      ctx._addGlyphs(run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(runAdvanceWidth, 0);\n};\n\nconst renderSpan = (ctx, line, textAnchor, dominantBaseline) => {\n  ctx.save();\n  const x = R.pathOr(0, ['box', 'x'], line);\n  const y = R.pathOr(0, ['box', 'y'], line);\n  const font = R.pathOr(1, ['runs', 0, 'attributes', 'font'], line);\n  const scale = R.pathOr(1, ['runs', 0, 'attributes', 'scale'], line);\n  const width = (0, _advanceWidth2.default)(line);\n  const ascent = font.ascent * scale;\n  const xHeight = font.xHeight * scale;\n  const descent = font.descent * scale;\n  const capHeight = font.capHeight * scale;\n  let xTranslate = x;\n  let yTranslate = y;\n\n  switch (textAnchor) {\n    case 'middle':\n      xTranslate = x - width / 2;\n      break;\n\n    case 'end':\n      xTranslate = x - width;\n      break;\n\n    default:\n      xTranslate = x;\n      break;\n  }\n\n  switch (dominantBaseline) {\n    case 'middle':\n    case 'central':\n      yTranslate = y + capHeight / 2;\n      break;\n\n    case 'hanging':\n      yTranslate = y + capHeight;\n      break;\n\n    case 'mathematical':\n      yTranslate = y + xHeight;\n      break;\n\n    case 'text-after-edge':\n      yTranslate = y + descent;\n      break;\n\n    case 'text-before-edge':\n      yTranslate = y + ascent;\n      break;\n\n    default:\n      yTranslate = y;\n      break;\n  }\n\n  ctx.translate(xTranslate, yTranslate);\n  line.runs.forEach(run => renderRun(ctx, run));\n  ctx.restore();\n};\n\nconst renderSvgText = ctx => node => {\n  node.children.forEach(span => renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline));\n  return node;\n};\n\nvar _default = renderSvgText;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}