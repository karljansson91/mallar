{"ast":null,"code":"var _jsxFileName = \"/Users/kaja/Code/mallar/app/src/context/experience.js\";\nimport React from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport { v4 } from 'uuid';\n\nfunction experienceReducer(draft, action) {\n  switch (action.type) {\n    case 'ADD_EXPERIENCE':\n      {\n        draft.push({\n          workTitle: '',\n          employer: '',\n          startDate: '',\n          endDate: '',\n          description: '',\n          id: v4()\n        });\n        return;\n      }\n\n    case 'update':\n      {\n        draft[action.index][action.fieldName] = action.payload;\n        return;\n      }\n\n    case 'delete':\n      {\n        console.log(action.index);\n        draft.splice(action.index, 1);\n        return;\n      }\n\n    default:\n      return;\n  }\n}\n\nconst initialState = [{\n  workTitle: '',\n  employer: '',\n  startDate: '',\n  endDate: '',\n  description: '',\n  id: v4()\n}];\nconst ExperienceStateContext = React.createContext();\nconst ExperienceDispatchContext = React.createContext();\n\nconst ExperienceContext = ({\n  children\n}) => {\n  const [state, dispatch] = useImmerReducer(experienceReducer, initialState);\n  return /*#__PURE__*/React.createElement(ExperienceStateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExperienceDispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport { ExperienceContext, ExperienceStateContext, ExperienceDispatchContext };","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/src/context/experience.js"],"names":["React","useImmerReducer","v4","experienceReducer","draft","action","type","push","workTitle","employer","startDate","endDate","description","id","index","fieldName","payload","console","log","splice","initialState","ExperienceStateContext","createContext","ExperienceDispatchContext","ExperienceContext","children","state","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,EAAT,QAAmB,MAAnB;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkCC,MAAlC,EAA0C;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AAAuB;AACpBF,QAAAA,KAAK,CAACG,IAAN,CAAW;AACNC,UAAAA,SAAS,EAAE,EADL;AAENC,UAAAA,QAAQ,EAAE,EAFJ;AAGNC,UAAAA,SAAS,EAAE,EAHL;AAINC,UAAAA,OAAO,EAAE,EAJH;AAKNC,UAAAA,WAAW,EAAE,EALP;AAMNC,UAAAA,EAAE,EAAEX,EAAE;AANA,SAAX;AAQD;AACD;;AACD,SAAK,QAAL;AAAe;AACXE,QAAAA,KAAK,CAACC,MAAM,CAACS,KAAR,CAAL,CAAoBT,MAAM,CAACU,SAA3B,IAAwCV,MAAM,CAACW,OAA/C;AACA;AACH;;AACD,SAAK,QAAL;AAAe;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYb,MAAM,CAACS,KAAnB;AACAV,QAAAA,KAAK,CAACe,MAAN,CAAad,MAAM,CAACS,KAApB,EAA2B,CAA3B;AACA;AACD;;AACD;AACE;AAtBJ;AAwBD;;AAGD,MAAMM,YAAY,GAAG,CAAC;AACpBZ,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,SAAS,EAAE,EAHS;AAIpBC,EAAAA,OAAO,EAAE,EAJW;AAKpBC,EAAAA,WAAW,EAAE,EALO;AAMpBC,EAAAA,EAAE,EAAEX,EAAE;AANc,CAAD,CAArB;AASA,MAAMmB,sBAAsB,GAAGrB,KAAK,CAACsB,aAAN,EAA/B;AACA,MAAMC,yBAAyB,GAAGvB,KAAK,CAACsB,aAAN,EAAlC;;AAEA,MAAME,iBAAiB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1B,eAAe,CAACE,iBAAD,EAAoBiB,YAApB,CAAzC;AACA,sBACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEM,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,yBAAD,CAA2B,QAA3B;AAAoC,IAAA,KAAK,EAAEC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF,CADF;AAOD,CATD;;AAWA,SAASD,iBAAT,EAA4BH,sBAA5B,EAAoDE,yBAApD","sourcesContent":["import React from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport { v4 } from 'uuid';\n\nfunction experienceReducer(draft, action) {\n  switch (action.type) {\n    case 'ADD_EXPERIENCE': {\n       draft.push({\n            workTitle: '',\n            employer: '',\n            startDate: '',\n            endDate: '',\n            description: '',\n            id: v4()\n      });\n      return;\n    }\n    case 'update': {\n        draft[action.index][action.fieldName] = action.payload;\n        return;\n    }\n    case 'delete': {\n      console.log(action.index)\n      draft.splice(action.index, 1)\n      return;\n    }\n    default:\n      return;\n  }\n}\n\n\nconst initialState = [{\n  workTitle: '',\n  employer: '',\n  startDate: '',\n  endDate: '',\n  description: '',\n  id: v4()\n}]\n\nconst ExperienceStateContext = React.createContext();\nconst ExperienceDispatchContext = React.createContext();\n\nconst ExperienceContext = ({children}) => {\n  const [state, dispatch] = useImmerReducer(experienceReducer, initialState);\n  return (\n    <ExperienceStateContext.Provider value={state}>\n      <ExperienceDispatchContext.Provider value={dispatch}>\n        {children}\n      </ExperienceDispatchContext.Provider>\n    </ExperienceStateContext.Provider>\n  );\n}\n\nexport { ExperienceContext, ExperienceStateContext, ExperienceDispatchContext }"]},"metadata":{},"sourceType":"module"}