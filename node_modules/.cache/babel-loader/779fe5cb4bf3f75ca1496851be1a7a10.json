{"ast":null,"code":"// Generated by CoffeeScript 1.12.1\n(function () {\n  var KAPPA,\n      SVGPath,\n      number,\n      slice = [].slice;\n  SVGPath = require('../path');\n  number = require('../object').number;\n  KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n  module.exports = {\n    initVector: function () {\n      this._ctm = [1, 0, 0, 1, 0, 0];\n      return this._ctmStack = [];\n    },\n    save: function () {\n      this._ctmStack.push(this._ctm.slice());\n\n      return this.addContent('q');\n    },\n    restore: function () {\n      this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0];\n      return this.addContent('Q');\n    },\n    closePath: function () {\n      return this.addContent('h');\n    },\n    lineWidth: function (w) {\n      return this.addContent(number(w) + \" w\");\n    },\n    _CAP_STYLES: {\n      BUTT: 0,\n      ROUND: 1,\n      SQUARE: 2\n    },\n    lineCap: function (c) {\n      if (typeof c === 'string') {\n        c = this._CAP_STYLES[c.toUpperCase()];\n      }\n\n      return this.addContent(c + \" J\");\n    },\n    _JOIN_STYLES: {\n      MITER: 0,\n      ROUND: 1,\n      BEVEL: 2\n    },\n    lineJoin: function (j) {\n      if (typeof j === 'string') {\n        j = this._JOIN_STYLES[j.toUpperCase()];\n      }\n\n      return this.addContent(j + \" j\");\n    },\n    miterLimit: function (m) {\n      return this.addContent(number(m) + \" M\");\n    },\n    dash: function (length, options) {\n      var phase, ref, space, v;\n\n      if (options == null) {\n        options = {};\n      }\n\n      if (length == null) {\n        return this;\n      }\n\n      if (Array.isArray(length)) {\n        length = function () {\n          var i, len, results;\n          results = [];\n\n          for (i = 0, len = length.length; i < len; i++) {\n            v = length[i];\n            results.push(number(v));\n          }\n\n          return results;\n        }().join(' ');\n\n        phase = options.phase || 0;\n        return this.addContent(\"[\" + length + \"] \" + number(phase) + \" d\");\n      } else {\n        space = (ref = options.space) != null ? ref : length;\n        phase = options.phase || 0;\n        return this.addContent(\"[\" + number(length) + \" \" + number(space) + \"] \" + number(phase) + \" d\");\n      }\n    },\n    undash: function () {\n      return this.addContent(\"[] 0 d\");\n    },\n    moveTo: function (x, y) {\n      return this.addContent(number(x) + \" \" + number(y) + \" m\");\n    },\n    lineTo: function (x, y) {\n      return this.addContent(number(x) + \" \" + number(y) + \" l\");\n    },\n    bezierCurveTo: function (cp1x, cp1y, cp2x, cp2y, x, y) {\n      return this.addContent(number(cp1x) + \" \" + number(cp1y) + \" \" + number(cp2x) + \" \" + number(cp2y) + \" \" + number(x) + \" \" + number(y) + \" c\");\n    },\n    quadraticCurveTo: function (cpx, cpy, x, y) {\n      return this.addContent(number(cpx) + \" \" + number(cpy) + \" \" + number(x) + \" \" + number(y) + \" v\");\n    },\n    rect: function (x, y, w, h) {\n      return this.addContent(number(x) + \" \" + number(y) + \" \" + number(w) + \" \" + number(h) + \" re\");\n    },\n    roundedRect: function (x, y, w, h, r) {\n      var c;\n\n      if (r == null) {\n        r = 0;\n      }\n\n      r = Math.min(r, 0.5 * w, 0.5 * h);\n      c = r * (1.0 - KAPPA);\n      this.moveTo(x + r, y);\n      this.lineTo(x + w - r, y);\n      this.bezierCurveTo(x + w - c, y, x + w, y + c, x + w, y + r);\n      this.lineTo(x + w, y + h - r);\n      this.bezierCurveTo(x + w, y + h - c, x + w - c, y + h, x + w - r, y + h);\n      this.lineTo(x + r, y + h);\n      this.bezierCurveTo(x + c, y + h, x, y + h - c, x, y + h - r);\n      this.lineTo(x, y + r);\n      this.bezierCurveTo(x, y + c, x + c, y, x + r, y);\n      return this.closePath();\n    },\n    ellipse: function (x, y, r1, r2) {\n      var ox, oy, xe, xm, ye, ym;\n\n      if (r2 == null) {\n        r2 = r1;\n      }\n\n      x -= r1;\n      y -= r2;\n      ox = r1 * KAPPA;\n      oy = r2 * KAPPA;\n      xe = x + r1 * 2;\n      ye = y + r2 * 2;\n      xm = x + r1;\n      ym = y + r2;\n      this.moveTo(x, ym);\n      this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n      this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n      this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n      this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n      return this.closePath();\n    },\n    circle: function (x, y, radius) {\n      return this.ellipse(x, y, radius);\n    },\n    polygon: function () {\n      var i, len, point, points;\n      points = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      this.moveTo.apply(this, points.shift());\n\n      for (i = 0, len = points.length; i < len; i++) {\n        point = points[i];\n        this.lineTo.apply(this, point);\n      }\n\n      return this.closePath();\n    },\n    path: function (path) {\n      SVGPath.apply(this, path);\n      return this;\n    },\n    _windingRule: function (rule) {\n      if (/even-?odd/.test(rule)) {\n        return '*';\n      }\n\n      return '';\n    },\n    fill: function (color, rule) {\n      if (/(even-?odd)|(non-?zero)/.test(color)) {\n        rule = color;\n        color = null;\n      }\n\n      if (color) {\n        this.fillColor(color);\n      }\n\n      return this.addContent('f' + this._windingRule(rule));\n    },\n    stroke: function (color) {\n      if (color) {\n        this.strokeColor(color);\n      }\n\n      return this.addContent('S');\n    },\n    fillAndStroke: function (fillColor, strokeColor, rule) {\n      var isFillRule;\n\n      if (strokeColor == null) {\n        strokeColor = fillColor;\n      }\n\n      isFillRule = /(even-?odd)|(non-?zero)/;\n\n      if (isFillRule.test(fillColor)) {\n        rule = fillColor;\n        fillColor = null;\n      }\n\n      if (isFillRule.test(strokeColor)) {\n        rule = strokeColor;\n        strokeColor = fillColor;\n      }\n\n      if (fillColor) {\n        this.fillColor(fillColor);\n        this.strokeColor(strokeColor);\n      }\n\n      return this.addContent('B' + this._windingRule(rule));\n    },\n    clip: function (rule) {\n      return this.addContent('W' + this._windingRule(rule) + ' n');\n    },\n    transform: function (m11, m12, m21, m22, dx, dy) {\n      var m, m0, m1, m2, m3, m4, m5, v, values;\n      m = this._ctm;\n      m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], m4 = m[4], m5 = m[5];\n      m[0] = m0 * m11 + m2 * m12;\n      m[1] = m1 * m11 + m3 * m12;\n      m[2] = m0 * m21 + m2 * m22;\n      m[3] = m1 * m21 + m3 * m22;\n      m[4] = m0 * dx + m2 * dy + m4;\n      m[5] = m1 * dx + m3 * dy + m5;\n\n      values = function () {\n        var i, len, ref, results;\n        ref = [m11, m12, m21, m22, dx, dy];\n        results = [];\n\n        for (i = 0, len = ref.length; i < len; i++) {\n          v = ref[i];\n          results.push(number(v));\n        }\n\n        return results;\n      }().join(' ');\n\n      return this.addContent(values + \" cm\");\n    },\n    translate: function (x, y) {\n      return this.transform(1, 0, 0, 1, x, y);\n    },\n    rotate: function (angle, options) {\n      var cos, rad, ref, sin, x, x1, y, y1;\n\n      if (options == null) {\n        options = {};\n      }\n\n      rad = angle * Math.PI / 180;\n      cos = Math.cos(rad);\n      sin = Math.sin(rad);\n      x = y = 0;\n\n      if (options.origin != null) {\n        ref = options.origin, x = ref[0], y = ref[1];\n        x1 = x * cos - y * sin;\n        y1 = x * sin + y * cos;\n        x -= x1;\n        y -= y1;\n      }\n\n      return this.transform(cos, sin, -sin, cos, x, y);\n    },\n    scale: function (xFactor, yFactor, options) {\n      var ref, x, y;\n\n      if (yFactor == null) {\n        yFactor = xFactor;\n      }\n\n      if (options == null) {\n        options = {};\n      }\n\n      if (arguments.length === 2) {\n        yFactor = xFactor;\n        options = yFactor;\n      }\n\n      x = y = 0;\n\n      if (options.origin != null) {\n        ref = options.origin, x = ref[0], y = ref[1];\n        x -= xFactor * x;\n        y -= yFactor * y;\n      }\n\n      return this.transform(xFactor, 0, 0, yFactor, x, y);\n    }\n  };\n}).call(this);","map":{"version":3,"sources":["/Users/kaja/Code/mallar/node_modules/pdfkit/js/mixins/vector.js"],"names":["KAPPA","SVGPath","number","slice","require","Math","sqrt","module","exports","initVector","_ctm","_ctmStack","save","push","addContent","restore","pop","closePath","lineWidth","w","_CAP_STYLES","BUTT","ROUND","SQUARE","lineCap","c","toUpperCase","_JOIN_STYLES","MITER","BEVEL","lineJoin","j","miterLimit","m","dash","length","options","phase","ref","space","v","Array","isArray","i","len","results","join","undash","moveTo","x","y","lineTo","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","quadraticCurveTo","cpx","cpy","rect","h","roundedRect","r","min","ellipse","r1","r2","ox","oy","xe","xm","ye","ym","circle","radius","polygon","point","points","arguments","call","apply","shift","path","_windingRule","rule","test","fill","color","fillColor","stroke","strokeColor","fillAndStroke","isFillRule","clip","transform","m11","m12","m21","m22","dx","dy","m0","m1","m2","m3","m4","m5","values","translate","rotate","angle","cos","rad","sin","x1","y1","PI","origin","scale","xFactor","yFactor"],"mappings":"AAAA;AACA,CAAC,YAAW;AACV,MAAIA,KAAJ;AAAA,MAAWC,OAAX;AAAA,MAAoBC,MAApB;AAAA,MACEC,KAAK,GAAG,GAAGA,KADb;AAGAF,EAAAA,OAAO,GAAGG,OAAO,CAAC,SAAD,CAAjB;AAEAF,EAAAA,MAAM,GAAGE,OAAO,CAAC,WAAD,CAAP,CAAqBF,MAA9B;AAEAF,EAAAA,KAAK,GAAG,OAAO,CAACK,IAAI,CAACC,IAAL,CAAU,CAAV,IAAe,GAAhB,IAAuB,GAA9B,CAAR;AAEAC,EAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,IAAAA,UAAU,EAAE,YAAW;AACrB,WAAKC,IAAL,GAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAZ;AACA,aAAO,KAAKC,SAAL,GAAiB,EAAxB;AACD,KAJc;AAKfC,IAAAA,IAAI,EAAE,YAAW;AACf,WAAKD,SAAL,CAAeE,IAAf,CAAoB,KAAKH,IAAL,CAAUP,KAAV,EAApB;;AACA,aAAO,KAAKW,UAAL,CAAgB,GAAhB,CAAP;AACD,KARc;AASfC,IAAAA,OAAO,EAAE,YAAW;AAClB,WAAKL,IAAL,GAAY,KAAKC,SAAL,CAAeK,GAAf,MAAwB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAApC;AACA,aAAO,KAAKF,UAAL,CAAgB,GAAhB,CAAP;AACD,KAZc;AAafG,IAAAA,SAAS,EAAE,YAAW;AACpB,aAAO,KAAKH,UAAL,CAAgB,GAAhB,CAAP;AACD,KAfc;AAgBfI,IAAAA,SAAS,EAAE,UAASC,CAAT,EAAY;AACrB,aAAO,KAAKL,UAAL,CAAiBZ,MAAM,CAACiB,CAAD,CAAP,GAAc,IAA9B,CAAP;AACD,KAlBc;AAmBfC,IAAAA,WAAW,EAAE;AACXC,MAAAA,IAAI,EAAE,CADK;AAEXC,MAAAA,KAAK,EAAE,CAFI;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAnBE;AAwBfC,IAAAA,OAAO,EAAE,UAASC,CAAT,EAAY;AACnB,UAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzBA,QAAAA,CAAC,GAAG,KAAKL,WAAL,CAAiBK,CAAC,CAACC,WAAF,EAAjB,CAAJ;AACD;;AACD,aAAO,KAAKZ,UAAL,CAAgBW,CAAC,GAAG,IAApB,CAAP;AACD,KA7Bc;AA8BfE,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZN,MAAAA,KAAK,EAAE,CAFK;AAGZO,MAAAA,KAAK,EAAE;AAHK,KA9BC;AAmCfC,IAAAA,QAAQ,EAAE,UAASC,CAAT,EAAY;AACpB,UAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzBA,QAAAA,CAAC,GAAG,KAAKJ,YAAL,CAAkBI,CAAC,CAACL,WAAF,EAAlB,CAAJ;AACD;;AACD,aAAO,KAAKZ,UAAL,CAAgBiB,CAAC,GAAG,IAApB,CAAP;AACD,KAxCc;AAyCfC,IAAAA,UAAU,EAAE,UAASC,CAAT,EAAY;AACtB,aAAO,KAAKnB,UAAL,CAAiBZ,MAAM,CAAC+B,CAAD,CAAP,GAAc,IAA9B,CAAP;AACD,KA3Cc;AA4CfC,IAAAA,IAAI,EAAE,UAASC,MAAT,EAAiBC,OAAjB,EAA0B;AAC9B,UAAIC,KAAJ,EAAWC,GAAX,EAAgBC,KAAhB,EAAuBC,CAAvB;;AACA,UAAIJ,OAAO,IAAI,IAAf,EAAqB;AACnBA,QAAAA,OAAO,GAAG,EAAV;AACD;;AACD,UAAID,MAAM,IAAI,IAAd,EAAoB;AAClB,eAAO,IAAP;AACD;;AACD,UAAIM,KAAK,CAACC,OAAN,CAAcP,MAAd,CAAJ,EAA2B;AACzBA,QAAAA,MAAM,GAAK,YAAW;AACpB,cAAIQ,CAAJ,EAAOC,GAAP,EAAYC,OAAZ;AACAA,UAAAA,OAAO,GAAG,EAAV;;AACA,eAAKF,CAAC,GAAG,CAAJ,EAAOC,GAAG,GAAGT,MAAM,CAACA,MAAzB,EAAiCQ,CAAC,GAAGC,GAArC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7CH,YAAAA,CAAC,GAAGL,MAAM,CAACQ,CAAD,CAAV;AACAE,YAAAA,OAAO,CAAChC,IAAR,CAAaX,MAAM,CAACsC,CAAD,CAAnB;AACD;;AACD,iBAAOK,OAAP;AACD,SARS,EAAD,CAQHC,IARG,CAQE,GARF,CAAT;;AASAT,QAAAA,KAAK,GAAGD,OAAO,CAACC,KAAR,IAAiB,CAAzB;AACA,eAAO,KAAKvB,UAAL,CAAgB,MAAMqB,MAAN,GAAe,IAAf,GAAuBjC,MAAM,CAACmC,KAAD,CAA7B,GAAwC,IAAxD,CAAP;AACD,OAZD,MAYO;AACLE,QAAAA,KAAK,GAAG,CAACD,GAAG,GAAGF,OAAO,CAACG,KAAf,KAAyB,IAAzB,GAAgCD,GAAhC,GAAsCH,MAA9C;AACAE,QAAAA,KAAK,GAAGD,OAAO,CAACC,KAAR,IAAiB,CAAzB;AACA,eAAO,KAAKvB,UAAL,CAAgB,MAAOZ,MAAM,CAACiC,MAAD,CAAb,GAAyB,GAAzB,GAAgCjC,MAAM,CAACqC,KAAD,CAAtC,GAAiD,IAAjD,GAAyDrC,MAAM,CAACmC,KAAD,CAA/D,GAA0E,IAA1F,CAAP;AACD;AACF,KArEc;AAsEfU,IAAAA,MAAM,EAAE,YAAW;AACjB,aAAO,KAAKjC,UAAL,CAAgB,QAAhB,CAAP;AACD,KAxEc;AAyEfkC,IAAAA,MAAM,EAAE,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACrB,aAAO,KAAKpC,UAAL,CAAiBZ,MAAM,CAAC+C,CAAD,CAAP,GAAc,GAAd,GAAqB/C,MAAM,CAACgD,CAAD,CAA3B,GAAkC,IAAlD,CAAP;AACD,KA3Ec;AA4EfC,IAAAA,MAAM,EAAE,UAASF,CAAT,EAAYC,CAAZ,EAAe;AACrB,aAAO,KAAKpC,UAAL,CAAiBZ,MAAM,CAAC+C,CAAD,CAAP,GAAc,GAAd,GAAqB/C,MAAM,CAACgD,CAAD,CAA3B,GAAkC,IAAlD,CAAP;AACD,KA9Ec;AA+EfE,IAAAA,aAAa,EAAE,UAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCP,CAAjC,EAAoCC,CAApC,EAAuC;AACpD,aAAO,KAAKpC,UAAL,CAAiBZ,MAAM,CAACmD,IAAD,CAAP,GAAiB,GAAjB,GAAwBnD,MAAM,CAACoD,IAAD,CAA9B,GAAwC,GAAxC,GAA+CpD,MAAM,CAACqD,IAAD,CAArD,GAA+D,GAA/D,GAAsErD,MAAM,CAACsD,IAAD,CAA5E,GAAsF,GAAtF,GAA6FtD,MAAM,CAAC+C,CAAD,CAAnG,GAA0G,GAA1G,GAAiH/C,MAAM,CAACgD,CAAD,CAAvH,GAA8H,IAA9I,CAAP;AACD,KAjFc;AAkFfO,IAAAA,gBAAgB,EAAE,UAASC,GAAT,EAAcC,GAAd,EAAmBV,CAAnB,EAAsBC,CAAtB,EAAyB;AACzC,aAAO,KAAKpC,UAAL,CAAiBZ,MAAM,CAACwD,GAAD,CAAP,GAAgB,GAAhB,GAAuBxD,MAAM,CAACyD,GAAD,CAA7B,GAAsC,GAAtC,GAA6CzD,MAAM,CAAC+C,CAAD,CAAnD,GAA0D,GAA1D,GAAiE/C,MAAM,CAACgD,CAAD,CAAvE,GAA8E,IAA9F,CAAP;AACD,KApFc;AAqFfU,IAAAA,IAAI,EAAE,UAASX,CAAT,EAAYC,CAAZ,EAAe/B,CAAf,EAAkB0C,CAAlB,EAAqB;AACzB,aAAO,KAAK/C,UAAL,CAAiBZ,MAAM,CAAC+C,CAAD,CAAP,GAAc,GAAd,GAAqB/C,MAAM,CAACgD,CAAD,CAA3B,GAAkC,GAAlC,GAAyChD,MAAM,CAACiB,CAAD,CAA/C,GAAsD,GAAtD,GAA6DjB,MAAM,CAAC2D,CAAD,CAAnE,GAA0E,KAA1F,CAAP;AACD,KAvFc;AAwFfC,IAAAA,WAAW,EAAE,UAASb,CAAT,EAAYC,CAAZ,EAAe/B,CAAf,EAAkB0C,CAAlB,EAAqBE,CAArB,EAAwB;AACnC,UAAItC,CAAJ;;AACA,UAAIsC,CAAC,IAAI,IAAT,EAAe;AACbA,QAAAA,CAAC,GAAG,CAAJ;AACD;;AACDA,MAAAA,CAAC,GAAG1D,IAAI,CAAC2D,GAAL,CAASD,CAAT,EAAY,MAAM5C,CAAlB,EAAqB,MAAM0C,CAA3B,CAAJ;AACApC,MAAAA,CAAC,GAAGsC,CAAC,IAAI,MAAM/D,KAAV,CAAL;AACA,WAAKgD,MAAL,CAAYC,CAAC,GAAGc,CAAhB,EAAmBb,CAAnB;AACA,WAAKC,MAAL,CAAYF,CAAC,GAAG9B,CAAJ,GAAQ4C,CAApB,EAAuBb,CAAvB;AACA,WAAKE,aAAL,CAAmBH,CAAC,GAAG9B,CAAJ,GAAQM,CAA3B,EAA8ByB,CAA9B,EAAiCD,CAAC,GAAG9B,CAArC,EAAwC+B,CAAC,GAAGzB,CAA5C,EAA+CwB,CAAC,GAAG9B,CAAnD,EAAsD+B,CAAC,GAAGa,CAA1D;AACA,WAAKZ,MAAL,CAAYF,CAAC,GAAG9B,CAAhB,EAAmB+B,CAAC,GAAGW,CAAJ,GAAQE,CAA3B;AACA,WAAKX,aAAL,CAAmBH,CAAC,GAAG9B,CAAvB,EAA0B+B,CAAC,GAAGW,CAAJ,GAAQpC,CAAlC,EAAqCwB,CAAC,GAAG9B,CAAJ,GAAQM,CAA7C,EAAgDyB,CAAC,GAAGW,CAApD,EAAuDZ,CAAC,GAAG9B,CAAJ,GAAQ4C,CAA/D,EAAkEb,CAAC,GAAGW,CAAtE;AACA,WAAKV,MAAL,CAAYF,CAAC,GAAGc,CAAhB,EAAmBb,CAAC,GAAGW,CAAvB;AACA,WAAKT,aAAL,CAAmBH,CAAC,GAAGxB,CAAvB,EAA0ByB,CAAC,GAAGW,CAA9B,EAAiCZ,CAAjC,EAAoCC,CAAC,GAAGW,CAAJ,GAAQpC,CAA5C,EAA+CwB,CAA/C,EAAkDC,CAAC,GAAGW,CAAJ,GAAQE,CAA1D;AACA,WAAKZ,MAAL,CAAYF,CAAZ,EAAeC,CAAC,GAAGa,CAAnB;AACA,WAAKX,aAAL,CAAmBH,CAAnB,EAAsBC,CAAC,GAAGzB,CAA1B,EAA6BwB,CAAC,GAAGxB,CAAjC,EAAoCyB,CAApC,EAAuCD,CAAC,GAAGc,CAA3C,EAA8Cb,CAA9C;AACA,aAAO,KAAKjC,SAAL,EAAP;AACD,KAzGc;AA0GfgD,IAAAA,OAAO,EAAE,UAAShB,CAAT,EAAYC,CAAZ,EAAegB,EAAf,EAAmBC,EAAnB,EAAuB;AAC9B,UAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB;;AACA,UAAIN,EAAE,IAAI,IAAV,EAAgB;AACdA,QAAAA,EAAE,GAAGD,EAAL;AACD;;AACDjB,MAAAA,CAAC,IAAIiB,EAAL;AACAhB,MAAAA,CAAC,IAAIiB,EAAL;AACAC,MAAAA,EAAE,GAAGF,EAAE,GAAGlE,KAAV;AACAqE,MAAAA,EAAE,GAAGF,EAAE,GAAGnE,KAAV;AACAsE,MAAAA,EAAE,GAAGrB,CAAC,GAAGiB,EAAE,GAAG,CAAd;AACAM,MAAAA,EAAE,GAAGtB,CAAC,GAAGiB,EAAE,GAAG,CAAd;AACAI,MAAAA,EAAE,GAAGtB,CAAC,GAAGiB,EAAT;AACAO,MAAAA,EAAE,GAAGvB,CAAC,GAAGiB,EAAT;AACA,WAAKnB,MAAL,CAAYC,CAAZ,EAAewB,EAAf;AACA,WAAKrB,aAAL,CAAmBH,CAAnB,EAAsBwB,EAAE,GAAGJ,EAA3B,EAA+BE,EAAE,GAAGH,EAApC,EAAwClB,CAAxC,EAA2CqB,EAA3C,EAA+CrB,CAA/C;AACA,WAAKE,aAAL,CAAmBmB,EAAE,GAAGH,EAAxB,EAA4BlB,CAA5B,EAA+BoB,EAA/B,EAAmCG,EAAE,GAAGJ,EAAxC,EAA4CC,EAA5C,EAAgDG,EAAhD;AACA,WAAKrB,aAAL,CAAmBkB,EAAnB,EAAuBG,EAAE,GAAGJ,EAA5B,EAAgCE,EAAE,GAAGH,EAArC,EAAyCI,EAAzC,EAA6CD,EAA7C,EAAiDC,EAAjD;AACA,WAAKpB,aAAL,CAAmBmB,EAAE,GAAGH,EAAxB,EAA4BI,EAA5B,EAAgCvB,CAAhC,EAAmCwB,EAAE,GAAGJ,EAAxC,EAA4CpB,CAA5C,EAA+CwB,EAA/C;AACA,aAAO,KAAKxD,SAAL,EAAP;AACD,KA7Hc;AA8HfyD,IAAAA,MAAM,EAAE,UAASzB,CAAT,EAAYC,CAAZ,EAAeyB,MAAf,EAAuB;AAC7B,aAAO,KAAKV,OAAL,CAAahB,CAAb,EAAgBC,CAAhB,EAAmByB,MAAnB,CAAP;AACD,KAhIc;AAiIfC,IAAAA,OAAO,EAAE,YAAW;AAClB,UAAIjC,CAAJ,EAAOC,GAAP,EAAYiC,KAAZ,EAAmBC,MAAnB;AACAA,MAAAA,MAAM,GAAG,KAAKC,SAAS,CAAC5C,MAAf,GAAwBhC,KAAK,CAAC6E,IAAN,CAAWD,SAAX,EAAsB,CAAtB,CAAxB,GAAmD,EAA5D;AACA,WAAK/B,MAAL,CAAYiC,KAAZ,CAAkB,IAAlB,EAAwBH,MAAM,CAACI,KAAP,EAAxB;;AACA,WAAKvC,CAAC,GAAG,CAAJ,EAAOC,GAAG,GAAGkC,MAAM,CAAC3C,MAAzB,EAAiCQ,CAAC,GAAGC,GAArC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7CkC,QAAAA,KAAK,GAAGC,MAAM,CAACnC,CAAD,CAAd;AACA,aAAKQ,MAAL,CAAY8B,KAAZ,CAAkB,IAAlB,EAAwBJ,KAAxB;AACD;;AACD,aAAO,KAAK5D,SAAL,EAAP;AACD,KA1Ic;AA2IfkE,IAAAA,IAAI,EAAE,UAASA,IAAT,EAAe;AACnBlF,MAAAA,OAAO,CAACgF,KAAR,CAAc,IAAd,EAAoBE,IAApB;AACA,aAAO,IAAP;AACD,KA9Ic;AA+IfC,IAAAA,YAAY,EAAE,UAASC,IAAT,EAAe;AAC3B,UAAI,YAAYC,IAAZ,CAAiBD,IAAjB,CAAJ,EAA4B;AAC1B,eAAO,GAAP;AACD;;AACD,aAAO,EAAP;AACD,KApJc;AAqJfE,IAAAA,IAAI,EAAE,UAASC,KAAT,EAAgBH,IAAhB,EAAsB;AAC1B,UAAI,0BAA0BC,IAA1B,CAA+BE,KAA/B,CAAJ,EAA2C;AACzCH,QAAAA,IAAI,GAAGG,KAAP;AACAA,QAAAA,KAAK,GAAG,IAAR;AACD;;AACD,UAAIA,KAAJ,EAAW;AACT,aAAKC,SAAL,CAAeD,KAAf;AACD;;AACD,aAAO,KAAK1E,UAAL,CAAgB,MAAM,KAAKsE,YAAL,CAAkBC,IAAlB,CAAtB,CAAP;AACD,KA9Jc;AA+JfK,IAAAA,MAAM,EAAE,UAASF,KAAT,EAAgB;AACtB,UAAIA,KAAJ,EAAW;AACT,aAAKG,WAAL,CAAiBH,KAAjB;AACD;;AACD,aAAO,KAAK1E,UAAL,CAAgB,GAAhB,CAAP;AACD,KApKc;AAqKf8E,IAAAA,aAAa,EAAE,UAASH,SAAT,EAAoBE,WAApB,EAAiCN,IAAjC,EAAuC;AACpD,UAAIQ,UAAJ;;AACA,UAAIF,WAAW,IAAI,IAAnB,EAAyB;AACvBA,QAAAA,WAAW,GAAGF,SAAd;AACD;;AACDI,MAAAA,UAAU,GAAG,yBAAb;;AACA,UAAIA,UAAU,CAACP,IAAX,CAAgBG,SAAhB,CAAJ,EAAgC;AAC9BJ,QAAAA,IAAI,GAAGI,SAAP;AACAA,QAAAA,SAAS,GAAG,IAAZ;AACD;;AACD,UAAII,UAAU,CAACP,IAAX,CAAgBK,WAAhB,CAAJ,EAAkC;AAChCN,QAAAA,IAAI,GAAGM,WAAP;AACAA,QAAAA,WAAW,GAAGF,SAAd;AACD;;AACD,UAAIA,SAAJ,EAAe;AACb,aAAKA,SAAL,CAAeA,SAAf;AACA,aAAKE,WAAL,CAAiBA,WAAjB;AACD;;AACD,aAAO,KAAK7E,UAAL,CAAgB,MAAM,KAAKsE,YAAL,CAAkBC,IAAlB,CAAtB,CAAP;AACD,KAxLc;AAyLfS,IAAAA,IAAI,EAAE,UAAST,IAAT,EAAe;AACnB,aAAO,KAAKvE,UAAL,CAAgB,MAAM,KAAKsE,YAAL,CAAkBC,IAAlB,CAAN,GAAgC,IAAhD,CAAP;AACD,KA3Lc;AA4LfU,IAAAA,SAAS,EAAE,UAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,GAAxB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqC;AAC9C,UAAIpE,CAAJ,EAAOqE,EAAP,EAAWC,EAAX,EAAeC,EAAf,EAAmBC,EAAnB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BnE,CAA/B,EAAkCoE,MAAlC;AACA3E,MAAAA,CAAC,GAAG,KAAKvB,IAAT;AACA4F,MAAAA,EAAE,GAAGrE,CAAC,CAAC,CAAD,CAAN,EAAWsE,EAAE,GAAGtE,CAAC,CAAC,CAAD,CAAjB,EAAsBuE,EAAE,GAAGvE,CAAC,CAAC,CAAD,CAA5B,EAAiCwE,EAAE,GAAGxE,CAAC,CAAC,CAAD,CAAvC,EAA4CyE,EAAE,GAAGzE,CAAC,CAAC,CAAD,CAAlD,EAAuD0E,EAAE,GAAG1E,CAAC,CAAC,CAAD,CAA7D;AACAA,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOqE,EAAE,GAAGN,GAAL,GAAWQ,EAAE,GAAGP,GAAvB;AACAhE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOsE,EAAE,GAAGP,GAAL,GAAWS,EAAE,GAAGR,GAAvB;AACAhE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOqE,EAAE,GAAGJ,GAAL,GAAWM,EAAE,GAAGL,GAAvB;AACAlE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOsE,EAAE,GAAGL,GAAL,GAAWO,EAAE,GAAGN,GAAvB;AACAlE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOqE,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAGH,EAAf,GAAoBK,EAA3B;AACAzE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOsE,EAAE,GAAGH,EAAL,GAAUK,EAAE,GAAGJ,EAAf,GAAoBM,EAA3B;;AACAC,MAAAA,MAAM,GAAK,YAAW;AACpB,YAAIjE,CAAJ,EAAOC,GAAP,EAAYN,GAAZ,EAAiBO,OAAjB;AACAP,QAAAA,GAAG,GAAG,CAAC0D,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,GAAhB,EAAqBC,EAArB,EAAyBC,EAAzB,CAAN;AACAxD,QAAAA,OAAO,GAAG,EAAV;;AACA,aAAKF,CAAC,GAAG,CAAJ,EAAOC,GAAG,GAAGN,GAAG,CAACH,MAAtB,EAA8BQ,CAAC,GAAGC,GAAlC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1CH,UAAAA,CAAC,GAAGF,GAAG,CAACK,CAAD,CAAP;AACAE,UAAAA,OAAO,CAAChC,IAAR,CAAaX,MAAM,CAACsC,CAAD,CAAnB;AACD;;AACD,eAAOK,OAAP;AACD,OATS,EAAD,CASHC,IATG,CASE,GATF,CAAT;;AAUA,aAAO,KAAKhC,UAAL,CAAgB8F,MAAM,GAAG,KAAzB,CAAP;AACD,KAjNc;AAkNfC,IAAAA,SAAS,EAAE,UAAS5D,CAAT,EAAYC,CAAZ,EAAe;AACxB,aAAO,KAAK6C,SAAL,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B9C,CAA3B,EAA8BC,CAA9B,CAAP;AACD,KApNc;AAqNf4D,IAAAA,MAAM,EAAE,UAASC,KAAT,EAAgB3E,OAAhB,EAAyB;AAC/B,UAAI4E,GAAJ,EAASC,GAAT,EAAc3E,GAAd,EAAmB4E,GAAnB,EAAwBjE,CAAxB,EAA2BkE,EAA3B,EAA+BjE,CAA/B,EAAkCkE,EAAlC;;AACA,UAAIhF,OAAO,IAAI,IAAf,EAAqB;AACnBA,QAAAA,OAAO,GAAG,EAAV;AACD;;AACD6E,MAAAA,GAAG,GAAGF,KAAK,GAAG1G,IAAI,CAACgH,EAAb,GAAkB,GAAxB;AACAL,MAAAA,GAAG,GAAG3G,IAAI,CAAC2G,GAAL,CAASC,GAAT,CAAN;AACAC,MAAAA,GAAG,GAAG7G,IAAI,CAAC6G,GAAL,CAASD,GAAT,CAAN;AACAhE,MAAAA,CAAC,GAAGC,CAAC,GAAG,CAAR;;AACA,UAAId,OAAO,CAACkF,MAAR,IAAkB,IAAtB,EAA4B;AAC1BhF,QAAAA,GAAG,GAAGF,OAAO,CAACkF,MAAd,EAAsBrE,CAAC,GAAGX,GAAG,CAAC,CAAD,CAA7B,EAAkCY,CAAC,GAAGZ,GAAG,CAAC,CAAD,CAAzC;AACA6E,QAAAA,EAAE,GAAGlE,CAAC,GAAG+D,GAAJ,GAAU9D,CAAC,GAAGgE,GAAnB;AACAE,QAAAA,EAAE,GAAGnE,CAAC,GAAGiE,GAAJ,GAAUhE,CAAC,GAAG8D,GAAnB;AACA/D,QAAAA,CAAC,IAAIkE,EAAL;AACAjE,QAAAA,CAAC,IAAIkE,EAAL;AACD;;AACD,aAAO,KAAKrB,SAAL,CAAeiB,GAAf,EAAoBE,GAApB,EAAyB,CAACA,GAA1B,EAA+BF,GAA/B,EAAoC/D,CAApC,EAAuCC,CAAvC,CAAP;AACD,KAtOc;AAuOfqE,IAAAA,KAAK,EAAE,UAASC,OAAT,EAAkBC,OAAlB,EAA2BrF,OAA3B,EAAoC;AACzC,UAAIE,GAAJ,EAASW,CAAT,EAAYC,CAAZ;;AACA,UAAIuE,OAAO,IAAI,IAAf,EAAqB;AACnBA,QAAAA,OAAO,GAAGD,OAAV;AACD;;AACD,UAAIpF,OAAO,IAAI,IAAf,EAAqB;AACnBA,QAAAA,OAAO,GAAG,EAAV;AACD;;AACD,UAAI2C,SAAS,CAAC5C,MAAV,KAAqB,CAAzB,EAA4B;AAC1BsF,QAAAA,OAAO,GAAGD,OAAV;AACApF,QAAAA,OAAO,GAAGqF,OAAV;AACD;;AACDxE,MAAAA,CAAC,GAAGC,CAAC,GAAG,CAAR;;AACA,UAAId,OAAO,CAACkF,MAAR,IAAkB,IAAtB,EAA4B;AAC1BhF,QAAAA,GAAG,GAAGF,OAAO,CAACkF,MAAd,EAAsBrE,CAAC,GAAGX,GAAG,CAAC,CAAD,CAA7B,EAAkCY,CAAC,GAAGZ,GAAG,CAAC,CAAD,CAAzC;AACAW,QAAAA,CAAC,IAAIuE,OAAO,GAAGvE,CAAf;AACAC,QAAAA,CAAC,IAAIuE,OAAO,GAAGvE,CAAf;AACD;;AACD,aAAO,KAAK6C,SAAL,CAAeyB,OAAf,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BC,OAA9B,EAAuCxE,CAAvC,EAA0CC,CAA1C,CAAP;AACD;AA1Pc,GAAjB;AA6PD,CAvQD,EAuQG8B,IAvQH,CAuQQ,IAvQR","sourcesContent":["// Generated by CoffeeScript 1.12.1\n(function() {\n  var KAPPA, SVGPath, number,\n    slice = [].slice;\n\n  SVGPath = require('../path');\n\n  number = require('../object').number;\n\n  KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\n  module.exports = {\n    initVector: function() {\n      this._ctm = [1, 0, 0, 1, 0, 0];\n      return this._ctmStack = [];\n    },\n    save: function() {\n      this._ctmStack.push(this._ctm.slice());\n      return this.addContent('q');\n    },\n    restore: function() {\n      this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0];\n      return this.addContent('Q');\n    },\n    closePath: function() {\n      return this.addContent('h');\n    },\n    lineWidth: function(w) {\n      return this.addContent((number(w)) + \" w\");\n    },\n    _CAP_STYLES: {\n      BUTT: 0,\n      ROUND: 1,\n      SQUARE: 2\n    },\n    lineCap: function(c) {\n      if (typeof c === 'string') {\n        c = this._CAP_STYLES[c.toUpperCase()];\n      }\n      return this.addContent(c + \" J\");\n    },\n    _JOIN_STYLES: {\n      MITER: 0,\n      ROUND: 1,\n      BEVEL: 2\n    },\n    lineJoin: function(j) {\n      if (typeof j === 'string') {\n        j = this._JOIN_STYLES[j.toUpperCase()];\n      }\n      return this.addContent(j + \" j\");\n    },\n    miterLimit: function(m) {\n      return this.addContent((number(m)) + \" M\");\n    },\n    dash: function(length, options) {\n      var phase, ref, space, v;\n      if (options == null) {\n        options = {};\n      }\n      if (length == null) {\n        return this;\n      }\n      if (Array.isArray(length)) {\n        length = ((function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = length.length; i < len; i++) {\n            v = length[i];\n            results.push(number(v));\n          }\n          return results;\n        })()).join(' ');\n        phase = options.phase || 0;\n        return this.addContent(\"[\" + length + \"] \" + (number(phase)) + \" d\");\n      } else {\n        space = (ref = options.space) != null ? ref : length;\n        phase = options.phase || 0;\n        return this.addContent(\"[\" + (number(length)) + \" \" + (number(space)) + \"] \" + (number(phase)) + \" d\");\n      }\n    },\n    undash: function() {\n      return this.addContent(\"[] 0 d\");\n    },\n    moveTo: function(x, y) {\n      return this.addContent((number(x)) + \" \" + (number(y)) + \" m\");\n    },\n    lineTo: function(x, y) {\n      return this.addContent((number(x)) + \" \" + (number(y)) + \" l\");\n    },\n    bezierCurveTo: function(cp1x, cp1y, cp2x, cp2y, x, y) {\n      return this.addContent((number(cp1x)) + \" \" + (number(cp1y)) + \" \" + (number(cp2x)) + \" \" + (number(cp2y)) + \" \" + (number(x)) + \" \" + (number(y)) + \" c\");\n    },\n    quadraticCurveTo: function(cpx, cpy, x, y) {\n      return this.addContent((number(cpx)) + \" \" + (number(cpy)) + \" \" + (number(x)) + \" \" + (number(y)) + \" v\");\n    },\n    rect: function(x, y, w, h) {\n      return this.addContent((number(x)) + \" \" + (number(y)) + \" \" + (number(w)) + \" \" + (number(h)) + \" re\");\n    },\n    roundedRect: function(x, y, w, h, r) {\n      var c;\n      if (r == null) {\n        r = 0;\n      }\n      r = Math.min(r, 0.5 * w, 0.5 * h);\n      c = r * (1.0 - KAPPA);\n      this.moveTo(x + r, y);\n      this.lineTo(x + w - r, y);\n      this.bezierCurveTo(x + w - c, y, x + w, y + c, x + w, y + r);\n      this.lineTo(x + w, y + h - r);\n      this.bezierCurveTo(x + w, y + h - c, x + w - c, y + h, x + w - r, y + h);\n      this.lineTo(x + r, y + h);\n      this.bezierCurveTo(x + c, y + h, x, y + h - c, x, y + h - r);\n      this.lineTo(x, y + r);\n      this.bezierCurveTo(x, y + c, x + c, y, x + r, y);\n      return this.closePath();\n    },\n    ellipse: function(x, y, r1, r2) {\n      var ox, oy, xe, xm, ye, ym;\n      if (r2 == null) {\n        r2 = r1;\n      }\n      x -= r1;\n      y -= r2;\n      ox = r1 * KAPPA;\n      oy = r2 * KAPPA;\n      xe = x + r1 * 2;\n      ye = y + r2 * 2;\n      xm = x + r1;\n      ym = y + r2;\n      this.moveTo(x, ym);\n      this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n      this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n      this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n      this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n      return this.closePath();\n    },\n    circle: function(x, y, radius) {\n      return this.ellipse(x, y, radius);\n    },\n    polygon: function() {\n      var i, len, point, points;\n      points = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      this.moveTo.apply(this, points.shift());\n      for (i = 0, len = points.length; i < len; i++) {\n        point = points[i];\n        this.lineTo.apply(this, point);\n      }\n      return this.closePath();\n    },\n    path: function(path) {\n      SVGPath.apply(this, path);\n      return this;\n    },\n    _windingRule: function(rule) {\n      if (/even-?odd/.test(rule)) {\n        return '*';\n      }\n      return '';\n    },\n    fill: function(color, rule) {\n      if (/(even-?odd)|(non-?zero)/.test(color)) {\n        rule = color;\n        color = null;\n      }\n      if (color) {\n        this.fillColor(color);\n      }\n      return this.addContent('f' + this._windingRule(rule));\n    },\n    stroke: function(color) {\n      if (color) {\n        this.strokeColor(color);\n      }\n      return this.addContent('S');\n    },\n    fillAndStroke: function(fillColor, strokeColor, rule) {\n      var isFillRule;\n      if (strokeColor == null) {\n        strokeColor = fillColor;\n      }\n      isFillRule = /(even-?odd)|(non-?zero)/;\n      if (isFillRule.test(fillColor)) {\n        rule = fillColor;\n        fillColor = null;\n      }\n      if (isFillRule.test(strokeColor)) {\n        rule = strokeColor;\n        strokeColor = fillColor;\n      }\n      if (fillColor) {\n        this.fillColor(fillColor);\n        this.strokeColor(strokeColor);\n      }\n      return this.addContent('B' + this._windingRule(rule));\n    },\n    clip: function(rule) {\n      return this.addContent('W' + this._windingRule(rule) + ' n');\n    },\n    transform: function(m11, m12, m21, m22, dx, dy) {\n      var m, m0, m1, m2, m3, m4, m5, v, values;\n      m = this._ctm;\n      m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], m4 = m[4], m5 = m[5];\n      m[0] = m0 * m11 + m2 * m12;\n      m[1] = m1 * m11 + m3 * m12;\n      m[2] = m0 * m21 + m2 * m22;\n      m[3] = m1 * m21 + m3 * m22;\n      m[4] = m0 * dx + m2 * dy + m4;\n      m[5] = m1 * dx + m3 * dy + m5;\n      values = ((function() {\n        var i, len, ref, results;\n        ref = [m11, m12, m21, m22, dx, dy];\n        results = [];\n        for (i = 0, len = ref.length; i < len; i++) {\n          v = ref[i];\n          results.push(number(v));\n        }\n        return results;\n      })()).join(' ');\n      return this.addContent(values + \" cm\");\n    },\n    translate: function(x, y) {\n      return this.transform(1, 0, 0, 1, x, y);\n    },\n    rotate: function(angle, options) {\n      var cos, rad, ref, sin, x, x1, y, y1;\n      if (options == null) {\n        options = {};\n      }\n      rad = angle * Math.PI / 180;\n      cos = Math.cos(rad);\n      sin = Math.sin(rad);\n      x = y = 0;\n      if (options.origin != null) {\n        ref = options.origin, x = ref[0], y = ref[1];\n        x1 = x * cos - y * sin;\n        y1 = x * sin + y * cos;\n        x -= x1;\n        y -= y1;\n      }\n      return this.transform(cos, sin, -sin, cos, x, y);\n    },\n    scale: function(xFactor, yFactor, options) {\n      var ref, x, y;\n      if (yFactor == null) {\n        yFactor = xFactor;\n      }\n      if (options == null) {\n        options = {};\n      }\n      if (arguments.length === 2) {\n        yFactor = xFactor;\n        options = yFactor;\n      }\n      x = y = 0;\n      if (options.origin != null) {\n        ref = options.origin, x = ref[0], y = ref[1];\n        x -= xFactor * x;\n        y -= yFactor * y;\n      }\n      return this.transform(xFactor, 0, 0, yFactor, x, y);\n    }\n  };\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}