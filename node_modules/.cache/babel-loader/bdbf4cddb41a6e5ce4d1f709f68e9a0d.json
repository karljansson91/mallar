{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _matchPercent = _interopRequireDefault(require(\"../utils/matchPercent\"));\n/**\n *\n * @param {Object} container width and height\n * @param {String | Number} value border radius value\n * @returns {Number} fixed border radius value\n */\n\n\nconst resolveRadius = container => value => {\n  const match = (0, _matchPercent.default)(value);\n  return match ? match.percent * Math.min(container.width, container.height) : value;\n};\n/**\n * Transforms percent border radius into fixed values\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nconst resolvePercentRadius = node => R.evolve({\n  children: R.map(resolvePercentRadius),\n  style: R.evolve({\n    borderTopLeftRadius: resolveRadius(node.box),\n    borderTopRightRadius: resolveRadius(node.box),\n    borderBottomRightRadius: resolveRadius(node.box),\n    borderBottomLeftRadius: resolveRadius(node.box)\n  })\n})(node);\n\nvar _default = resolvePercentRadius;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/layout/lib/steps/resolvePercentRadius.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_matchPercent","resolveRadius","container","value","match","percent","Math","min","width","height","resolvePercentRadius","node","evolve","children","map","style","borderTopLeftRadius","box","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGJ,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,aAAa,GAAGP,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAA1C;AAEA;;;;;;;;AAMA,MAAMO,aAAa,GAAGC,SAAS,IAAIC,KAAK,IAAI;AAC1C,QAAMC,KAAK,GAAG,CAAC,GAAGJ,aAAa,CAACF,OAAlB,EAA2BK,KAA3B,CAAd;AACA,SAAOC,KAAK,GAAGA,KAAK,CAACC,OAAN,GAAgBC,IAAI,CAACC,GAAL,CAASL,SAAS,CAACM,KAAnB,EAA0BN,SAAS,CAACO,MAApC,CAAnB,GAAiEN,KAA7E;AACD,CAHD;AAIA;;;;;;;;AAQA,MAAMO,oBAAoB,GAAGC,IAAI,IAAIZ,CAAC,CAACa,MAAF,CAAS;AAC5CC,EAAAA,QAAQ,EAAEd,CAAC,CAACe,GAAF,CAAMJ,oBAAN,CADkC;AAE5CK,EAAAA,KAAK,EAAEhB,CAAC,CAACa,MAAF,CAAS;AACdI,IAAAA,mBAAmB,EAAEf,aAAa,CAACU,IAAI,CAACM,GAAN,CADpB;AAEdC,IAAAA,oBAAoB,EAAEjB,aAAa,CAACU,IAAI,CAACM,GAAN,CAFrB;AAGdE,IAAAA,uBAAuB,EAAElB,aAAa,CAACU,IAAI,CAACM,GAAN,CAHxB;AAIdG,IAAAA,sBAAsB,EAAEnB,aAAa,CAACU,IAAI,CAACM,GAAN;AAJvB,GAAT;AAFqC,CAAT,EAQlCN,IARkC,CAArC;;AAUA,IAAIU,QAAQ,GAAGX,oBAAf;AACAd,OAAO,CAACE,OAAR,GAAkBuB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _matchPercent = _interopRequireDefault(require(\"../utils/matchPercent\"));\n\n/**\n *\n * @param {Object} container width and height\n * @param {String | Number} value border radius value\n * @returns {Number} fixed border radius value\n */\nconst resolveRadius = container => value => {\n  const match = (0, _matchPercent.default)(value);\n  return match ? match.percent * Math.min(container.width, container.height) : value;\n};\n/**\n * Transforms percent border radius into fixed values\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nconst resolvePercentRadius = node => R.evolve({\n  children: R.map(resolvePercentRadius),\n  style: R.evolve({\n    borderTopLeftRadius: resolveRadius(node.box),\n    borderTopRightRadius: resolveRadius(node.box),\n    borderBottomRightRadius: resolveRadius(node.box),\n    borderBottomLeftRadius: resolveRadius(node.box)\n  })\n})(node);\n\nvar _default = resolvePercentRadius;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}