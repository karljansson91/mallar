{"ast":null,"code":"var _jsxFileName = \"/Users/kaja/Code/mallar/app/src/routes/Login.js\";\nimport React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport loginImg from 'assets/jpg/signin-image.jpg';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Link, useHistory } from 'react-router-dom';\nimport { LoginDispatchContext } from 'context/login';\nimport { loginUser } from 'api';\nconst SubmitButton = styled(Button)`\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    padding: 10px;\n    width: 100%;\n    margin-bottom: 12px;\n`;\nconst LoginForm = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 35%;\n    height: 70%;\n    background-color: white;\n`;\nconst Card = styled.div`\n    width: 80%;\n    height: 70%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direct: row;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 5px 10px 18px #888888;\n`;\nconst ImgWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 45%;\n    background-color: white;\n`;\nconst LoginImg = styled.img`\n    width: 75%;\n`;\nconst Wrapper = styled.div`\n    display: flex;\n    background-color: #D3D3D3;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n`;\nconst Title = styled.h1`\n    margin-bottom: 16px;\n`;\nexport default (() => {\n  const [isInvalid, setIsInvalid] = useState(false);\n  const dispatch = useContext(LoginDispatchContext);\n  const history = useHistory();\n\n  const submit = async event => {\n    event.preventDefault();\n    const email = event.currentTarget.email.value;\n    const password = event.currentTarget.password.value;\n    const {\n      status,\n      response\n    } = await loginUser(email, password);\n\n    if (status == 200) {\n      const data = await response.json();\n      dispatch({\n        type: 'update',\n        payload: {\n          email: email,\n          token: data.token\n        }\n      });\n      history.push('/cv');\n      return;\n    }\n\n    setIsInvalid(true);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ImgWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LoginImg, {\n    src: loginImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(LoginForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Logga in\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: () => setIsInvalid(false),\n    isInvalid: isInvalid,\n    type: \"email\",\n    placeholder: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: () => setIsInvalid(false),\n    isInvalid: isInvalid,\n    type: \"password\",\n    placeholder: \"l\\xF6senord\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, \"Email eller l\\xF6senord fel.\")), /*#__PURE__*/React.createElement(SubmitButton, {\n    variant: \"light\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"Logga in\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Skapa ett nytt konto\"))));\n});","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/src/routes/Login.js"],"names":["React","useState","useContext","styled","loginImg","Form","Button","Link","useHistory","LoginDispatchContext","loginUser","SubmitButton","LoginForm","div","Card","ImgWrapper","LoginImg","img","Wrapper","Title","h1","isInvalid","setIsInvalid","dispatch","history","submit","event","preventDefault","email","currentTarget","value","password","status","response","data","json","type","payload","token","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport loginImg from 'assets/jpg/signin-image.jpg'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Link, useHistory } from 'react-router-dom';\nimport { LoginDispatchContext } from 'context/login'\nimport { loginUser } from 'api'\n\n\nconst SubmitButton = styled(Button)`\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    padding: 10px;\n    width: 100%;\n    margin-bottom: 12px;\n`\n\n\nconst LoginForm = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 35%;\n    height: 70%;\n    background-color: white;\n`\n\nconst Card = styled.div`\n    width: 80%;\n    height: 70%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direct: row;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 5px 10px 18px #888888;\n`\n\nconst ImgWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 45%;\n    background-color: white;\n`\n\nconst LoginImg = styled.img`\n    width: 75%;\n`\n\nconst Wrapper = styled.div`\n    display: flex;\n    background-color: #D3D3D3;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n`\n\nconst Title = styled.h1`\n    margin-bottom: 16px;\n`\n\n\nexport default () => {\n    const [isInvalid, setIsInvalid] = useState(false) \n    const dispatch = useContext(LoginDispatchContext)\n    const history = useHistory()\n    const submit = async (event) =>{\n        event.preventDefault()\n        \n        const email = event.currentTarget.email.value\n        const password = event.currentTarget.password.value\n        const {status, response} = await loginUser(email, password)\n      \n        if (status==200){\n            const data = await response.json()\n            dispatch({\n                type: 'update',\n                payload: {\n                    email: email,\n                    token: data.token\n                }\n            })\n            history.push('/cv')\n            return\n        }\n        setIsInvalid(true)\n\n        \n\n    }\n    return (\n        <Wrapper>\n            <Card>\n                <ImgWrapper>\n                    <LoginImg src={loginImg}/>\n                </ImgWrapper>\n                <LoginForm>\n                    <Title>Logga in</Title>\n                    <Form onSubmit={submit}>\n                        <Form.Group controlId=\"email\">\n                            <Form.Control onChange={() => setIsInvalid(false)} isInvalid={isInvalid} type=\"email\" placeholder=\"email\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"password\">\n                            <Form.Control onChange={() => setIsInvalid(false)} isInvalid={isInvalid} type=\"password\" placeholder=\"lösenord\"/>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Email eller lösenord fel.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <SubmitButton variant=\"light\" type=\"submit\">\n                            {\"Logga in\"}\n                        </SubmitButton>\n                    </Form>\n                    <Link to={\"/register\"}>Skapa ett nytt konto</Link>\n                </LoginForm>\n            </Card>\n        </Wrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}