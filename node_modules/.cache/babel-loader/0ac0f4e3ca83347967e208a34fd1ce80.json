{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nconst availableMethods = ['dash', 'clip', 'save', 'path', 'fill', 'font', 'text', 'rect', 'scale', 'moveTo', 'lineTo', 'stroke', 'rotate', 'circle', 'lineCap', 'opacity', 'ellipse', 'polygon', 'restore', 'lineJoin', 'fontSize', 'fillColor', 'lineWidth', 'translate', 'miterLimit', 'strokeColor', 'fillOpacity', 'roundedRect', 'strokeOpacity', 'bezierCurveTo', 'quadraticCurveTo', 'linearGradient', 'radialGradient'];\n\nconst painter = ctx => {\n  const p = availableMethods.reduce((acc, prop) => ({ ...acc,\n    [prop]: (...args) => {\n      ctx[prop](...args);\n      return p;\n    }\n  }), {});\n  return p;\n};\n\nconst defaultsZero = R.propOr(0);\n\nconst renderCanvas = (ctx, node) => {\n  const {\n    top,\n    left,\n    width,\n    height\n  } = node.box;\n  const paddingTop = defaultsZero('paddingTop', node.box);\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingRight = defaultsZero('paddingRight', node.box);\n  const paddingBottom = defaultsZero('paddingBottom', node.box);\n  const availableWidth = width - paddingLeft - paddingRight;\n  const availableHeight = height - paddingTop - paddingBottom;\n\n  if (!availableWidth || !availableHeight) {\n    console.warn('Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n  }\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n  return node;\n};\n\nvar _default = R.curryN(2, renderCanvas);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/render/lib/primitives/renderCanvas.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","R","availableMethods","painter","ctx","p","reduce","acc","prop","args","defaultsZero","propOr","renderCanvas","node","top","left","width","height","box","paddingTop","paddingLeft","paddingRight","paddingBottom","availableWidth","availableHeight","console","warn","save","translate","props","paint","restore","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,MAAMK,gBAAgB,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,OAAjE,EAA0E,QAA1E,EAAoF,QAApF,EAA8F,QAA9F,EAAwG,QAAxG,EAAkH,QAAlH,EAA4H,SAA5H,EAAuI,SAAvI,EAAkJ,SAAlJ,EAA6J,SAA7J,EAAwK,SAAxK,EAAmL,UAAnL,EAA+L,UAA/L,EAA2M,WAA3M,EAAwN,WAAxN,EAAqO,WAArO,EAAkP,YAAlP,EAAgQ,aAAhQ,EAA+Q,aAA/Q,EAA8R,aAA9R,EAA6S,eAA7S,EAA8T,eAA9T,EAA+U,kBAA/U,EAAmW,gBAAnW,EAAqX,gBAArX,CAAzB;;AAEA,MAAMC,OAAO,GAAGC,GAAG,IAAI;AACrB,QAAMC,CAAC,GAAGH,gBAAgB,CAACI,MAAjB,CAAwB,CAACC,GAAD,EAAMC,IAAN,MAAgB,EAAE,GAAGD,GAAL;AAChD,KAACC,IAAD,GAAQ,CAAC,GAAGC,IAAJ,KAAa;AACnBL,MAAAA,GAAG,CAACI,IAAD,CAAH,CAAU,GAAGC,IAAb;AACA,aAAOJ,CAAP;AACD;AAJ+C,GAAhB,CAAxB,EAKN,EALM,CAAV;AAMA,SAAOA,CAAP;AACD,CARD;;AAUA,MAAMK,YAAY,GAAGT,CAAC,CAACU,MAAF,CAAS,CAAT,CAArB;;AAEA,MAAMC,YAAY,GAAG,CAACR,GAAD,EAAMS,IAAN,KAAe;AAClC,QAAM;AACJC,IAAAA,GADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFJ,IAAI,CAACK,GALT;AAMA,QAAMC,UAAU,GAAGT,YAAY,CAAC,YAAD,EAAeG,IAAI,CAACK,GAApB,CAA/B;AACA,QAAME,WAAW,GAAGV,YAAY,CAAC,aAAD,EAAgBG,IAAI,CAACK,GAArB,CAAhC;AACA,QAAMG,YAAY,GAAGX,YAAY,CAAC,cAAD,EAAiBG,IAAI,CAACK,GAAtB,CAAjC;AACA,QAAMI,aAAa,GAAGZ,YAAY,CAAC,eAAD,EAAkBG,IAAI,CAACK,GAAvB,CAAlC;AACA,QAAMK,cAAc,GAAGP,KAAK,GAAGI,WAAR,GAAsBC,YAA7C;AACA,QAAMG,eAAe,GAAGP,MAAM,GAAGE,UAAT,GAAsBG,aAA9C;;AAEA,MAAI,CAACC,cAAD,IAAmB,CAACC,eAAxB,EAAyC;AACvCC,IAAAA,OAAO,CAACC,IAAR,CAAa,4HAAb;AACD;;AAEDtB,EAAAA,GAAG,CAACuB,IAAJ,GAAWC,SAAX,CAAqBb,IAAI,GAAGK,WAA5B,EAAyCN,GAAG,GAAGK,UAA/C;;AAEA,MAAIN,IAAI,CAACgB,KAAL,CAAWC,KAAf,EAAsB;AACpBjB,IAAAA,IAAI,CAACgB,KAAL,CAAWC,KAAX,CAAiB3B,OAAO,CAACC,GAAD,CAAxB,EAA+BmB,cAA/B,EAA+CC,eAA/C;AACD;;AAEDpB,EAAAA,GAAG,CAAC2B,OAAJ;AACA,SAAOlB,IAAP;AACD,CA1BD;;AA4BA,IAAImB,QAAQ,GAAG/B,CAAC,CAACgC,MAAF,CAAS,CAAT,EAAYrB,YAAZ,CAAf;;AAEAd,OAAO,CAACE,OAAR,GAAkBgC,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nconst availableMethods = ['dash', 'clip', 'save', 'path', 'fill', 'font', 'text', 'rect', 'scale', 'moveTo', 'lineTo', 'stroke', 'rotate', 'circle', 'lineCap', 'opacity', 'ellipse', 'polygon', 'restore', 'lineJoin', 'fontSize', 'fillColor', 'lineWidth', 'translate', 'miterLimit', 'strokeColor', 'fillOpacity', 'roundedRect', 'strokeOpacity', 'bezierCurveTo', 'quadraticCurveTo', 'linearGradient', 'radialGradient'];\n\nconst painter = ctx => {\n  const p = availableMethods.reduce((acc, prop) => ({ ...acc,\n    [prop]: (...args) => {\n      ctx[prop](...args);\n      return p;\n    }\n  }), {});\n  return p;\n};\n\nconst defaultsZero = R.propOr(0);\n\nconst renderCanvas = (ctx, node) => {\n  const {\n    top,\n    left,\n    width,\n    height\n  } = node.box;\n  const paddingTop = defaultsZero('paddingTop', node.box);\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingRight = defaultsZero('paddingRight', node.box);\n  const paddingBottom = defaultsZero('paddingBottom', node.box);\n  const availableWidth = width - paddingLeft - paddingRight;\n  const availableHeight = height - paddingTop - paddingBottom;\n\n  if (!availableWidth || !availableHeight) {\n    console.warn('Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n  }\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n  return node;\n};\n\nvar _default = R.curryN(2, renderCanvas);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}