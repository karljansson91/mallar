{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _image = _interopRequireDefault(require(\"@react-pdf/image\"));\n\nvar _getSource = _interopRequireDefault(require(\"./getSource\"));\n/* eslint-disable no-param-reassign */\n\n/**\n * Resolves async src if passed\n *\n * @param {string | Function} src\n * @returns {object} resolved src\n */\n\n\nconst resolveSrc = async src => typeof src === 'function' ? {\n  uri: await src()\n} : src;\n/**\n * Fetches image and append data to node\n * Ideally this fn should be immutable.\n *\n * @param {Object} node\n */\n\n\nconst fetchImage = async node => {\n  const src = (0, _getSource.default)(node);\n  const {\n    cache\n  } = node.props;\n\n  if (!src) {\n    console.warn(false, 'Image should receive either a \"src\" or \"source\" prop');\n    return;\n  }\n\n  try {\n    const source = await resolveSrc(src);\n    node.image = await (0, _image.default)(source, {\n      cache\n    });\n  } catch (e) {\n    node.image = {\n      width: 0,\n      height: 0\n    };\n    console.warn(e.message);\n  }\n};\n\nvar _default = fetchImage;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/layout/lib/image/fetchImage.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_image","_getSource","resolveSrc","src","uri","fetchImage","node","cache","props","console","warn","source","image","e","width","height","message","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGL,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAAnC;;AAEA,IAAIK,UAAU,GAAGN,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAvC;AAEA;;AAEA;;;;;;;;AAMA,MAAMM,UAAU,GAAG,MAAMC,GAAN,IAAa,OAAOA,GAAP,KAAe,UAAf,GAA4B;AAC1DC,EAAAA,GAAG,EAAE,MAAMD,GAAG;AAD4C,CAA5B,GAE5BA,GAFJ;AAGA;;;;;;;;AAQA,MAAME,UAAU,GAAG,MAAMC,IAAN,IAAc;AAC/B,QAAMH,GAAG,GAAG,CAAC,GAAGF,UAAU,CAACF,OAAf,EAAwBO,IAAxB,CAAZ;AACA,QAAM;AACJC,IAAAA;AADI,MAEFD,IAAI,CAACE,KAFT;;AAIA,MAAI,CAACL,GAAL,EAAU;AACRM,IAAAA,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoB,sDAApB;AACA;AACD;;AAED,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMT,UAAU,CAACC,GAAD,CAA/B;AACAG,IAAAA,IAAI,CAACM,KAAL,GAAa,MAAM,CAAC,GAAGZ,MAAM,CAACD,OAAX,EAAoBY,MAApB,EAA4B;AAC7CJ,MAAAA;AAD6C,KAA5B,CAAnB;AAGD,GALD,CAKE,OAAOM,CAAP,EAAU;AACVP,IAAAA,IAAI,CAACM,KAAL,GAAa;AACXE,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIAN,IAAAA,OAAO,CAACC,IAAR,CAAaG,CAAC,CAACG,OAAf;AACD;AACF,CAvBD;;AAyBA,IAAIC,QAAQ,GAAGZ,UAAf;AACAR,OAAO,CAACE,OAAR,GAAkBkB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _image = _interopRequireDefault(require(\"@react-pdf/image\"));\n\nvar _getSource = _interopRequireDefault(require(\"./getSource\"));\n\n/* eslint-disable no-param-reassign */\n\n/**\n * Resolves async src if passed\n *\n * @param {string | Function} src\n * @returns {object} resolved src\n */\nconst resolveSrc = async src => typeof src === 'function' ? {\n  uri: await src()\n} : src;\n/**\n * Fetches image and append data to node\n * Ideally this fn should be immutable.\n *\n * @param {Object} node\n */\n\n\nconst fetchImage = async node => {\n  const src = (0, _getSource.default)(node);\n  const {\n    cache\n  } = node.props;\n\n  if (!src) {\n    console.warn(false, 'Image should receive either a \"src\" or \"source\" prop');\n    return;\n  }\n\n  try {\n    const source = await resolveSrc(src);\n    node.image = await (0, _image.default)(source, {\n      cache\n    });\n  } catch (e) {\n    node.image = {\n      width: 0,\n      height: 0\n    };\n    console.warn(e.message);\n  }\n};\n\nvar _default = fetchImage;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}