{"ast":null,"code":"// Generated by CoffeeScript 1.12.1\n(function () {\n  var SVGPath;\n\n  SVGPath = function () {\n    var apply, arcToSegments, cx, cy, parameters, parse, px, py, runners, segmentToBezier, solveArc, sx, sy;\n\n    function SVGPath() {}\n\n    SVGPath.apply = function (doc, path) {\n      var commands;\n      commands = parse(path);\n      return apply(commands, doc);\n    };\n\n    parameters = {\n      A: 7,\n      a: 7,\n      C: 6,\n      c: 6,\n      H: 1,\n      h: 1,\n      L: 2,\n      l: 2,\n      M: 2,\n      m: 2,\n      Q: 4,\n      q: 4,\n      S: 4,\n      s: 4,\n      T: 2,\n      t: 2,\n      V: 1,\n      v: 1,\n      Z: 0,\n      z: 0\n    };\n\n    parse = function (path) {\n      var args, c, cmd, curArg, foundDecimal, j, len, params, ret;\n      ret = [];\n      args = [];\n      curArg = \"\";\n      foundDecimal = false;\n      params = 0;\n\n      for (j = 0, len = path.length; j < len; j++) {\n        c = path[j];\n\n        if (parameters[c] != null) {\n          params = parameters[c];\n\n          if (cmd) {\n            if (curArg.length > 0) {\n              args[args.length] = +curArg;\n            }\n\n            ret[ret.length] = {\n              cmd: cmd,\n              args: args\n            };\n            args = [];\n            curArg = \"\";\n            foundDecimal = false;\n          }\n\n          cmd = c;\n        } else if (c === \" \" || c === \",\" || c === \"-\" && curArg.length > 0 && curArg[curArg.length - 1] !== 'e' || c === \".\" && foundDecimal) {\n          if (curArg.length === 0) {\n            continue;\n          }\n\n          if (args.length === params) {\n            ret[ret.length] = {\n              cmd: cmd,\n              args: args\n            };\n            args = [+curArg];\n\n            if (cmd === \"M\") {\n              cmd = \"L\";\n            }\n\n            if (cmd === \"m\") {\n              cmd = \"l\";\n            }\n          } else {\n            args[args.length] = +curArg;\n          }\n\n          foundDecimal = c === \".\";\n          curArg = c === '-' || c === '.' ? c : '';\n        } else {\n          curArg += c;\n\n          if (c === '.') {\n            foundDecimal = true;\n          }\n        }\n      }\n\n      if (curArg.length > 0) {\n        if (args.length === params) {\n          ret[ret.length] = {\n            cmd: cmd,\n            args: args\n          };\n          args = [+curArg];\n\n          if (cmd === \"M\") {\n            cmd = \"L\";\n          }\n\n          if (cmd === \"m\") {\n            cmd = \"l\";\n          }\n        } else {\n          args[args.length] = +curArg;\n        }\n      }\n\n      ret[ret.length] = {\n        cmd: cmd,\n        args: args\n      };\n      return ret;\n    };\n\n    cx = cy = px = py = sx = sy = 0;\n\n    apply = function (commands, doc) {\n      var c, i, j, len, name;\n      cx = cy = px = py = sx = sy = 0;\n\n      for (i = j = 0, len = commands.length; j < len; i = ++j) {\n        c = commands[i];\n\n        if (typeof runners[name = c.cmd] === \"function\") {\n          runners[name](doc, c.args);\n        }\n      }\n\n      return cx = cy = px = py = 0;\n    };\n\n    runners = {\n      M: function (doc, a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return doc.moveTo(cx, cy);\n      },\n      m: function (doc, a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return doc.moveTo(cx, cy);\n      },\n      C: function (doc, a) {\n        cx = a[4];\n        cy = a[5];\n        px = a[2];\n        py = a[3];\n        return doc.bezierCurveTo.apply(doc, a);\n      },\n      c: function (doc, a) {\n        doc.bezierCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n        px = cx + a[2];\n        py = cy + a[3];\n        cx += a[4];\n        return cy += a[5];\n      },\n      S: function (doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        }\n\n        doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        return cy = a[3];\n      },\n      s: function (doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        }\n\n        doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        return cy += a[3];\n      },\n      Q: function (doc, a) {\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        cy = a[3];\n        return doc.quadraticCurveTo(a[0], a[1], cx, cy);\n      },\n      q: function (doc, a) {\n        doc.quadraticCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        return cy += a[3];\n      },\n      T: function (doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        } else {\n          px = cx - (px - cx);\n          py = cy - (py - cy);\n        }\n\n        doc.quadraticCurveTo(px, py, a[0], a[1]);\n        px = cx - (px - cx);\n        py = cy - (py - cy);\n        cx = a[0];\n        return cy = a[1];\n      },\n      t: function (doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        } else {\n          px = cx - (px - cx);\n          py = cy - (py - cy);\n        }\n\n        doc.quadraticCurveTo(px, py, cx + a[0], cy + a[1]);\n        cx += a[0];\n        return cy += a[1];\n      },\n      A: function (doc, a) {\n        solveArc(doc, cx, cy, a);\n        cx = a[5];\n        return cy = a[6];\n      },\n      a: function (doc, a) {\n        a[5] += cx;\n        a[6] += cy;\n        solveArc(doc, cx, cy, a);\n        cx = a[5];\n        return cy = a[6];\n      },\n      L: function (doc, a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      l: function (doc, a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      H: function (doc, a) {\n        cx = a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      h: function (doc, a) {\n        cx += a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      V: function (doc, a) {\n        cy = a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      v: function (doc, a) {\n        cy += a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      Z: function (doc) {\n        doc.closePath();\n        cx = sx;\n        return cy = sy;\n      },\n      z: function (doc) {\n        doc.closePath();\n        cx = sx;\n        return cy = sy;\n      }\n    };\n\n    solveArc = function (doc, x, y, coords) {\n      var bez, ex, ey, j, large, len, results, rot, rx, ry, seg, segs, sweep;\n      rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], ex = coords[5], ey = coords[6];\n      segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n      results = [];\n\n      for (j = 0, len = segs.length; j < len; j++) {\n        seg = segs[j];\n        bez = segmentToBezier.apply(null, seg);\n        results.push(doc.bezierCurveTo.apply(doc, bez));\n      }\n\n      return results;\n    };\n\n    arcToSegments = function (x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n      var a00, a01, a10, a11, cos_th, d, i, j, pl, ref, result, segments, sfactor, sfactor_sq, sin_th, th, th0, th1, th2, th3, th_arc, x0, x1, xc, y0, y1, yc;\n      th = rotateX * (Math.PI / 180);\n      sin_th = Math.sin(th);\n      cos_th = Math.cos(th);\n      rx = Math.abs(rx);\n      ry = Math.abs(ry);\n      px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n      py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n      pl = px * px / (rx * rx) + py * py / (ry * ry);\n\n      if (pl > 1) {\n        pl = Math.sqrt(pl);\n        rx *= pl;\n        ry *= pl;\n      }\n\n      a00 = cos_th / rx;\n      a01 = sin_th / rx;\n      a10 = -sin_th / ry;\n      a11 = cos_th / ry;\n      x0 = a00 * ox + a01 * oy;\n      y0 = a10 * ox + a11 * oy;\n      x1 = a00 * x + a01 * y;\n      y1 = a10 * x + a11 * y;\n      d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n      sfactor_sq = 1 / d - 0.25;\n\n      if (sfactor_sq < 0) {\n        sfactor_sq = 0;\n      }\n\n      sfactor = Math.sqrt(sfactor_sq);\n\n      if (sweep === large) {\n        sfactor = -sfactor;\n      }\n\n      xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n      yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n      th0 = Math.atan2(y0 - yc, x0 - xc);\n      th1 = Math.atan2(y1 - yc, x1 - xc);\n      th_arc = th1 - th0;\n\n      if (th_arc < 0 && sweep === 1) {\n        th_arc += 2 * Math.PI;\n      } else if (th_arc > 0 && sweep === 0) {\n        th_arc -= 2 * Math.PI;\n      }\n\n      segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n      result = [];\n\n      for (i = j = 0, ref = segments; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        th2 = th0 + i * th_arc / segments;\n        th3 = th0 + (i + 1) * th_arc / segments;\n        result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n      }\n\n      return result;\n    };\n\n    segmentToBezier = function (cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n      var a00, a01, a10, a11, t, th_half, x1, x2, x3, y1, y2, y3;\n      a00 = cos_th * rx;\n      a01 = -sin_th * ry;\n      a10 = sin_th * rx;\n      a11 = cos_th * ry;\n      th_half = 0.5 * (th1 - th0);\n      t = 8 / 3 * Math.sin(th_half * 0.5) * Math.sin(th_half * 0.5) / Math.sin(th_half);\n      x1 = cx + Math.cos(th0) - t * Math.sin(th0);\n      y1 = cy + Math.sin(th0) + t * Math.cos(th0);\n      x3 = cx + Math.cos(th1);\n      y3 = cy + Math.sin(th1);\n      x2 = x3 + t * Math.sin(th1);\n      y2 = y3 - t * Math.cos(th1);\n      return [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];\n    };\n\n    return SVGPath;\n  }();\n\n  module.exports = SVGPath;\n}).call(this);","map":{"version":3,"sources":["/Users/kaja/Code/mallar/node_modules/pdfkit/js/path.js"],"names":["SVGPath","apply","arcToSegments","cx","cy","parameters","parse","px","py","runners","segmentToBezier","solveArc","sx","sy","doc","path","commands","A","a","C","c","H","h","L","l","M","m","Q","q","S","s","T","t","V","v","Z","z","args","cmd","curArg","foundDecimal","j","len","params","ret","length","i","name","moveTo","bezierCurveTo","quadraticCurveTo","lineTo","closePath","x","y","coords","bez","ex","ey","large","results","rot","rx","ry","seg","segs","sweep","push","rotateX","ox","oy","a00","a01","a10","a11","cos_th","d","pl","ref","result","segments","sfactor","sfactor_sq","sin_th","th","th0","th1","th2","th3","th_arc","x0","x1","xc","y0","y1","yc","Math","PI","sin","cos","abs","sqrt","atan2","ceil","th_half","x2","x3","y2","y3","module","exports","call"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.1\n(function() {\n  var SVGPath;\n\n  SVGPath = (function() {\n    var apply, arcToSegments, cx, cy, parameters, parse, px, py, runners, segmentToBezier, solveArc, sx, sy;\n\n    function SVGPath() {}\n\n    SVGPath.apply = function(doc, path) {\n      var commands;\n      commands = parse(path);\n      return apply(commands, doc);\n    };\n\n    parameters = {\n      A: 7,\n      a: 7,\n      C: 6,\n      c: 6,\n      H: 1,\n      h: 1,\n      L: 2,\n      l: 2,\n      M: 2,\n      m: 2,\n      Q: 4,\n      q: 4,\n      S: 4,\n      s: 4,\n      T: 2,\n      t: 2,\n      V: 1,\n      v: 1,\n      Z: 0,\n      z: 0\n    };\n\n    parse = function(path) {\n      var args, c, cmd, curArg, foundDecimal, j, len, params, ret;\n      ret = [];\n      args = [];\n      curArg = \"\";\n      foundDecimal = false;\n      params = 0;\n      for (j = 0, len = path.length; j < len; j++) {\n        c = path[j];\n        if (parameters[c] != null) {\n          params = parameters[c];\n          if (cmd) {\n            if (curArg.length > 0) {\n              args[args.length] = +curArg;\n            }\n            ret[ret.length] = {\n              cmd: cmd,\n              args: args\n            };\n            args = [];\n            curArg = \"\";\n            foundDecimal = false;\n          }\n          cmd = c;\n        } else if ((c === \" \" || c === \",\") || (c === \"-\" && curArg.length > 0 && curArg[curArg.length - 1] !== 'e') || (c === \".\" && foundDecimal)) {\n          if (curArg.length === 0) {\n            continue;\n          }\n          if (args.length === params) {\n            ret[ret.length] = {\n              cmd: cmd,\n              args: args\n            };\n            args = [+curArg];\n            if (cmd === \"M\") {\n              cmd = \"L\";\n            }\n            if (cmd === \"m\") {\n              cmd = \"l\";\n            }\n          } else {\n            args[args.length] = +curArg;\n          }\n          foundDecimal = c === \".\";\n          curArg = c === '-' || c === '.' ? c : '';\n        } else {\n          curArg += c;\n          if (c === '.') {\n            foundDecimal = true;\n          }\n        }\n      }\n      if (curArg.length > 0) {\n        if (args.length === params) {\n          ret[ret.length] = {\n            cmd: cmd,\n            args: args\n          };\n          args = [+curArg];\n          if (cmd === \"M\") {\n            cmd = \"L\";\n          }\n          if (cmd === \"m\") {\n            cmd = \"l\";\n          }\n        } else {\n          args[args.length] = +curArg;\n        }\n      }\n      ret[ret.length] = {\n        cmd: cmd,\n        args: args\n      };\n      return ret;\n    };\n\n    cx = cy = px = py = sx = sy = 0;\n\n    apply = function(commands, doc) {\n      var c, i, j, len, name;\n      cx = cy = px = py = sx = sy = 0;\n      for (i = j = 0, len = commands.length; j < len; i = ++j) {\n        c = commands[i];\n        if (typeof runners[name = c.cmd] === \"function\") {\n          runners[name](doc, c.args);\n        }\n      }\n      return cx = cy = px = py = 0;\n    };\n\n    runners = {\n      M: function(doc, a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return doc.moveTo(cx, cy);\n      },\n      m: function(doc, a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return doc.moveTo(cx, cy);\n      },\n      C: function(doc, a) {\n        cx = a[4];\n        cy = a[5];\n        px = a[2];\n        py = a[3];\n        return doc.bezierCurveTo.apply(doc, a);\n      },\n      c: function(doc, a) {\n        doc.bezierCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n        px = cx + a[2];\n        py = cy + a[3];\n        cx += a[4];\n        return cy += a[5];\n      },\n      S: function(doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        }\n        doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        return cy = a[3];\n      },\n      s: function(doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        }\n        doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        return cy += a[3];\n      },\n      Q: function(doc, a) {\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        cy = a[3];\n        return doc.quadraticCurveTo(a[0], a[1], cx, cy);\n      },\n      q: function(doc, a) {\n        doc.quadraticCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        return cy += a[3];\n      },\n      T: function(doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        } else {\n          px = cx - (px - cx);\n          py = cy - (py - cy);\n        }\n        doc.quadraticCurveTo(px, py, a[0], a[1]);\n        px = cx - (px - cx);\n        py = cy - (py - cy);\n        cx = a[0];\n        return cy = a[1];\n      },\n      t: function(doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        } else {\n          px = cx - (px - cx);\n          py = cy - (py - cy);\n        }\n        doc.quadraticCurveTo(px, py, cx + a[0], cy + a[1]);\n        cx += a[0];\n        return cy += a[1];\n      },\n      A: function(doc, a) {\n        solveArc(doc, cx, cy, a);\n        cx = a[5];\n        return cy = a[6];\n      },\n      a: function(doc, a) {\n        a[5] += cx;\n        a[6] += cy;\n        solveArc(doc, cx, cy, a);\n        cx = a[5];\n        return cy = a[6];\n      },\n      L: function(doc, a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      l: function(doc, a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      H: function(doc, a) {\n        cx = a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      h: function(doc, a) {\n        cx += a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      V: function(doc, a) {\n        cy = a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      v: function(doc, a) {\n        cy += a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      Z: function(doc) {\n        doc.closePath();\n        cx = sx;\n        return cy = sy;\n      },\n      z: function(doc) {\n        doc.closePath();\n        cx = sx;\n        return cy = sy;\n      }\n    };\n\n    solveArc = function(doc, x, y, coords) {\n      var bez, ex, ey, j, large, len, results, rot, rx, ry, seg, segs, sweep;\n      rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], ex = coords[5], ey = coords[6];\n      segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n      results = [];\n      for (j = 0, len = segs.length; j < len; j++) {\n        seg = segs[j];\n        bez = segmentToBezier.apply(null, seg);\n        results.push(doc.bezierCurveTo.apply(doc, bez));\n      }\n      return results;\n    };\n\n    arcToSegments = function(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n      var a00, a01, a10, a11, cos_th, d, i, j, pl, ref, result, segments, sfactor, sfactor_sq, sin_th, th, th0, th1, th2, th3, th_arc, x0, x1, xc, y0, y1, yc;\n      th = rotateX * (Math.PI / 180);\n      sin_th = Math.sin(th);\n      cos_th = Math.cos(th);\n      rx = Math.abs(rx);\n      ry = Math.abs(ry);\n      px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n      py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n      pl = (px * px) / (rx * rx) + (py * py) / (ry * ry);\n      if (pl > 1) {\n        pl = Math.sqrt(pl);\n        rx *= pl;\n        ry *= pl;\n      }\n      a00 = cos_th / rx;\n      a01 = sin_th / rx;\n      a10 = (-sin_th) / ry;\n      a11 = cos_th / ry;\n      x0 = a00 * ox + a01 * oy;\n      y0 = a10 * ox + a11 * oy;\n      x1 = a00 * x + a01 * y;\n      y1 = a10 * x + a11 * y;\n      d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n      sfactor_sq = 1 / d - 0.25;\n      if (sfactor_sq < 0) {\n        sfactor_sq = 0;\n      }\n      sfactor = Math.sqrt(sfactor_sq);\n      if (sweep === large) {\n        sfactor = -sfactor;\n      }\n      xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n      yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n      th0 = Math.atan2(y0 - yc, x0 - xc);\n      th1 = Math.atan2(y1 - yc, x1 - xc);\n      th_arc = th1 - th0;\n      if (th_arc < 0 && sweep === 1) {\n        th_arc += 2 * Math.PI;\n      } else if (th_arc > 0 && sweep === 0) {\n        th_arc -= 2 * Math.PI;\n      }\n      segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n      result = [];\n      for (i = j = 0, ref = segments; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        th2 = th0 + i * th_arc / segments;\n        th3 = th0 + (i + 1) * th_arc / segments;\n        result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n      }\n      return result;\n    };\n\n    segmentToBezier = function(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n      var a00, a01, a10, a11, t, th_half, x1, x2, x3, y1, y2, y3;\n      a00 = cos_th * rx;\n      a01 = -sin_th * ry;\n      a10 = sin_th * rx;\n      a11 = cos_th * ry;\n      th_half = 0.5 * (th1 - th0);\n      t = (8 / 3) * Math.sin(th_half * 0.5) * Math.sin(th_half * 0.5) / Math.sin(th_half);\n      x1 = cx + Math.cos(th0) - t * Math.sin(th0);\n      y1 = cy + Math.sin(th0) + t * Math.cos(th0);\n      x3 = cx + Math.cos(th1);\n      y3 = cy + Math.sin(th1);\n      x2 = x3 + t * Math.sin(th1);\n      y2 = y3 - t * Math.cos(th1);\n      return [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];\n    };\n\n    return SVGPath;\n\n  })();\n\n  module.exports = SVGPath;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}