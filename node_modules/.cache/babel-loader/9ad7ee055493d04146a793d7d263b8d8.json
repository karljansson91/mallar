{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _renderPath = _interopRequireDefault(require(\"./renderPath\"));\n\nvar _renderRect = _interopRequireDefault(require(\"./renderRect\"));\n\nvar _renderLine = _interopRequireDefault(require(\"./renderLine\"));\n\nvar _renderGroup = _interopRequireDefault(require(\"./renderGroup\"));\n\nvar _renderCircle = _interopRequireDefault(require(\"./renderCircle\"));\n\nvar _renderSvgText = _interopRequireDefault(require(\"./renderSvgText\"));\n\nvar _renderEllipse = _interopRequireDefault(require(\"./renderEllipse\"));\n\nvar _renderPolygon = _interopRequireDefault(require(\"./renderPolygon\"));\n\nvar _renderPolyline = _interopRequireDefault(require(\"./renderPolyline\"));\n\nvar _renderSvgImage = _interopRequireDefault(require(\"./renderSvgImage\"));\n\nvar _isPath = _interopRequireDefault(require(\"../utils/isPath\"));\n\nvar _isText = _interopRequireDefault(require(\"../utils/isText\"));\n\nvar _isRect = _interopRequireDefault(require(\"../utils/isRect\"));\n\nvar _isLine = _interopRequireDefault(require(\"../utils/isLine\"));\n\nvar _isTspan = _interopRequireDefault(require(\"../utils/isTspan\"));\n\nvar _isImage = _interopRequireDefault(require(\"../utils/isImage\"));\n\nvar _isGroup = _interopRequireDefault(require(\"../utils/isGroup\"));\n\nvar _isCircle = _interopRequireDefault(require(\"../utils/isCircle\"));\n\nvar _isEllipse = _interopRequireDefault(require(\"../utils/isEllipse\"));\n\nvar _isPolygon = _interopRequireDefault(require(\"../utils/isPolygon\"));\n\nvar _isPolyline = _interopRequireDefault(require(\"../utils/isPolyline\"));\n\nvar _isTextInstance = _interopRequireDefault(require(\"../utils/isTextInstance\"));\n\nvar _save = _interopRequireDefault(require(\"../operations/save\"));\n\nvar _restore = _interopRequireDefault(require(\"../operations/restore\"));\n\nvar _clipNode = _interopRequireDefault(require(\"../operations/clipNode\"));\n\nvar _transform = _interopRequireDefault(require(\"../operations/transform\"));\n\nvar _getBoundingBox = _interopRequireDefault(require(\"../svg/getBoundingBox\"));\n\nconst warnUnsupportedNode = R.tap(node => {\n  console.warn(`SVG node of type ${node.type} is not currenty supported`);\n});\n\nconst getProp = (d, p, v) => R.pathOr(d, ['props', p], v);\n\nconst setStrokeWidth = ctx => node => {\n  const lineWidth = getProp(0, 'strokeWidth', node);\n  if (lineWidth) ctx.lineWidth(lineWidth);\n  return node;\n};\n\nconst setStrokeColor = ctx => node => {\n  const strokeColor = getProp(null, 'stroke', node);\n  if (strokeColor) ctx.strokeColor(strokeColor);\n  return node;\n};\n\nconst setOpacity = ctx => node => {\n  const opacity = getProp(null, 'opacity', node);\n  if (!R.isNil(opacity)) ctx.opacity(opacity);\n  return node;\n};\n\nconst setFillOpacity = ctx => node => {\n  const fillOpacity = getProp(null, 'fillOpacity', node);\n  if (!R.isNil(fillOpacity)) ctx.fillOpacity(fillOpacity);\n  return node;\n};\n\nconst setStrokeOpacity = ctx => node => {\n  const strokeOpacity = getProp(null, 'strokeOpacity', node);\n  if (!R.isNil(strokeOpacity)) ctx.strokeOpacity(strokeOpacity);\n  return node;\n};\n\nconst setLineJoin = ctx => node => {\n  const lineJoin = getProp(null, 'strokeLinejoin', node);\n  if (lineJoin) ctx.lineJoin(lineJoin);\n  return node;\n};\n\nconst setLineCap = ctx => node => {\n  const lineCap = getProp(null, 'strokeLinecap', node);\n  if (lineCap) ctx.lineCap(lineCap);\n  return node;\n};\n\nconst setLineDash = ctx => node => {\n  const value = getProp(null, 'strokeDasharray', node);\n  if (value) ctx.dash(R.split(',', value));\n  return node;\n};\n\nconst hasLinearGradientFill = R.pathEq(['props', 'fill', 'type'], P.LinearGradient);\nconst hasRadialGradientFill = R.pathEq(['props', 'fill', 'type'], P.RadialGradient); // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\n\nconst setLinearGradientFill = ctx => R.tap(node => {\n  const bbox = (0, _getBoundingBox.default)(node);\n  const gradient = getProp(null, 'fill', node);\n  const x1 = R.pathOr(0, ['props', 'x1'], gradient);\n  const y1 = R.pathOr(0, ['props', 'y1'], gradient);\n  const x2 = R.pathOr(1, ['props', 'x2'], gradient);\n  const y2 = R.pathOr(0, ['props', 'y2'], gradient);\n  const m0 = bbox[2] - bbox[0];\n  const m3 = bbox[3] - bbox[1];\n  const m4 = bbox[0];\n  const m5 = bbox[1];\n  const gx1 = m0 * x1 + m4;\n  const gy1 = m3 * y1 + m5;\n  const gx2 = m0 * x2 + m4;\n  const gy2 = m3 * y2 + m5;\n  const grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n  gradient.children.forEach(stop => {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n}); // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\n\n\nconst setRadialGradientFill = ctx => R.tap(node => {\n  const bbox = (0, _getBoundingBox.default)(node);\n  const gradient = getProp(null, 'fill', node);\n  const cx = R.pathOr(0.5, ['props', 'cx'], gradient);\n  const cy = R.pathOr(0.5, ['props', 'cy'], gradient);\n  const fx = R.pathOr(cx, ['props', 'fx'], gradient);\n  const fy = R.pathOr(cy, ['props', 'fy'], gradient);\n  const r = R.pathOr(0.5, ['props', 'r'], gradient);\n  const m0 = bbox[2] - bbox[0];\n  const m3 = bbox[3] - bbox[1];\n  const m4 = bbox[0];\n  const m5 = bbox[1];\n  const gr = r * m0;\n  const gcx = m0 * cx + m4;\n  const gcy = m3 * cy + m5;\n  const gfx = m0 * fx + m4;\n  const gfy = m3 * fy + m5;\n  const grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n  gradient.children.forEach(stop => {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n});\n\nconst setFillColor = ctx => R.tap(node => {\n  const fillColor = getProp(null, 'fill', node);\n  if (fillColor) ctx.fillColor(fillColor);\n});\n\nconst setFill = ctx => R.cond([[hasLinearGradientFill, setLinearGradientFill(ctx)], [hasRadialGradientFill, setRadialGradientFill(ctx)], [R.T, setFillColor(ctx)]]);\n\nconst draw = ctx => node => {\n  const props = R.propOr({}, 'props', node);\n\n  if (props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if (props.fill) {\n    ctx.fill(props.fillRule);\n  } else if (props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n\n  return node;\n};\n\nconst renderNode = ctx => R.cond([[_isTspan.default, R.identity], [_isTextInstance.default, R.identity], [_isPath.default, (0, _renderPath.default)(ctx)], [_isRect.default, (0, _renderRect.default)(ctx)], [_isLine.default, (0, _renderLine.default)(ctx)], [_isGroup.default, (0, _renderGroup.default)(ctx)], [_isText.default, (0, _renderSvgText.default)(ctx)], [_isCircle.default, (0, _renderCircle.default)(ctx)], [_isImage.default, (0, _renderSvgImage.default)(ctx)], [_isEllipse.default, (0, _renderEllipse.default)(ctx)], [_isPolygon.default, (0, _renderPolygon.default)(ctx)], [_isPolyline.default, (0, _renderPolyline.default)(ctx)], [R.T, warnUnsupportedNode]]);\n\nconst drawNode = ctx => R.compose(draw(ctx), renderNode(ctx), (0, _transform.default)(ctx), setOpacity(ctx), setFillOpacity(ctx), setStrokeOpacity(ctx), setFill(ctx), setStrokeColor(ctx), setStrokeWidth(ctx), setLineJoin(ctx), setLineDash(ctx), setLineCap(ctx));\n\nconst clipPath = ctx => node => {\n  const value = R.path(['props', 'clipPath'], node);\n\n  if (value) {\n    R.compose(() => ctx.clip(), R.forEach(renderNode(ctx)), R.propOr([], 'children'))(value);\n  }\n\n  return node;\n};\n\nconst drawChildren = ctx => node => R.compose(R.map(R.compose((0, _restore.default)(ctx), drawChildren(ctx), drawNode(ctx), clipPath(ctx), (0, _save.default)(ctx))), R.propOr([], 'children'))(node);\n\nconst defaultsZero = R.pathOr(0);\n\nconst resolveAspectRatio = ctx => node => {\n  const {\n    width,\n    height\n  } = node.box;\n  const {\n    viewBox,\n    preserveAspectRatio = {}\n  } = node.props;\n  const {\n    meetOrSlice = 'meet',\n    align = 'xMidYMid'\n  } = preserveAspectRatio;\n  if (viewBox == null || width == null || height == null) return node;\n  const x = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minX) || 0;\n  const y = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minY) || 0;\n  const logicalWidth = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxX) || width;\n  const logicalHeight = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxY) || height;\n  const logicalRatio = logicalWidth / logicalHeight;\n  const physicalRatio = width / height;\n  const scaleX = width / logicalWidth;\n  const scaleY = height / logicalHeight;\n\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return node;\n  }\n\n  if (logicalRatio < physicalRatio && meetOrSlice === 'meet' || logicalRatio >= physicalRatio && meetOrSlice === 'slice') {\n    ctx.scale(scaleY, scaleY);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height) / 2, -y);\n        break;\n\n      default:\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height), -y);\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width) / 2);\n        break;\n\n      default:\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width));\n    }\n  }\n\n  return node;\n};\n\nconst moveToOrigin = ctx => node => {\n  const {\n    top,\n    left\n  } = node.box;\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingTop = defaultsZero('paddingTop', node.box);\n  ctx.translate(left + paddingLeft, top + paddingTop);\n  return node;\n};\n\nconst renderSvg = (ctx, node) => {\n  R.compose((0, _restore.default)(ctx), drawChildren(ctx), resolveAspectRatio(ctx), moveToOrigin(ctx), (0, _clipNode.default)(ctx), (0, _save.default)(ctx))(node);\n  return node;\n};\n\nvar _default = R.curryN(2, renderSvg);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/render/lib/primitives/renderSvg.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","P","_renderPath","_renderRect","_renderLine","_renderGroup","_renderCircle","_renderSvgText","_renderEllipse","_renderPolygon","_renderPolyline","_renderSvgImage","_isPath","_isText","_isRect","_isLine","_isTspan","_isImage","_isGroup","_isCircle","_isEllipse","_isPolygon","_isPolyline","_isTextInstance","_save","_restore","_clipNode","_transform","_getBoundingBox","warnUnsupportedNode","tap","node","console","warn","type","getProp","d","p","v","pathOr","setStrokeWidth","ctx","lineWidth","setStrokeColor","strokeColor","setOpacity","opacity","isNil","setFillOpacity","fillOpacity","setStrokeOpacity","strokeOpacity","setLineJoin","lineJoin","setLineCap","lineCap","setLineDash","value","dash","split","hasLinearGradientFill","pathEq","LinearGradient","hasRadialGradientFill","RadialGradient","setLinearGradientFill","bbox","gradient","x1","y1","x2","y2","m0","m3","m4","m5","gx1","gy1","gx2","gy2","grad","linearGradient","children","forEach","stop","props","offset","stopColor","stopOpacity","fill","setRadialGradientFill","cx","cy","fx","fy","r","gr","gcx","gcy","gfx","gfy","radialGradient","setFillColor","fillColor","setFill","cond","T","draw","propOr","stroke","fillAndStroke","fillRule","save","restore","renderNode","identity","drawNode","compose","clipPath","path","clip","drawChildren","map","defaultsZero","resolveAspectRatio","width","height","box","viewBox","preserveAspectRatio","meetOrSlice","align","x","minX","y","minY","logicalWidth","maxX","logicalHeight","maxY","logicalRatio","physicalRatio","scaleX","scaleY","scale","translate","moveToOrigin","top","left","paddingLeft","paddingTop","renderSvg","_default","curryN"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _renderPath = _interopRequireDefault(require(\"./renderPath\"));\n\nvar _renderRect = _interopRequireDefault(require(\"./renderRect\"));\n\nvar _renderLine = _interopRequireDefault(require(\"./renderLine\"));\n\nvar _renderGroup = _interopRequireDefault(require(\"./renderGroup\"));\n\nvar _renderCircle = _interopRequireDefault(require(\"./renderCircle\"));\n\nvar _renderSvgText = _interopRequireDefault(require(\"./renderSvgText\"));\n\nvar _renderEllipse = _interopRequireDefault(require(\"./renderEllipse\"));\n\nvar _renderPolygon = _interopRequireDefault(require(\"./renderPolygon\"));\n\nvar _renderPolyline = _interopRequireDefault(require(\"./renderPolyline\"));\n\nvar _renderSvgImage = _interopRequireDefault(require(\"./renderSvgImage\"));\n\nvar _isPath = _interopRequireDefault(require(\"../utils/isPath\"));\n\nvar _isText = _interopRequireDefault(require(\"../utils/isText\"));\n\nvar _isRect = _interopRequireDefault(require(\"../utils/isRect\"));\n\nvar _isLine = _interopRequireDefault(require(\"../utils/isLine\"));\n\nvar _isTspan = _interopRequireDefault(require(\"../utils/isTspan\"));\n\nvar _isImage = _interopRequireDefault(require(\"../utils/isImage\"));\n\nvar _isGroup = _interopRequireDefault(require(\"../utils/isGroup\"));\n\nvar _isCircle = _interopRequireDefault(require(\"../utils/isCircle\"));\n\nvar _isEllipse = _interopRequireDefault(require(\"../utils/isEllipse\"));\n\nvar _isPolygon = _interopRequireDefault(require(\"../utils/isPolygon\"));\n\nvar _isPolyline = _interopRequireDefault(require(\"../utils/isPolyline\"));\n\nvar _isTextInstance = _interopRequireDefault(require(\"../utils/isTextInstance\"));\n\nvar _save = _interopRequireDefault(require(\"../operations/save\"));\n\nvar _restore = _interopRequireDefault(require(\"../operations/restore\"));\n\nvar _clipNode = _interopRequireDefault(require(\"../operations/clipNode\"));\n\nvar _transform = _interopRequireDefault(require(\"../operations/transform\"));\n\nvar _getBoundingBox = _interopRequireDefault(require(\"../svg/getBoundingBox\"));\n\nconst warnUnsupportedNode = R.tap(node => {\n  console.warn(`SVG node of type ${node.type} is not currenty supported`);\n});\n\nconst getProp = (d, p, v) => R.pathOr(d, ['props', p], v);\n\nconst setStrokeWidth = ctx => node => {\n  const lineWidth = getProp(0, 'strokeWidth', node);\n  if (lineWidth) ctx.lineWidth(lineWidth);\n  return node;\n};\n\nconst setStrokeColor = ctx => node => {\n  const strokeColor = getProp(null, 'stroke', node);\n  if (strokeColor) ctx.strokeColor(strokeColor);\n  return node;\n};\n\nconst setOpacity = ctx => node => {\n  const opacity = getProp(null, 'opacity', node);\n  if (!R.isNil(opacity)) ctx.opacity(opacity);\n  return node;\n};\n\nconst setFillOpacity = ctx => node => {\n  const fillOpacity = getProp(null, 'fillOpacity', node);\n  if (!R.isNil(fillOpacity)) ctx.fillOpacity(fillOpacity);\n  return node;\n};\n\nconst setStrokeOpacity = ctx => node => {\n  const strokeOpacity = getProp(null, 'strokeOpacity', node);\n  if (!R.isNil(strokeOpacity)) ctx.strokeOpacity(strokeOpacity);\n  return node;\n};\n\nconst setLineJoin = ctx => node => {\n  const lineJoin = getProp(null, 'strokeLinejoin', node);\n  if (lineJoin) ctx.lineJoin(lineJoin);\n  return node;\n};\n\nconst setLineCap = ctx => node => {\n  const lineCap = getProp(null, 'strokeLinecap', node);\n  if (lineCap) ctx.lineCap(lineCap);\n  return node;\n};\n\nconst setLineDash = ctx => node => {\n  const value = getProp(null, 'strokeDasharray', node);\n  if (value) ctx.dash(R.split(',', value));\n  return node;\n};\n\nconst hasLinearGradientFill = R.pathEq(['props', 'fill', 'type'], P.LinearGradient);\nconst hasRadialGradientFill = R.pathEq(['props', 'fill', 'type'], P.RadialGradient); // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\n\nconst setLinearGradientFill = ctx => R.tap(node => {\n  const bbox = (0, _getBoundingBox.default)(node);\n  const gradient = getProp(null, 'fill', node);\n  const x1 = R.pathOr(0, ['props', 'x1'], gradient);\n  const y1 = R.pathOr(0, ['props', 'y1'], gradient);\n  const x2 = R.pathOr(1, ['props', 'x2'], gradient);\n  const y2 = R.pathOr(0, ['props', 'y2'], gradient);\n  const m0 = bbox[2] - bbox[0];\n  const m3 = bbox[3] - bbox[1];\n  const m4 = bbox[0];\n  const m5 = bbox[1];\n  const gx1 = m0 * x1 + m4;\n  const gy1 = m3 * y1 + m5;\n  const gx2 = m0 * x2 + m4;\n  const gy2 = m3 * y2 + m5;\n  const grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n  gradient.children.forEach(stop => {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n}); // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\n\n\nconst setRadialGradientFill = ctx => R.tap(node => {\n  const bbox = (0, _getBoundingBox.default)(node);\n  const gradient = getProp(null, 'fill', node);\n  const cx = R.pathOr(0.5, ['props', 'cx'], gradient);\n  const cy = R.pathOr(0.5, ['props', 'cy'], gradient);\n  const fx = R.pathOr(cx, ['props', 'fx'], gradient);\n  const fy = R.pathOr(cy, ['props', 'fy'], gradient);\n  const r = R.pathOr(0.5, ['props', 'r'], gradient);\n  const m0 = bbox[2] - bbox[0];\n  const m3 = bbox[3] - bbox[1];\n  const m4 = bbox[0];\n  const m5 = bbox[1];\n  const gr = r * m0;\n  const gcx = m0 * cx + m4;\n  const gcy = m3 * cy + m5;\n  const gfx = m0 * fx + m4;\n  const gfy = m3 * fy + m5;\n  const grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n  gradient.children.forEach(stop => {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n});\n\nconst setFillColor = ctx => R.tap(node => {\n  const fillColor = getProp(null, 'fill', node);\n  if (fillColor) ctx.fillColor(fillColor);\n});\n\nconst setFill = ctx => R.cond([[hasLinearGradientFill, setLinearGradientFill(ctx)], [hasRadialGradientFill, setRadialGradientFill(ctx)], [R.T, setFillColor(ctx)]]);\n\nconst draw = ctx => node => {\n  const props = R.propOr({}, 'props', node);\n\n  if (props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if (props.fill) {\n    ctx.fill(props.fillRule);\n  } else if (props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n\n  return node;\n};\n\nconst renderNode = ctx => R.cond([[_isTspan.default, R.identity], [_isTextInstance.default, R.identity], [_isPath.default, (0, _renderPath.default)(ctx)], [_isRect.default, (0, _renderRect.default)(ctx)], [_isLine.default, (0, _renderLine.default)(ctx)], [_isGroup.default, (0, _renderGroup.default)(ctx)], [_isText.default, (0, _renderSvgText.default)(ctx)], [_isCircle.default, (0, _renderCircle.default)(ctx)], [_isImage.default, (0, _renderSvgImage.default)(ctx)], [_isEllipse.default, (0, _renderEllipse.default)(ctx)], [_isPolygon.default, (0, _renderPolygon.default)(ctx)], [_isPolyline.default, (0, _renderPolyline.default)(ctx)], [R.T, warnUnsupportedNode]]);\n\nconst drawNode = ctx => R.compose(draw(ctx), renderNode(ctx), (0, _transform.default)(ctx), setOpacity(ctx), setFillOpacity(ctx), setStrokeOpacity(ctx), setFill(ctx), setStrokeColor(ctx), setStrokeWidth(ctx), setLineJoin(ctx), setLineDash(ctx), setLineCap(ctx));\n\nconst clipPath = ctx => node => {\n  const value = R.path(['props', 'clipPath'], node);\n\n  if (value) {\n    R.compose(() => ctx.clip(), R.forEach(renderNode(ctx)), R.propOr([], 'children'))(value);\n  }\n\n  return node;\n};\n\nconst drawChildren = ctx => node => R.compose(R.map(R.compose((0, _restore.default)(ctx), drawChildren(ctx), drawNode(ctx), clipPath(ctx), (0, _save.default)(ctx))), R.propOr([], 'children'))(node);\n\nconst defaultsZero = R.pathOr(0);\n\nconst resolveAspectRatio = ctx => node => {\n  const {\n    width,\n    height\n  } = node.box;\n  const {\n    viewBox,\n    preserveAspectRatio = {}\n  } = node.props;\n  const {\n    meetOrSlice = 'meet',\n    align = 'xMidYMid'\n  } = preserveAspectRatio;\n  if (viewBox == null || width == null || height == null) return node;\n  const x = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minX) || 0;\n  const y = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minY) || 0;\n  const logicalWidth = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxX) || width;\n  const logicalHeight = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxY) || height;\n  const logicalRatio = logicalWidth / logicalHeight;\n  const physicalRatio = width / height;\n  const scaleX = width / logicalWidth;\n  const scaleY = height / logicalHeight;\n\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return node;\n  }\n\n  if (logicalRatio < physicalRatio && meetOrSlice === 'meet' || logicalRatio >= physicalRatio && meetOrSlice === 'slice') {\n    ctx.scale(scaleY, scaleY);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height) / 2, -y);\n        break;\n\n      default:\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height), -y);\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width) / 2);\n        break;\n\n      default:\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width));\n    }\n  }\n\n  return node;\n};\n\nconst moveToOrigin = ctx => node => {\n  const {\n    top,\n    left\n  } = node.box;\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingTop = defaultsZero('paddingTop', node.box);\n  ctx.translate(left + paddingLeft, top + paddingTop);\n  return node;\n};\n\nconst renderSvg = (ctx, node) => {\n  R.compose((0, _restore.default)(ctx), drawChildren(ctx), resolveAspectRatio(ctx), moveToOrigin(ctx), (0, _clipNode.default)(ctx), (0, _save.default)(ctx))(node);\n  return node;\n};\n\nvar _default = R.curryN(2, renderSvg);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}