{"ast":null,"code":"var _jsxFileName = \"/Users/kaja/Code/mallar/app/src/CvForm/Experience.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport InfoCard from './InfoCard';\nimport { ExperienceStateContext, ExperienceDispatchContext } from 'context/experience';\nimport styled from 'styled-components';\nimport { Trash, ArrowUp, ArrowDown, BoxArrowUpRight, BoxArrowInDownLeft } from 'react-bootstrap-icons';\nimport { FormLabel } from './Form';\nconst TitleWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n`;\nconst Title = styled.span`\n    font-weight: bold;\n`;\nconst DeleteIcon = styled(Trash)`\n    width: 24px;\n    height: 24px;\n    margin: 10px;\n`;\nconst HideWrapper = styled.div`\n    display: ${props => props.displayInfo ? \"block\" : \"none\"};\n`;\nconst ArrowUpIcon = styled(BoxArrowUpRight)`\n    width: 24px;\n    height: 24px;\n    margin: 10px;\n    fill: #ced4da;\n`;\nconst ArrowDownIcon = styled(BoxArrowInDownLeft)`\n    width: 24px;\n    height: 24px;\n    margin: 10px;\n`;\n\nconst Experience = ({\n  employer,\n  role,\n  index\n}) => {\n  let title = employer + (role ? ' - ' + role : '');\n  let typingTimer = null;\n  const [displayInfo, setDisplayInfo] = useState(true);\n  const dipatch = useContext(ExperienceDispatchContext);\n  const state = useContext(ExperienceStateContext);\n\n  const onChange = event => {\n    dipatch({\n      type: 'update',\n      index: index,\n      fieldName: event.target.id,\n      payload: event.currentTarget.value\n    });\n  };\n\n  const onDelete = event => {\n    dipatch({\n      type: 'delete',\n      index: index\n    });\n  };\n\n  useEffect(() => {\n    return function cleanup() {\n      clearTimeout(typingTimer);\n    };\n  });\n\n  const onChangeTimeout = event => {\n    const val = event.target.value;\n    const id = event.target.id;\n    clearTimeout(typingTimer);\n    typingTimer = setTimeout(() => {\n      if (val) {\n        dipatch({\n          type: 'update',\n          index: index,\n          fieldName: id,\n          payload: val\n        });\n      }\n    }, 3000);\n  };\n\n  return /*#__PURE__*/React.createElement(InfoCard, {\n    border: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TitleWrapper, {\n    onClick: () => setDisplayInfo(!displayInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, title || ''), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, displayInfo ? /*#__PURE__*/React.createElement(ArrowDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(ArrowUpIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(DeleteIcon, {\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(HideWrapper, {\n    displayInfo: displayInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"employer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"Arbetsgivare\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onBlur: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"workTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, \"Titel\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    onBlur: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"startDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onBlur: onChange,\n    type: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"endDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, \"Slut\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onBlur: onChange,\n    type: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"Beskrivning\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: onChangeTimeout,\n    as: \"textarea\",\n    rows: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Experience;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/src/CvForm/Experience.js"],"names":["React","useState","useContext","useEffect","Form","Col","InfoCard","ExperienceStateContext","ExperienceDispatchContext","styled","Trash","ArrowUp","ArrowDown","BoxArrowUpRight","BoxArrowInDownLeft","FormLabel","TitleWrapper","div","Title","span","DeleteIcon","HideWrapper","props","displayInfo","ArrowUpIcon","ArrowDownIcon","Experience","employer","role","index","title","typingTimer","setDisplayInfo","dipatch","state","onChange","event","type","fieldName","target","id","payload","currentTarget","value","onDelete","cleanup","clearTimeout","onChangeTimeout","val","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport InfoCard from './InfoCard';\nimport { ExperienceStateContext, ExperienceDispatchContext } from 'context/experience'\nimport styled from 'styled-components';\nimport { Trash, ArrowUp, ArrowDown, BoxArrowUpRight, BoxArrowInDownLeft  } from 'react-bootstrap-icons';\nimport { FormLabel } from './Form';\n\nconst TitleWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst Title = styled.span`\n    font-weight: bold;\n`\n\nconst DeleteIcon = styled(Trash)`\n    width: 24px;\n    height: 24px;\n    margin: 10px;\n`\n\nconst HideWrapper = styled.div`\n    display: ${props => props.displayInfo ? \"block\" : \"none\"};\n`\n\nconst ArrowUpIcon = styled(BoxArrowUpRight)`\n    width: 24px;\n    height: 24px;\n    margin: 10px;\n    fill: #ced4da;\n`\n\nconst ArrowDownIcon = styled(BoxArrowInDownLeft)`\n    width: 24px;\n    height: 24px;\n    margin: 10px;\n`\n\nconst Experience = ({employer, role, index}) => {\n    let title = employer + ( role ? ' - ' + role : '')\n    let typingTimer = null;\n    const [ displayInfo, setDisplayInfo ] = useState(true)\n    const dipatch = useContext(ExperienceDispatchContext)\n    const state = useContext(ExperienceStateContext)\n\n    const onChange = (event) => {\n        dipatch({\n            type: 'update',\n            index: index,\n            fieldName: event.target.id,\n            payload: event.currentTarget.value,\n        })\n    }\n\n    const onDelete = (event) => {\n        dipatch({\n            type: 'delete',\n            index: index,\n        })\n    }\n\n    useEffect(() => {\n        return function cleanup() {\n            clearTimeout(typingTimer);\n        };\n    });\n\n    const onChangeTimeout = (event) => {\n        const val = event.target.value;\n        const id = event.target.id;\n        clearTimeout(typingTimer);\n        typingTimer = setTimeout(() => {\n            if (val) {\n                dipatch({\n                    type: 'update',\n                    index: index,\n                    fieldName: id,\n                    payload: val,\n                })\n            }\n        }, 3000);\n    }\n\n    return (\n        <InfoCard border={true}>\n            <TitleWrapper onClick={() =>setDisplayInfo(!displayInfo)}>\n                <Title>{title || ''}</Title>\n                <div>\n                    {displayInfo ? \n                        <ArrowDownIcon/> :\n                        <ArrowUpIcon/>\n                    }\n                    <DeleteIcon onClick={onDelete}/>\n                    \n                </div>\n            </TitleWrapper>\n            <HideWrapper displayInfo={displayInfo}>\n                <Form.Row>\n\n                    <Form.Group as={Col} controlId=\"employer\">\n                        <FormLabel>Arbetsgivare</FormLabel>\n                        <Form.Control onBlur={onChange} />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"workTitle\">\n                        <FormLabel>Titel</FormLabel>\n                        <Form.Control type=\"text\" onBlur={onChange}/>\n                    </Form.Group>\n\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"startDate\">\n                        <FormLabel>Start</FormLabel>\n                        <Form.Control onBlur={onChange} type=\"date\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"endDate\">\n                        <FormLabel>Slut</FormLabel>\n                        <Form.Control onBlur={onChange} type=\"date\"/>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Group controlId=\"description\">\n                    <FormLabel>Beskrivning</FormLabel>\n                    <Form.Control onChange={onChangeTimeout} as=\"textarea\" rows=\"4\"/>\n                </Form.Group>\n            </HideWrapper>\n        </InfoCard>\n    )\n}\n\n\n\nexport default Experience"]},"metadata":{},"sourceType":"module"}