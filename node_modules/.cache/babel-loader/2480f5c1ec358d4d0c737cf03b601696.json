{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _pdfkit = require(\"@react-pdf/pdfkit\");\n/* eslint-disable class-methods-use-this */\n\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = _pdfkit.PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      })\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id)\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  } // Based on empirical observation\n\n\n  get ascent() {\n    return 900;\n  } // Based on empirical observation\n\n\n  get capHeight() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return 650;\n\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return 550;\n\n      default:\n        return 690;\n    }\n  } // Based on empirical observation\n\n\n  get xHeight() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return 440;\n\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return 390;\n\n      default:\n        return 490;\n    }\n  } // Based on empirical observation\n\n\n  get descent() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return -220;\n\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return -230;\n\n      default:\n        return -200;\n    }\n  }\n\n  get lineGap() {\n    return 0;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n\n}\n\nvar _default = StandardFont;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/node_modules/@react-pdf/layout/lib/text/standardFont.js"],"names":["exports","__esModule","default","_pdfkit","require","StandardFont","constructor","src","name","PDFFont","open","layout","str","encoded","positions","encode","stringIndices","map","_","i","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","font","characterToGlyph","hasGlyphForCodePoint","ascent","capHeight","xHeight","descent","lineGap","unitsPerEm","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _pdfkit = require(\"@react-pdf/pdfkit\");\n\n/* eslint-disable class-methods-use-this */\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = _pdfkit.PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      })\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id)\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  } // Based on empirical observation\n\n\n  get ascent() {\n    return 900;\n  } // Based on empirical observation\n\n\n  get capHeight() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return 650;\n\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return 550;\n\n      default:\n        return 690;\n    }\n  } // Based on empirical observation\n\n\n  get xHeight() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return 440;\n\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return 390;\n\n      default:\n        return 490;\n    }\n  } // Based on empirical observation\n\n\n  get descent() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return -220;\n\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return -230;\n\n      default:\n        return -200;\n    }\n  }\n\n  get lineGap() {\n    return 0;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n\n}\n\nvar _default = StandardFont;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}