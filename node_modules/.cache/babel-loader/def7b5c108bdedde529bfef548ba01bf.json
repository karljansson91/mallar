{"ast":null,"code":"// Generated by CoffeeScript 1.12.1\n(function () {\n  var AFMFont,\n      PDFFont,\n      StandardFont,\n      fs,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  AFMFont = require('./afm');\n  PDFFont = require('../font');\n  fs = require('fs');\n\n  StandardFont = function (superClass) {\n    var STANDARD_FONTS;\n    extend(StandardFont, superClass);\n\n    function StandardFont(document, name1, id) {\n      var ref;\n      this.document = document;\n      this.name = name1;\n      this.id = id;\n      this.font = new AFMFont(STANDARD_FONTS[this.name]());\n      ref = this.font, this.ascender = ref.ascender, this.descender = ref.descender, this.bbox = ref.bbox, this.lineGap = ref.lineGap;\n    }\n\n    StandardFont.prototype.embed = function () {\n      this.dictionary.data = {\n        Type: 'Font',\n        BaseFont: this.name,\n        Subtype: 'Type1',\n        Encoding: 'WinAnsiEncoding'\n      };\n      return this.dictionary.end();\n    };\n\n    StandardFont.prototype.encode = function (text) {\n      var advances, encoded, glyph, glyphs, i, j, len, positions;\n      encoded = this.font.encodeText(text);\n      glyphs = this.font.glyphsForString('' + text);\n      advances = this.font.advancesForGlyphs(glyphs);\n      positions = [];\n\n      for (i = j = 0, len = glyphs.length; j < len; i = ++j) {\n        glyph = glyphs[i];\n        positions.push({\n          xAdvance: advances[i],\n          yAdvance: 0,\n          xOffset: 0,\n          yOffset: 0,\n          advanceWidth: this.font.widthOfGlyph(glyph)\n        });\n      }\n\n      return [encoded, positions];\n    };\n\n    StandardFont.prototype.widthOfString = function (string, size) {\n      var advance, advances, glyphs, j, len, scale, width;\n      glyphs = this.font.glyphsForString('' + string);\n      advances = this.font.advancesForGlyphs(glyphs);\n      width = 0;\n\n      for (j = 0, len = advances.length; j < len; j++) {\n        advance = advances[j];\n        width += advance;\n      }\n\n      scale = size / 1000;\n      return width * scale;\n    };\n\n    StandardFont.isStandardFont = function (name) {\n      return name in STANDARD_FONTS;\n    };\n\n    STANDARD_FONTS = {\n      \"Courier\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier.afm\", 'utf8');\n      },\n      \"Courier-Bold\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier-Bold.afm\", 'utf8');\n      },\n      \"Courier-Oblique\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier-Oblique.afm\", 'utf8');\n      },\n      \"Courier-BoldOblique\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier-BoldOblique.afm\", 'utf8');\n      },\n      \"Helvetica\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica.afm\", 'utf8');\n      },\n      \"Helvetica-Bold\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica-Bold.afm\", 'utf8');\n      },\n      \"Helvetica-Oblique\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica-Oblique.afm\", 'utf8');\n      },\n      \"Helvetica-BoldOblique\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica-BoldOblique.afm\", 'utf8');\n      },\n      \"Times-Roman\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-Roman.afm\", 'utf8');\n      },\n      \"Times-Bold\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-Bold.afm\", 'utf8');\n      },\n      \"Times-Italic\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-Italic.afm\", 'utf8');\n      },\n      \"Times-BoldItalic\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-BoldItalic.afm\", 'utf8');\n      },\n      \"Symbol\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/Symbol.afm\", 'utf8');\n      },\n      \"ZapfDingbats\": function () {\n        return fs.readFileSync(__dirname + \"/../font/data/ZapfDingbats.afm\", 'utf8');\n      }\n    };\n    return StandardFont;\n  }(PDFFont);\n\n  module.exports = StandardFont;\n}).call(this);","map":{"version":3,"sources":["/Users/kaja/Code/mallar/node_modules/pdfkit/js/font/standard.js"],"names":["AFMFont","PDFFont","StandardFont","fs","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","superClass","STANDARD_FONTS","document","name1","id","ref","name","font","ascender","descender","bbox","lineGap","embed","dictionary","data","Type","BaseFont","Subtype","Encoding","end","encode","text","advances","encoded","glyph","glyphs","i","j","len","positions","encodeText","glyphsForString","advancesForGlyphs","length","push","xAdvance","yAdvance","xOffset","yOffset","advanceWidth","widthOfGlyph","widthOfString","string","size","advance","scale","width","isStandardFont","readFileSync","__dirname","module","exports"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.1\n(function() {\n  var AFMFont, PDFFont, StandardFont, fs,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  AFMFont = require('./afm');\n\n  PDFFont = require('../font');\n\n  fs = require('fs');\n\n  StandardFont = (function(superClass) {\n    var STANDARD_FONTS;\n\n    extend(StandardFont, superClass);\n\n    function StandardFont(document, name1, id) {\n      var ref;\n      this.document = document;\n      this.name = name1;\n      this.id = id;\n      this.font = new AFMFont(STANDARD_FONTS[this.name]());\n      ref = this.font, this.ascender = ref.ascender, this.descender = ref.descender, this.bbox = ref.bbox, this.lineGap = ref.lineGap;\n    }\n\n    StandardFont.prototype.embed = function() {\n      this.dictionary.data = {\n        Type: 'Font',\n        BaseFont: this.name,\n        Subtype: 'Type1',\n        Encoding: 'WinAnsiEncoding'\n      };\n      return this.dictionary.end();\n    };\n\n    StandardFont.prototype.encode = function(text) {\n      var advances, encoded, glyph, glyphs, i, j, len, positions;\n      encoded = this.font.encodeText(text);\n      glyphs = this.font.glyphsForString('' + text);\n      advances = this.font.advancesForGlyphs(glyphs);\n      positions = [];\n      for (i = j = 0, len = glyphs.length; j < len; i = ++j) {\n        glyph = glyphs[i];\n        positions.push({\n          xAdvance: advances[i],\n          yAdvance: 0,\n          xOffset: 0,\n          yOffset: 0,\n          advanceWidth: this.font.widthOfGlyph(glyph)\n        });\n      }\n      return [encoded, positions];\n    };\n\n    StandardFont.prototype.widthOfString = function(string, size) {\n      var advance, advances, glyphs, j, len, scale, width;\n      glyphs = this.font.glyphsForString('' + string);\n      advances = this.font.advancesForGlyphs(glyphs);\n      width = 0;\n      for (j = 0, len = advances.length; j < len; j++) {\n        advance = advances[j];\n        width += advance;\n      }\n      scale = size / 1000;\n      return width * scale;\n    };\n\n    StandardFont.isStandardFont = function(name) {\n      return name in STANDARD_FONTS;\n    };\n\n    STANDARD_FONTS = {\n      \"Courier\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier.afm\", 'utf8');\n      },\n      \"Courier-Bold\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier-Bold.afm\", 'utf8');\n      },\n      \"Courier-Oblique\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier-Oblique.afm\", 'utf8');\n      },\n      \"Courier-BoldOblique\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier-BoldOblique.afm\", 'utf8');\n      },\n      \"Helvetica\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica.afm\", 'utf8');\n      },\n      \"Helvetica-Bold\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica-Bold.afm\", 'utf8');\n      },\n      \"Helvetica-Oblique\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica-Oblique.afm\", 'utf8');\n      },\n      \"Helvetica-BoldOblique\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica-BoldOblique.afm\", 'utf8');\n      },\n      \"Times-Roman\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-Roman.afm\", 'utf8');\n      },\n      \"Times-Bold\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-Bold.afm\", 'utf8');\n      },\n      \"Times-Italic\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-Italic.afm\", 'utf8');\n      },\n      \"Times-BoldItalic\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-BoldItalic.afm\", 'utf8');\n      },\n      \"Symbol\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Symbol.afm\", 'utf8');\n      },\n      \"ZapfDingbats\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/ZapfDingbats.afm\", 'utf8');\n      }\n    };\n\n    return StandardFont;\n\n  })(PDFFont);\n\n  module.exports = StandardFont;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}