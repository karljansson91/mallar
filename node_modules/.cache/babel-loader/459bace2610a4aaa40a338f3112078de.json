{"ast":null,"code":"var _jsxFileName = \"/Users/kaja/Code/mallar/app/src/routes/CvEditor.js\";\nimport React, { useState } from 'react';\nimport Template from 'Templates/Simple';\nimport Form from 'components/Form';\nimport styled from 'styled-components';\nimport { UserContext } from 'context/user';\nimport { ExperienceContext } from 'context/experience';\nimport { SkillContext } from 'context/skill';\nconst Half = styled.div`\n    width: ${props => props.width};\n    display: ${props => props.display};\n    position: ${props => props.fixed ? 'fixed' : 'none'};\n    right: ${props => props.fixed ? '0' : 'none'};\n`;\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direct: row;\n`;\nexport default (() => {\n  const displayModes = {\n    SplitScreen: {\n      formWidth: \"50%\",\n      pdfWidth: \"50%\",\n      formDisplay: \"block\",\n      pdfDisplay: \"block\"\n    },\n    PDFView: {\n      formWidth: \"0%\",\n      pdfWidth: \"100%\",\n      formDisplay: \"none\",\n      pdfDisplay: \"block\"\n    },\n    FormView: {\n      formWidth: \"100%\",\n      pdfWidth: \"0%\",\n      formDisplay: \"block\",\n      pdfDisplay: \"none\"\n    }\n  };\n  const [displayMode, setDisplayMode] = useState(displayModes.SplitScreen);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserContext, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ExperienceContext, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Half, {\n    width: displayMode.formWidth,\n    display: displayMode.formDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Half, {\n    width: displayMode.pdfWidth,\n    display: displayMode.pdfDisplay,\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Template, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  })))));\n});","map":{"version":3,"sources":["/Users/kaja/Code/mallar/app/src/routes/CvEditor.js"],"names":["React","useState","Template","Form","styled","UserContext","ExperienceContext","SkillContext","Half","div","props","width","display","fixed","Wrapper","displayModes","SplitScreen","formWidth","pdfWidth","formDisplay","pdfDisplay","PDFView","FormView","displayMode","setDisplayMode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAI;aACXC,KAAK,IAAIA,KAAK,CAACC,KAAO;eACpBD,KAAK,IAAIA,KAAK,CAACE,OAAQ;gBACtBF,KAAK,IAAIA,KAAK,CAACG,KAAN,GAAc,OAAd,GAAwB,MAAO;aAC3CH,KAAK,IAAIA,KAAK,CAACG,KAAN,GAAc,GAAd,GAAoB,MAAO;CAJjD;AAOA,MAAMC,OAAO,GAAGV,MAAM,CAACK,GAAI;;;CAA3B;AAOA,gBAAe,MAAM;AACjB,QAAMM,YAAY,GAAG;AACjBC,IAAAA,WAAW,EAAE;AACTC,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,WAAW,EAAE,OAHJ;AAITC,MAAAA,UAAU,EAAE;AAJH,KADI;AAOjBC,IAAAA,OAAO,EAAE;AACLJ,MAAAA,SAAS,EAAE,IADN;AAELC,MAAAA,QAAQ,EAAE,MAFL;AAGLC,MAAAA,WAAW,EAAE,MAHR;AAILC,MAAAA,UAAU,EAAE;AAJP,KAPQ;AAajBE,IAAAA,QAAQ,EAAE;AACNL,MAAAA,SAAS,EAAE,MADL;AAENC,MAAAA,QAAQ,EAAE,IAFJ;AAGNC,MAAAA,WAAW,EAAE,OAHP;AAINC,MAAAA,UAAU,EAAE;AAJN;AAbO,GAArB;AAsBA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAACc,YAAY,CAACC,WAAd,CAA9C;AAEA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEO,WAAW,CAACN,SADvB;AAEI,IAAA,OAAO,EAAEM,WAAW,CAACJ,WAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,eAOI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEI,WAAW,CAACL,QADvB;AAEI,IAAA,OAAO,EAAEK,WAAW,CAACH,UAFzB;AAGI,IAAA,KAAK,EAAE,IAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAPJ,CADJ,CADJ,CADJ;AAqBH,CA9CD","sourcesContent":["import React, { useState } from 'react';\nimport Template from 'Templates/Simple';\nimport Form from 'components/Form';\nimport styled from 'styled-components';\nimport { UserContext } from 'context/user'\nimport { ExperienceContext } from 'context/experience'\nimport { SkillContext } from 'context/skill'\n\nconst Half = styled.div`\n    width: ${props => props.width };\n    display: ${props => props.display};\n    position: ${props => props.fixed ? 'fixed' : 'none'};\n    right: ${props => props.fixed ? '0' : 'none'};\n`\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direct: row;\n`\n\n\n\nexport default () => {\n    const displayModes = {\n        SplitScreen: {\n            formWidth: \"50%\",\n            pdfWidth: \"50%\",\n            formDisplay: \"block\",\n            pdfDisplay: \"block\"\n        },\n        PDFView: {\n            formWidth: \"0%\",\n            pdfWidth: \"100%\",\n            formDisplay: \"none\",\n            pdfDisplay: \"block\"\n        },\n        FormView: {\n            formWidth: \"100%\",\n            pdfWidth: \"0%\",\n            formDisplay: \"block\",\n            pdfDisplay: \"none\",\n        },\n\n    }\n\n    const [displayMode, setDisplayMode] = useState(displayModes.SplitScreen)\n\n    return (\n        <Wrapper>\n            <UserContext>\n                <ExperienceContext>\n                    <Half\n                        width={displayMode.formWidth}\n                        display={displayMode.formDisplay}\n                    >\n                        <Form/>\n                    </Half>\n                    <Half\n                        width={displayMode.pdfWidth}\n                        display={displayMode.pdfDisplay}\n                        fixed={true}\n                    >\n                        <Template/>\n                    </Half>\n                </ExperienceContext>\n            </UserContext>\n        </Wrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}